// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nest/trait/sensor.proto

package nest.trait.sensor;

public final class Sensor {
  private Sensor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PassiveInfraredTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     * @return Whether the passiveInfraredSignalValue field is set.
     */
    boolean hasPassiveInfraredSignalValue();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     * @return The passiveInfraredSignalValue.
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredSignalValue();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredSignalValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     * @return Whether the passiveInfraredBaselineValue field is set.
     */
    boolean hasPassiveInfraredBaselineValue();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     * @return The passiveInfraredBaselineValue.
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredBaselineValue();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredBaselineValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     */
    nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait}
   */
  public static final class PassiveInfraredTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait)
      PassiveInfraredTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PassiveInfraredTrait.newBuilder() to construct.
    private PassiveInfraredTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PassiveInfraredTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PassiveInfraredTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PassiveInfraredTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
              if (passiveInfraredSignalValue_ != null) {
                subBuilder = passiveInfraredSignalValue_.toBuilder();
              }
              passiveInfraredSignalValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(passiveInfraredSignalValue_);
                passiveInfraredSignalValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
              if (passiveInfraredBaselineValue_ != null) {
                subBuilder = passiveInfraredBaselineValue_.toBuilder();
              }
              passiveInfraredBaselineValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(passiveInfraredBaselineValue_);
                passiveInfraredBaselineValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.PassiveInfraredTrait.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType}
     */
    public enum PassiveInfraredFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_NONE = 1;</code>
       */
      PASSIVE_INFRARED_FAULT_TYPE_NONE(1),
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      PASSIVE_INFRARED_FAULT_TYPE_UNRESPONSIVE(2),
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_STUCK = 3;</code>
       */
      PASSIVE_INFRARED_FAULT_TYPE_STUCK(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int PASSIVE_INFRARED_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int PASSIVE_INFRARED_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;
      /**
       * <code>PASSIVE_INFRARED_FAULT_TYPE_STUCK = 3;</code>
       */
      public static final int PASSIVE_INFRARED_FAULT_TYPE_STUCK_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PassiveInfraredFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PassiveInfraredFaultType forNumber(int value) {
        switch (value) {
          case 0: return PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED;
          case 1: return PASSIVE_INFRARED_FAULT_TYPE_NONE;
          case 2: return PASSIVE_INFRARED_FAULT_TYPE_UNRESPONSIVE;
          case 3: return PASSIVE_INFRARED_FAULT_TYPE_STUCK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PassiveInfraredFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PassiveInfraredFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PassiveInfraredFaultType>() {
              public PassiveInfraredFaultType findValueByNumber(int number) {
                return PassiveInfraredFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.PassiveInfraredTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final PassiveInfraredFaultType[] VALUES = values();

      public static PassiveInfraredFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PassiveInfraredFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType)
    }

    public interface PassiveInfraredSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       * @return The value.
       */
      com.google.protobuf.FloatValue getValue();
      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample}
     */
    public static final class PassiveInfraredSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample)
        PassiveInfraredSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredSample.newBuilder() to construct.
      private PassiveInfraredSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private com.google.protobuf.FloatValue value_;
      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getValue() {
        return value_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : value_;
      }
      /**
       * <code>.google.protobuf.FloatValue value = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (value_ != null) {
          output.writeMessage(1, getValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample) obj;

        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (!getValue()
              .equals(other.getValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample(this);
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance()) return this;
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue value_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> valueBuilder_;
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         * @return Whether the value field is set.
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         * @return The value.
         */
        public com.google.protobuf.FloatValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public Builder setValue(com.google.protobuf.FloatValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public Builder setValue(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public Builder mergeValue(com.google.protobuf.FloatValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                com.google.protobuf.FloatValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public com.google.protobuf.FloatValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue value = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredSample>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredSample>() {
        @java.lang.Override
        public PassiveInfraredSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       * @return Whether the signalLastValue field is set.
       */
      boolean hasSignalLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       * @return The signalLastValue.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       * @return Whether the baselineLastValue field is set.
       */
      boolean hasBaselineLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       * @return The baselineLastValue.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation}
     */
    public static final class PassiveInfraredFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)
        PassiveInfraredFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredFaultInformation.newBuilder() to construct.
      private PassiveInfraredFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
                if (signalLastValue_ != null) {
                  subBuilder = signalLastValue_.toBuilder();
                }
                signalLastValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(signalLastValue_);
                  signalLastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
                if (baselineLastValue_ != null) {
                  subBuilder = baselineLastValue_.toBuilder();
                }
                baselineLastValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(baselineLastValue_);
                  baselineLastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType result = nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.UNRECOGNIZED : result;
      }

      public static final int SIGNALLASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       * @return Whether the signalLastValue field is set.
       */
      @java.lang.Override
      public boolean hasSignalLastValue() {
        return signalLastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       * @return The signalLastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue() {
        return signalLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder() {
        return getSignalLastValue();
      }

      public static final int BASELINELASTVALUE_FIELD_NUMBER = 4;
      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       * @return Whether the baselineLastValue field is set.
       */
      @java.lang.Override
      public boolean hasBaselineLastValue() {
        return baselineLastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       * @return The baselineLastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue() {
        return baselineLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder() {
        return getBaselineLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (signalLastValue_ != null) {
          output.writeMessage(3, getSignalLastValue());
        }
        if (baselineLastValue_ != null) {
          output.writeMessage(4, getBaselineLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (signalLastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getSignalLastValue());
        }
        if (baselineLastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getBaselineLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasSignalLastValue() != other.hasSignalLastValue()) return false;
        if (hasSignalLastValue()) {
          if (!getSignalLastValue()
              .equals(other.getSignalLastValue())) return false;
        }
        if (hasBaselineLastValue() != other.hasBaselineLastValue()) return false;
        if (hasBaselineLastValue()) {
          if (!getBaselineLastValue()
              .equals(other.getBaselineLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasSignalLastValue()) {
          hash = (37 * hash) + SIGNALLASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getSignalLastValue().hashCode();
        }
        if (hasBaselineLastValue()) {
          hash = (37 * hash) + BASELINELASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getBaselineLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = null;
          } else {
            signalLastValue_ = null;
            signalLastValueBuilder_ = null;
          }
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = null;
          } else {
            baselineLastValue_ = null;
            baselineLastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (signalLastValueBuilder_ == null) {
            result.signalLastValue_ = signalLastValue_;
          } else {
            result.signalLastValue_ = signalLastValueBuilder_.build();
          }
          if (baselineLastValueBuilder_ == null) {
            result.baselineLastValue_ = baselineLastValue_;
          } else {
            result.baselineLastValue_ = baselineLastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasSignalLastValue()) {
            mergeSignalLastValue(other.getSignalLastValue());
          }
          if (other.hasBaselineLastValue()) {
            mergeBaselineLastValue(other.getBaselineLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType result = nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> signalLastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         * @return Whether the signalLastValue field is set.
         */
        public boolean hasSignalLastValue() {
          return signalLastValueBuilder_ != null || signalLastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         * @return The signalLastValue.
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue() {
          if (signalLastValueBuilder_ == null) {
            return signalLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
          } else {
            return signalLastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public Builder setSignalLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalLastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            signalLastValue_ = value;
            onChanged();
          } else {
            signalLastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public Builder setSignalLastValue(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = builderForValue.build();
            onChanged();
          } else {
            signalLastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public Builder mergeSignalLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalLastValueBuilder_ == null) {
            if (signalLastValue_ != null) {
              signalLastValue_ =
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(signalLastValue_).mergeFrom(value).buildPartial();
            } else {
              signalLastValue_ = value;
            }
            onChanged();
          } else {
            signalLastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public Builder clearSignalLastValue() {
          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = null;
            onChanged();
          } else {
            signalLastValue_ = null;
            signalLastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getSignalLastValueBuilder() {
          
          onChanged();
          return getSignalLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder() {
          if (signalLastValueBuilder_ != null) {
            return signalLastValueBuilder_.getMessageOrBuilder();
          } else {
            return signalLastValue_ == null ?
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getSignalLastValueFieldBuilder() {
          if (signalLastValueBuilder_ == null) {
            signalLastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    getSignalLastValue(),
                    getParentForChildren(),
                    isClean());
            signalLastValue_ = null;
          }
          return signalLastValueBuilder_;
        }

        private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> baselineLastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         * @return Whether the baselineLastValue field is set.
         */
        public boolean hasBaselineLastValue() {
          return baselineLastValueBuilder_ != null || baselineLastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         * @return The baselineLastValue.
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue() {
          if (baselineLastValueBuilder_ == null) {
            return baselineLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
          } else {
            return baselineLastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public Builder setBaselineLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineLastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            baselineLastValue_ = value;
            onChanged();
          } else {
            baselineLastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public Builder setBaselineLastValue(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = builderForValue.build();
            onChanged();
          } else {
            baselineLastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public Builder mergeBaselineLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineLastValueBuilder_ == null) {
            if (baselineLastValue_ != null) {
              baselineLastValue_ =
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(baselineLastValue_).mergeFrom(value).buildPartial();
            } else {
              baselineLastValue_ = value;
            }
            onChanged();
          } else {
            baselineLastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public Builder clearBaselineLastValue() {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = null;
            onChanged();
          } else {
            baselineLastValue_ = null;
            baselineLastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getBaselineLastValueBuilder() {
          
          onChanged();
          return getBaselineLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder() {
          if (baselineLastValueBuilder_ != null) {
            return baselineLastValueBuilder_.getMessageOrBuilder();
          } else {
            return baselineLastValue_ == null ?
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getBaselineLastValueFieldBuilder() {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    getBaselineLastValue(),
                    getParentForChildren(),
                    isClean());
            baselineLastValue_ = null;
          }
          return baselineLastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredFaultInformation>() {
        @java.lang.Override
        public PassiveInfraredFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredSignalPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> 
          getSignalSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      int getSignalSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getSignalSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent}
     */
    public static final class PassiveInfraredSignalPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)
        PassiveInfraredSignalPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredSignalPeriodicSamplesEvent.newBuilder() to construct.
      private PassiveInfraredSignalPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredSignalPeriodicSamplesEvent() {
        signalSamples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredSignalPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredSignalPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  signalSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                signalSamples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            signalSamples_ = java.util.Collections.unmodifiableList(signalSamples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SIGNALSAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> signalSamples_;
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getSignalSamplesList() {
        return signalSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getSignalSamplesOrBuilderList() {
        return signalSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      @java.lang.Override
      public int getSignalSamplesCount() {
        return signalSamples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalSamples(int index) {
        return signalSamples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalSamplesOrBuilder(
          int index) {
        return signalSamples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < signalSamples_.size(); i++) {
          output.writeMessage(2, signalSamples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < signalSamples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, signalSamples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSignalSamplesList()
            .equals(other.getSignalSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSignalSamplesCount() > 0) {
          hash = (37 * hash) + SIGNALSAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSignalSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSignalSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (signalSamplesBuilder_ == null) {
            signalSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            signalSamplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (signalSamplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              signalSamples_ = java.util.Collections.unmodifiableList(signalSamples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.signalSamples_ = signalSamples_;
          } else {
            result.signalSamples_ = signalSamplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (signalSamplesBuilder_ == null) {
            if (!other.signalSamples_.isEmpty()) {
              if (signalSamples_.isEmpty()) {
                signalSamples_ = other.signalSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSignalSamplesIsMutable();
                signalSamples_.addAll(other.signalSamples_);
              }
              onChanged();
            }
          } else {
            if (!other.signalSamples_.isEmpty()) {
              if (signalSamplesBuilder_.isEmpty()) {
                signalSamplesBuilder_.dispose();
                signalSamplesBuilder_ = null;
                signalSamples_ = other.signalSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                signalSamplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSignalSamplesFieldBuilder() : null;
              } else {
                signalSamplesBuilder_.addAllMessages(other.signalSamples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> signalSamples_ =
          java.util.Collections.emptyList();
        private void ensureSignalSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            signalSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>(signalSamples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> signalSamplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getSignalSamplesList() {
          if (signalSamplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(signalSamples_);
          } else {
            return signalSamplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public int getSignalSamplesCount() {
          if (signalSamplesBuilder_ == null) {
            return signalSamples_.size();
          } else {
            return signalSamplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalSamples(int index) {
          if (signalSamplesBuilder_ == null) {
            return signalSamples_.get(index);
          } else {
            return signalSamplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder setSignalSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignalSamplesIsMutable();
            signalSamples_.set(index, value);
            onChanged();
          } else {
            signalSamplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder setSignalSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (signalSamplesBuilder_ == null) {
            ensureSignalSamplesIsMutable();
            signalSamples_.set(index, builderForValue.build());
            onChanged();
          } else {
            signalSamplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder addSignalSamples(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignalSamplesIsMutable();
            signalSamples_.add(value);
            onChanged();
          } else {
            signalSamplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder addSignalSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSignalSamplesIsMutable();
            signalSamples_.add(index, value);
            onChanged();
          } else {
            signalSamplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder addSignalSamples(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (signalSamplesBuilder_ == null) {
            ensureSignalSamplesIsMutable();
            signalSamples_.add(builderForValue.build());
            onChanged();
          } else {
            signalSamplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder addSignalSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (signalSamplesBuilder_ == null) {
            ensureSignalSamplesIsMutable();
            signalSamples_.add(index, builderForValue.build());
            onChanged();
          } else {
            signalSamplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder addAllSignalSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> values) {
          if (signalSamplesBuilder_ == null) {
            ensureSignalSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, signalSamples_);
            onChanged();
          } else {
            signalSamplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder clearSignalSamples() {
          if (signalSamplesBuilder_ == null) {
            signalSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            signalSamplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public Builder removeSignalSamples(int index) {
          if (signalSamplesBuilder_ == null) {
            ensureSignalSamplesIsMutable();
            signalSamples_.remove(index);
            onChanged();
          } else {
            signalSamplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getSignalSamplesBuilder(
            int index) {
          return getSignalSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalSamplesOrBuilder(
            int index) {
          if (signalSamplesBuilder_ == null) {
            return signalSamples_.get(index);  } else {
            return signalSamplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
             getSignalSamplesOrBuilderList() {
          if (signalSamplesBuilder_ != null) {
            return signalSamplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(signalSamples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addSignalSamplesBuilder() {
          return getSignalSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addSignalSamplesBuilder(
            int index) {
          return getSignalSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder> 
             getSignalSamplesBuilderList() {
          return getSignalSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getSignalSamplesFieldBuilder() {
          if (signalSamplesBuilder_ == null) {
            signalSamplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    signalSamples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            signalSamples_ = null;
          }
          return signalSamplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredSignalPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredSignalPeriodicSamplesEvent>() {
        @java.lang.Override
        public PassiveInfraredSignalPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredSignalPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredSignalPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredSignalPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredBaselinePeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> 
          getBaselineSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      int getBaselineSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getBaselineSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent}
     */
    public static final class PassiveInfraredBaselinePeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)
        PassiveInfraredBaselinePeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredBaselinePeriodicSamplesEvent.newBuilder() to construct.
      private PassiveInfraredBaselinePeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredBaselinePeriodicSamplesEvent() {
        baselineSamples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredBaselinePeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredBaselinePeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  baselineSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                baselineSamples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            baselineSamples_ = java.util.Collections.unmodifiableList(baselineSamples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int BASELINESAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> baselineSamples_;
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getBaselineSamplesList() {
        return baselineSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getBaselineSamplesOrBuilderList() {
        return baselineSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      @java.lang.Override
      public int getBaselineSamplesCount() {
        return baselineSamples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineSamples(int index) {
        return baselineSamples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineSamplesOrBuilder(
          int index) {
        return baselineSamples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < baselineSamples_.size(); i++) {
          output.writeMessage(2, baselineSamples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < baselineSamples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, baselineSamples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getBaselineSamplesList()
            .equals(other.getBaselineSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getBaselineSamplesCount() > 0) {
          hash = (37 * hash) + BASELINESAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getBaselineSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getBaselineSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (baselineSamplesBuilder_ == null) {
            baselineSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            baselineSamplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (baselineSamplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              baselineSamples_ = java.util.Collections.unmodifiableList(baselineSamples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.baselineSamples_ = baselineSamples_;
          } else {
            result.baselineSamples_ = baselineSamplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (baselineSamplesBuilder_ == null) {
            if (!other.baselineSamples_.isEmpty()) {
              if (baselineSamples_.isEmpty()) {
                baselineSamples_ = other.baselineSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureBaselineSamplesIsMutable();
                baselineSamples_.addAll(other.baselineSamples_);
              }
              onChanged();
            }
          } else {
            if (!other.baselineSamples_.isEmpty()) {
              if (baselineSamplesBuilder_.isEmpty()) {
                baselineSamplesBuilder_.dispose();
                baselineSamplesBuilder_ = null;
                baselineSamples_ = other.baselineSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                baselineSamplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getBaselineSamplesFieldBuilder() : null;
              } else {
                baselineSamplesBuilder_.addAllMessages(other.baselineSamples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> baselineSamples_ =
          java.util.Collections.emptyList();
        private void ensureBaselineSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            baselineSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>(baselineSamples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> baselineSamplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getBaselineSamplesList() {
          if (baselineSamplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(baselineSamples_);
          } else {
            return baselineSamplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public int getBaselineSamplesCount() {
          if (baselineSamplesBuilder_ == null) {
            return baselineSamples_.size();
          } else {
            return baselineSamplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineSamples(int index) {
          if (baselineSamplesBuilder_ == null) {
            return baselineSamples_.get(index);
          } else {
            return baselineSamplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder setBaselineSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBaselineSamplesIsMutable();
            baselineSamples_.set(index, value);
            onChanged();
          } else {
            baselineSamplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder setBaselineSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (baselineSamplesBuilder_ == null) {
            ensureBaselineSamplesIsMutable();
            baselineSamples_.set(index, builderForValue.build());
            onChanged();
          } else {
            baselineSamplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder addBaselineSamples(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBaselineSamplesIsMutable();
            baselineSamples_.add(value);
            onChanged();
          } else {
            baselineSamplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder addBaselineSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBaselineSamplesIsMutable();
            baselineSamples_.add(index, value);
            onChanged();
          } else {
            baselineSamplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder addBaselineSamples(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (baselineSamplesBuilder_ == null) {
            ensureBaselineSamplesIsMutable();
            baselineSamples_.add(builderForValue.build());
            onChanged();
          } else {
            baselineSamplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder addBaselineSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (baselineSamplesBuilder_ == null) {
            ensureBaselineSamplesIsMutable();
            baselineSamples_.add(index, builderForValue.build());
            onChanged();
          } else {
            baselineSamplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder addAllBaselineSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> values) {
          if (baselineSamplesBuilder_ == null) {
            ensureBaselineSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, baselineSamples_);
            onChanged();
          } else {
            baselineSamplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder clearBaselineSamples() {
          if (baselineSamplesBuilder_ == null) {
            baselineSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            baselineSamplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public Builder removeBaselineSamples(int index) {
          if (baselineSamplesBuilder_ == null) {
            ensureBaselineSamplesIsMutable();
            baselineSamples_.remove(index);
            onChanged();
          } else {
            baselineSamplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getBaselineSamplesBuilder(
            int index) {
          return getBaselineSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineSamplesOrBuilder(
            int index) {
          if (baselineSamplesBuilder_ == null) {
            return baselineSamples_.get(index);  } else {
            return baselineSamplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
             getBaselineSamplesOrBuilderList() {
          if (baselineSamplesBuilder_ != null) {
            return baselineSamplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(baselineSamples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addBaselineSamplesBuilder() {
          return getBaselineSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addBaselineSamplesBuilder(
            int index) {
          return getBaselineSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder> 
             getBaselineSamplesBuilderList() {
          return getBaselineSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getBaselineSamplesFieldBuilder() {
          if (baselineSamplesBuilder_ == null) {
            baselineSamplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    baselineSamples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            baselineSamples_ = null;
          }
          return baselineSamplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredBaselinePeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredBaselinePeriodicSamplesEvent>() {
        @java.lang.Override
        public PassiveInfraredBaselinePeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredBaselinePeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredBaselinePeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredBaselinePeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredBaselinePeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredDifferentialPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> 
          getDeltaSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDeltaSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      int getDeltaSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getDeltaSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getDeltaSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent}
     */
    public static final class PassiveInfraredDifferentialPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)
        PassiveInfraredDifferentialPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredDifferentialPeriodicSamplesEvent.newBuilder() to construct.
      private PassiveInfraredDifferentialPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredDifferentialPeriodicSamplesEvent() {
        deltaSamples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredDifferentialPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredDifferentialPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  deltaSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                deltaSamples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            deltaSamples_ = java.util.Collections.unmodifiableList(deltaSamples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int DELTASAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> deltaSamples_;
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getDeltaSamplesList() {
        return deltaSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getDeltaSamplesOrBuilderList() {
        return deltaSamples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      @java.lang.Override
      public int getDeltaSamplesCount() {
        return deltaSamples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDeltaSamples(int index) {
        return deltaSamples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getDeltaSamplesOrBuilder(
          int index) {
        return deltaSamples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < deltaSamples_.size(); i++) {
          output.writeMessage(2, deltaSamples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < deltaSamples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, deltaSamples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getDeltaSamplesList()
            .equals(other.getDeltaSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getDeltaSamplesCount() > 0) {
          hash = (37 * hash) + DELTASAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getDeltaSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getDeltaSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (deltaSamplesBuilder_ == null) {
            deltaSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            deltaSamplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (deltaSamplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              deltaSamples_ = java.util.Collections.unmodifiableList(deltaSamples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.deltaSamples_ = deltaSamples_;
          } else {
            result.deltaSamples_ = deltaSamplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (deltaSamplesBuilder_ == null) {
            if (!other.deltaSamples_.isEmpty()) {
              if (deltaSamples_.isEmpty()) {
                deltaSamples_ = other.deltaSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDeltaSamplesIsMutable();
                deltaSamples_.addAll(other.deltaSamples_);
              }
              onChanged();
            }
          } else {
            if (!other.deltaSamples_.isEmpty()) {
              if (deltaSamplesBuilder_.isEmpty()) {
                deltaSamplesBuilder_.dispose();
                deltaSamplesBuilder_ = null;
                deltaSamples_ = other.deltaSamples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                deltaSamplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDeltaSamplesFieldBuilder() : null;
              } else {
                deltaSamplesBuilder_.addAllMessages(other.deltaSamples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> deltaSamples_ =
          java.util.Collections.emptyList();
        private void ensureDeltaSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            deltaSamples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample>(deltaSamples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> deltaSamplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> getDeltaSamplesList() {
          if (deltaSamplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(deltaSamples_);
          } else {
            return deltaSamplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public int getDeltaSamplesCount() {
          if (deltaSamplesBuilder_ == null) {
            return deltaSamples_.size();
          } else {
            return deltaSamplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getDeltaSamples(int index) {
          if (deltaSamplesBuilder_ == null) {
            return deltaSamples_.get(index);
          } else {
            return deltaSamplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder setDeltaSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (deltaSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeltaSamplesIsMutable();
            deltaSamples_.set(index, value);
            onChanged();
          } else {
            deltaSamplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder setDeltaSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (deltaSamplesBuilder_ == null) {
            ensureDeltaSamplesIsMutable();
            deltaSamples_.set(index, builderForValue.build());
            onChanged();
          } else {
            deltaSamplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder addDeltaSamples(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (deltaSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeltaSamplesIsMutable();
            deltaSamples_.add(value);
            onChanged();
          } else {
            deltaSamplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder addDeltaSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (deltaSamplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeltaSamplesIsMutable();
            deltaSamples_.add(index, value);
            onChanged();
          } else {
            deltaSamplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder addDeltaSamples(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (deltaSamplesBuilder_ == null) {
            ensureDeltaSamplesIsMutable();
            deltaSamples_.add(builderForValue.build());
            onChanged();
          } else {
            deltaSamplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder addDeltaSamples(
            int index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (deltaSamplesBuilder_ == null) {
            ensureDeltaSamplesIsMutable();
            deltaSamples_.add(index, builderForValue.build());
            onChanged();
          } else {
            deltaSamplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder addAllDeltaSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample> values) {
          if (deltaSamplesBuilder_ == null) {
            ensureDeltaSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, deltaSamples_);
            onChanged();
          } else {
            deltaSamplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder clearDeltaSamples() {
          if (deltaSamplesBuilder_ == null) {
            deltaSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            deltaSamplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public Builder removeDeltaSamples(int index) {
          if (deltaSamplesBuilder_ == null) {
            ensureDeltaSamplesIsMutable();
            deltaSamples_.remove(index);
            onChanged();
          } else {
            deltaSamplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getDeltaSamplesBuilder(
            int index) {
          return getDeltaSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getDeltaSamplesOrBuilder(
            int index) {
          if (deltaSamplesBuilder_ == null) {
            return deltaSamples_.get(index);  } else {
            return deltaSamplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
             getDeltaSamplesOrBuilderList() {
          if (deltaSamplesBuilder_ != null) {
            return deltaSamplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(deltaSamples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addDeltaSamplesBuilder() {
          return getDeltaSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder addDeltaSamplesBuilder(
            int index) {
          return getDeltaSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample deltaSamples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder> 
             getDeltaSamplesBuilderList() {
          return getDeltaSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getDeltaSamplesFieldBuilder() {
          if (deltaSamplesBuilder_ == null) {
            deltaSamplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    deltaSamples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            deltaSamples_ = null;
          }
          return deltaSamplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredDifferentialPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredDifferentialPeriodicSamplesEvent>() {
        @java.lang.Override
        public PassiveInfraredDifferentialPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredDifferentialPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredDifferentialPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredDifferentialPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredDifferentialPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       * @return Whether the signalLastValue field is set.
       */
      boolean hasSignalLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       * @return The signalLastValue.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder();

      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       * @return Whether the baselineLastValue field is set.
       */
      boolean hasBaselineLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       * @return The baselineLastValue.
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue();
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       */
      nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent}
     */
    public static final class PassiveInfraredFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)
        PassiveInfraredFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredFaultEvent.newBuilder() to construct.
      private PassiveInfraredFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
                if (signalLastValue_ != null) {
                  subBuilder = signalLastValue_.toBuilder();
                }
                signalLastValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(signalLastValue_);
                  signalLastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder subBuilder = null;
                if (baselineLastValue_ != null) {
                  subBuilder = baselineLastValue_.toBuilder();
                }
                baselineLastValue_ = input.readMessage(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(baselineLastValue_);
                  baselineLastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 290: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType result = nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.UNRECOGNIZED : result;
      }

      public static final int SIGNALLASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       * @return Whether the signalLastValue field is set.
       */
      @java.lang.Override
      public boolean hasSignalLastValue() {
        return signalLastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       * @return The signalLastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue() {
        return signalLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder() {
        return getSignalLastValue();
      }

      public static final int BASELINELASTVALUE_FIELD_NUMBER = 34;
      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       * @return Whether the baselineLastValue field is set.
       */
      @java.lang.Override
      public boolean hasBaselineLastValue() {
        return baselineLastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       * @return The baselineLastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue() {
        return baselineLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder() {
        return getBaselineLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 36;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (signalLastValue_ != null) {
          output.writeMessage(33, getSignalLastValue());
        }
        if (baselineLastValue_ != null) {
          output.writeMessage(34, getBaselineLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(35, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(36, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.PASSIVE_INFRARED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (signalLastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getSignalLastValue());
        }
        if (baselineLastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getBaselineLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(36, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasSignalLastValue() != other.hasSignalLastValue()) return false;
        if (hasSignalLastValue()) {
          if (!getSignalLastValue()
              .equals(other.getSignalLastValue())) return false;
        }
        if (hasBaselineLastValue() != other.hasBaselineLastValue()) return false;
        if (hasBaselineLastValue()) {
          if (!getBaselineLastValue()
              .equals(other.getBaselineLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasSignalLastValue()) {
          hash = (37 * hash) + SIGNALLASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getSignalLastValue().hashCode();
        }
        if (hasBaselineLastValue()) {
          hash = (37 * hash) + BASELINELASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getBaselineLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = null;
          } else {
            signalLastValue_ = null;
            signalLastValueBuilder_ = null;
          }
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = null;
          } else {
            baselineLastValue_ = null;
            baselineLastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (signalLastValueBuilder_ == null) {
            result.signalLastValue_ = signalLastValue_;
          } else {
            result.signalLastValue_ = signalLastValueBuilder_.build();
          }
          if (baselineLastValueBuilder_ == null) {
            result.baselineLastValue_ = baselineLastValue_;
          } else {
            result.baselineLastValue_ = baselineLastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasSignalLastValue()) {
            mergeSignalLastValue(other.getSignalLastValue());
          }
          if (other.hasBaselineLastValue()) {
            mergeBaselineLastValue(other.getBaselineLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType result = nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> signalLastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         * @return Whether the signalLastValue field is set.
         */
        public boolean hasSignalLastValue() {
          return signalLastValueBuilder_ != null || signalLastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         * @return The signalLastValue.
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getSignalLastValue() {
          if (signalLastValueBuilder_ == null) {
            return signalLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
          } else {
            return signalLastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public Builder setSignalLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalLastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            signalLastValue_ = value;
            onChanged();
          } else {
            signalLastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public Builder setSignalLastValue(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = builderForValue.build();
            onChanged();
          } else {
            signalLastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public Builder mergeSignalLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (signalLastValueBuilder_ == null) {
            if (signalLastValue_ != null) {
              signalLastValue_ =
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(signalLastValue_).mergeFrom(value).buildPartial();
            } else {
              signalLastValue_ = value;
            }
            onChanged();
          } else {
            signalLastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public Builder clearSignalLastValue() {
          if (signalLastValueBuilder_ == null) {
            signalLastValue_ = null;
            onChanged();
          } else {
            signalLastValue_ = null;
            signalLastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getSignalLastValueBuilder() {
          
          onChanged();
          return getSignalLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getSignalLastValueOrBuilder() {
          if (signalLastValueBuilder_ != null) {
            return signalLastValueBuilder_.getMessageOrBuilder();
          } else {
            return signalLastValue_ == null ?
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : signalLastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample signalLastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getSignalLastValueFieldBuilder() {
          if (signalLastValueBuilder_ == null) {
            signalLastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    getSignalLastValue(),
                    getParentForChildren(),
                    isClean());
            signalLastValue_ = null;
          }
          return signalLastValueBuilder_;
        }

        private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> baselineLastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         * @return Whether the baselineLastValue field is set.
         */
        public boolean hasBaselineLastValue() {
          return baselineLastValueBuilder_ != null || baselineLastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         * @return The baselineLastValue.
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getBaselineLastValue() {
          if (baselineLastValueBuilder_ == null) {
            return baselineLastValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
          } else {
            return baselineLastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public Builder setBaselineLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineLastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            baselineLastValue_ = value;
            onChanged();
          } else {
            baselineLastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public Builder setBaselineLastValue(
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = builderForValue.build();
            onChanged();
          } else {
            baselineLastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public Builder mergeBaselineLastValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
          if (baselineLastValueBuilder_ == null) {
            if (baselineLastValue_ != null) {
              baselineLastValue_ =
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(baselineLastValue_).mergeFrom(value).buildPartial();
            } else {
              baselineLastValue_ = value;
            }
            onChanged();
          } else {
            baselineLastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public Builder clearBaselineLastValue() {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValue_ = null;
            onChanged();
          } else {
            baselineLastValue_ = null;
            baselineLastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getBaselineLastValueBuilder() {
          
          onChanged();
          return getBaselineLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getBaselineLastValueOrBuilder() {
          if (baselineLastValueBuilder_ != null) {
            return baselineLastValueBuilder_.getMessageOrBuilder();
          } else {
            return baselineLastValue_ == null ?
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : baselineLastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample baselineLastValue = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
            getBaselineLastValueFieldBuilder() {
          if (baselineLastValueBuilder_ == null) {
            baselineLastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                    getBaselineLastValue(),
                    getParentForChildren(),
                    isClean());
            baselineLastValue_ = null;
          }
          return baselineLastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredFaultEvent>() {
        @java.lang.Override
        public PassiveInfraredFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassiveInfraredSignalStatisticsEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @return A list containing the histogramBoundaries.
       */
      java.util.List<java.lang.Integer> getHistogramBoundariesList();
      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @return The count of histogramBoundaries.
       */
      int getHistogramBoundariesCount();
      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @param index The index of the element to return.
       * @return The histogramBoundaries at the given index.
       */
      int getHistogramBoundaries(int index);

      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @return A list containing the histogramCounts.
       */
      java.util.List<java.lang.Integer> getHistogramCountsList();
      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @return The count of histogramCounts.
       */
      int getHistogramCountsCount();
      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @param index The index of the element to return.
       * @return The histogramCounts at the given index.
       */
      int getHistogramCounts(int index);

      /**
       * <code>bool vacancyExpected = 3;</code>
       * @return The vacancyExpected.
       */
      boolean getVacancyExpected();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent}
     */
    public static final class PassiveInfraredSignalStatisticsEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)
        PassiveInfraredSignalStatisticsEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassiveInfraredSignalStatisticsEvent.newBuilder() to construct.
      private PassiveInfraredSignalStatisticsEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassiveInfraredSignalStatisticsEvent() {
        histogramBoundaries_ = emptyIntList();
        histogramCounts_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassiveInfraredSignalStatisticsEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassiveInfraredSignalStatisticsEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  histogramBoundaries_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                histogramBoundaries_.addInt(input.readUInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                  histogramBoundaries_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  histogramBoundaries_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  histogramCounts_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                histogramCounts_.addInt(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                  histogramCounts_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  histogramCounts_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {

                vacancyExpected_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            histogramBoundaries_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            histogramCounts_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.Builder.class);
      }

      public static final int HISTOGRAMBOUNDARIES_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList histogramBoundaries_;
      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @return A list containing the histogramBoundaries.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getHistogramBoundariesList() {
        return histogramBoundaries_;
      }
      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @return The count of histogramBoundaries.
       */
      public int getHistogramBoundariesCount() {
        return histogramBoundaries_.size();
      }
      /**
       * <code>repeated uint32 histogramBoundaries = 1;</code>
       * @param index The index of the element to return.
       * @return The histogramBoundaries at the given index.
       */
      public int getHistogramBoundaries(int index) {
        return histogramBoundaries_.getInt(index);
      }
      private int histogramBoundariesMemoizedSerializedSize = -1;

      public static final int HISTOGRAMCOUNTS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.IntList histogramCounts_;
      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @return A list containing the histogramCounts.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getHistogramCountsList() {
        return histogramCounts_;
      }
      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @return The count of histogramCounts.
       */
      public int getHistogramCountsCount() {
        return histogramCounts_.size();
      }
      /**
       * <code>repeated uint32 histogramCounts = 2;</code>
       * @param index The index of the element to return.
       * @return The histogramCounts at the given index.
       */
      public int getHistogramCounts(int index) {
        return histogramCounts_.getInt(index);
      }
      private int histogramCountsMemoizedSerializedSize = -1;

      public static final int VACANCYEXPECTED_FIELD_NUMBER = 3;
      private boolean vacancyExpected_;
      /**
       * <code>bool vacancyExpected = 3;</code>
       * @return The vacancyExpected.
       */
      @java.lang.Override
      public boolean getVacancyExpected() {
        return vacancyExpected_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getHistogramBoundariesList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(histogramBoundariesMemoizedSerializedSize);
        }
        for (int i = 0; i < histogramBoundaries_.size(); i++) {
          output.writeUInt32NoTag(histogramBoundaries_.getInt(i));
        }
        if (getHistogramCountsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(histogramCountsMemoizedSerializedSize);
        }
        for (int i = 0; i < histogramCounts_.size(); i++) {
          output.writeUInt32NoTag(histogramCounts_.getInt(i));
        }
        if (vacancyExpected_ != false) {
          output.writeBool(3, vacancyExpected_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < histogramBoundaries_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(histogramBoundaries_.getInt(i));
          }
          size += dataSize;
          if (!getHistogramBoundariesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          histogramBoundariesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < histogramCounts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(histogramCounts_.getInt(i));
          }
          size += dataSize;
          if (!getHistogramCountsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          histogramCountsMemoizedSerializedSize = dataSize;
        }
        if (vacancyExpected_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, vacancyExpected_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent other = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent) obj;

        if (!getHistogramBoundariesList()
            .equals(other.getHistogramBoundariesList())) return false;
        if (!getHistogramCountsList()
            .equals(other.getHistogramCountsList())) return false;
        if (getVacancyExpected()
            != other.getVacancyExpected()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getHistogramBoundariesCount() > 0) {
          hash = (37 * hash) + HISTOGRAMBOUNDARIES_FIELD_NUMBER;
          hash = (53 * hash) + getHistogramBoundariesList().hashCode();
        }
        if (getHistogramCountsCount() > 0) {
          hash = (37 * hash) + HISTOGRAMCOUNTS_FIELD_NUMBER;
          hash = (53 * hash) + getHistogramCountsList().hashCode();
        }
        hash = (37 * hash) + VACANCYEXPECTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getVacancyExpected());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          histogramBoundaries_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          histogramCounts_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          vacancyExpected_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent build() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent buildPartial() {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent result = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            histogramBoundaries_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.histogramBoundaries_ = histogramBoundaries_;
          if (((bitField0_ & 0x00000002) != 0)) {
            histogramCounts_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.histogramCounts_ = histogramCounts_;
          result.vacancyExpected_ = vacancyExpected_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent other) {
          if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent.getDefaultInstance()) return this;
          if (!other.histogramBoundaries_.isEmpty()) {
            if (histogramBoundaries_.isEmpty()) {
              histogramBoundaries_ = other.histogramBoundaries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHistogramBoundariesIsMutable();
              histogramBoundaries_.addAll(other.histogramBoundaries_);
            }
            onChanged();
          }
          if (!other.histogramCounts_.isEmpty()) {
            if (histogramCounts_.isEmpty()) {
              histogramCounts_ = other.histogramCounts_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHistogramCountsIsMutable();
              histogramCounts_.addAll(other.histogramCounts_);
            }
            onChanged();
          }
          if (other.getVacancyExpected() != false) {
            setVacancyExpected(other.getVacancyExpected());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList histogramBoundaries_ = emptyIntList();
        private void ensureHistogramBoundariesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            histogramBoundaries_ = mutableCopy(histogramBoundaries_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @return A list containing the histogramBoundaries.
         */
        public java.util.List<java.lang.Integer>
            getHistogramBoundariesList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(histogramBoundaries_) : histogramBoundaries_;
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @return The count of histogramBoundaries.
         */
        public int getHistogramBoundariesCount() {
          return histogramBoundaries_.size();
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @param index The index of the element to return.
         * @return The histogramBoundaries at the given index.
         */
        public int getHistogramBoundaries(int index) {
          return histogramBoundaries_.getInt(index);
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @param index The index to set the value at.
         * @param value The histogramBoundaries to set.
         * @return This builder for chaining.
         */
        public Builder setHistogramBoundaries(
            int index, int value) {
          ensureHistogramBoundariesIsMutable();
          histogramBoundaries_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @param value The histogramBoundaries to add.
         * @return This builder for chaining.
         */
        public Builder addHistogramBoundaries(int value) {
          ensureHistogramBoundariesIsMutable();
          histogramBoundaries_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @param values The histogramBoundaries to add.
         * @return This builder for chaining.
         */
        public Builder addAllHistogramBoundaries(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureHistogramBoundariesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, histogramBoundaries_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramBoundaries = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHistogramBoundaries() {
          histogramBoundaries_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList histogramCounts_ = emptyIntList();
        private void ensureHistogramCountsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            histogramCounts_ = mutableCopy(histogramCounts_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @return A list containing the histogramCounts.
         */
        public java.util.List<java.lang.Integer>
            getHistogramCountsList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(histogramCounts_) : histogramCounts_;
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @return The count of histogramCounts.
         */
        public int getHistogramCountsCount() {
          return histogramCounts_.size();
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @param index The index of the element to return.
         * @return The histogramCounts at the given index.
         */
        public int getHistogramCounts(int index) {
          return histogramCounts_.getInt(index);
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @param index The index to set the value at.
         * @param value The histogramCounts to set.
         * @return This builder for chaining.
         */
        public Builder setHistogramCounts(
            int index, int value) {
          ensureHistogramCountsIsMutable();
          histogramCounts_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @param value The histogramCounts to add.
         * @return This builder for chaining.
         */
        public Builder addHistogramCounts(int value) {
          ensureHistogramCountsIsMutable();
          histogramCounts_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @param values The histogramCounts to add.
         * @return This builder for chaining.
         */
        public Builder addAllHistogramCounts(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureHistogramCountsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, histogramCounts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 histogramCounts = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHistogramCounts() {
          histogramCounts_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private boolean vacancyExpected_ ;
        /**
         * <code>bool vacancyExpected = 3;</code>
         * @return The vacancyExpected.
         */
        @java.lang.Override
        public boolean getVacancyExpected() {
          return vacancyExpected_;
        }
        /**
         * <code>bool vacancyExpected = 3;</code>
         * @param value The vacancyExpected to set.
         * @return This builder for chaining.
         */
        public Builder setVacancyExpected(boolean value) {
          
          vacancyExpected_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool vacancyExpected = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearVacancyExpected() {
          
          vacancyExpected_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent)
      private static final nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent();
      }

      public static nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PassiveInfraredSignalStatisticsEvent>
          PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredSignalStatisticsEvent>() {
        @java.lang.Override
        public PassiveInfraredSignalStatisticsEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassiveInfraredSignalStatisticsEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassiveInfraredSignalStatisticsEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassiveInfraredSignalStatisticsEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSignalStatisticsEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PASSIVEINFRAREDSIGNALVALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue_;
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     * @return Whether the passiveInfraredSignalValue field is set.
     */
    @java.lang.Override
    public boolean hasPassiveInfraredSignalValue() {
      return passiveInfraredSignalValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     * @return The passiveInfraredSignalValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredSignalValue() {
      return passiveInfraredSignalValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredSignalValue_;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredSignalValueOrBuilder() {
      return getPassiveInfraredSignalValue();
    }

    public static final int PASSIVEINFRAREDBASELINEVALUE_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue_;
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     * @return Whether the passiveInfraredBaselineValue field is set.
     */
    @java.lang.Override
    public boolean hasPassiveInfraredBaselineValue() {
      return passiveInfraredBaselineValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     * @return The passiveInfraredBaselineValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredBaselineValue() {
      return passiveInfraredBaselineValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredBaselineValue_;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredBaselineValueOrBuilder() {
      return getPassiveInfraredBaselineValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 3;
    private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (passiveInfraredSignalValue_ != null) {
        output.writeMessage(1, getPassiveInfraredSignalValue());
      }
      if (passiveInfraredBaselineValue_ != null) {
        output.writeMessage(2, getPassiveInfraredBaselineValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(3, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (passiveInfraredSignalValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPassiveInfraredSignalValue());
      }
      if (passiveInfraredBaselineValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPassiveInfraredBaselineValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.PassiveInfraredTrait other = (nest.trait.sensor.Sensor.PassiveInfraredTrait) obj;

      if (hasPassiveInfraredSignalValue() != other.hasPassiveInfraredSignalValue()) return false;
      if (hasPassiveInfraredSignalValue()) {
        if (!getPassiveInfraredSignalValue()
            .equals(other.getPassiveInfraredSignalValue())) return false;
      }
      if (hasPassiveInfraredBaselineValue() != other.hasPassiveInfraredBaselineValue()) return false;
      if (hasPassiveInfraredBaselineValue()) {
        if (!getPassiveInfraredBaselineValue()
            .equals(other.getPassiveInfraredBaselineValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPassiveInfraredSignalValue()) {
        hash = (37 * hash) + PASSIVEINFRAREDSIGNALVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getPassiveInfraredSignalValue().hashCode();
      }
      if (hasPassiveInfraredBaselineValue()) {
        hash = (37 * hash) + PASSIVEINFRAREDBASELINEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getPassiveInfraredBaselineValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.PassiveInfraredTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.PassiveInfraredTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.PassiveInfraredTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.PassiveInfraredTrait)
        nest.trait.sensor.Sensor.PassiveInfraredTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.PassiveInfraredTrait.class, nest.trait.sensor.Sensor.PassiveInfraredTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.PassiveInfraredTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (passiveInfraredSignalValueBuilder_ == null) {
          passiveInfraredSignalValue_ = null;
        } else {
          passiveInfraredSignalValue_ = null;
          passiveInfraredSignalValueBuilder_ = null;
        }
        if (passiveInfraredBaselineValueBuilder_ == null) {
          passiveInfraredBaselineValue_ = null;
        } else {
          passiveInfraredBaselineValue_ = null;
          passiveInfraredBaselineValueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.PassiveInfraredTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait build() {
        nest.trait.sensor.Sensor.PassiveInfraredTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.PassiveInfraredTrait buildPartial() {
        nest.trait.sensor.Sensor.PassiveInfraredTrait result = new nest.trait.sensor.Sensor.PassiveInfraredTrait(this);
        if (passiveInfraredSignalValueBuilder_ == null) {
          result.passiveInfraredSignalValue_ = passiveInfraredSignalValue_;
        } else {
          result.passiveInfraredSignalValue_ = passiveInfraredSignalValueBuilder_.build();
        }
        if (passiveInfraredBaselineValueBuilder_ == null) {
          result.passiveInfraredBaselineValue_ = passiveInfraredBaselineValue_;
        } else {
          result.passiveInfraredBaselineValue_ = passiveInfraredBaselineValueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.PassiveInfraredTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.PassiveInfraredTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.PassiveInfraredTrait other) {
        if (other == nest.trait.sensor.Sensor.PassiveInfraredTrait.getDefaultInstance()) return this;
        if (other.hasPassiveInfraredSignalValue()) {
          mergePassiveInfraredSignalValue(other.getPassiveInfraredSignalValue());
        }
        if (other.hasPassiveInfraredBaselineValue()) {
          mergePassiveInfraredBaselineValue(other.getPassiveInfraredBaselineValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.PassiveInfraredTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.PassiveInfraredTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> passiveInfraredSignalValueBuilder_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       * @return Whether the passiveInfraredSignalValue field is set.
       */
      public boolean hasPassiveInfraredSignalValue() {
        return passiveInfraredSignalValueBuilder_ != null || passiveInfraredSignalValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       * @return The passiveInfraredSignalValue.
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredSignalValue() {
        if (passiveInfraredSignalValueBuilder_ == null) {
          return passiveInfraredSignalValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredSignalValue_;
        } else {
          return passiveInfraredSignalValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public Builder setPassiveInfraredSignalValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
        if (passiveInfraredSignalValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passiveInfraredSignalValue_ = value;
          onChanged();
        } else {
          passiveInfraredSignalValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public Builder setPassiveInfraredSignalValue(
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
        if (passiveInfraredSignalValueBuilder_ == null) {
          passiveInfraredSignalValue_ = builderForValue.build();
          onChanged();
        } else {
          passiveInfraredSignalValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public Builder mergePassiveInfraredSignalValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
        if (passiveInfraredSignalValueBuilder_ == null) {
          if (passiveInfraredSignalValue_ != null) {
            passiveInfraredSignalValue_ =
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(passiveInfraredSignalValue_).mergeFrom(value).buildPartial();
          } else {
            passiveInfraredSignalValue_ = value;
          }
          onChanged();
        } else {
          passiveInfraredSignalValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public Builder clearPassiveInfraredSignalValue() {
        if (passiveInfraredSignalValueBuilder_ == null) {
          passiveInfraredSignalValue_ = null;
          onChanged();
        } else {
          passiveInfraredSignalValue_ = null;
          passiveInfraredSignalValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getPassiveInfraredSignalValueBuilder() {
        
        onChanged();
        return getPassiveInfraredSignalValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredSignalValueOrBuilder() {
        if (passiveInfraredSignalValueBuilder_ != null) {
          return passiveInfraredSignalValueBuilder_.getMessageOrBuilder();
        } else {
          return passiveInfraredSignalValue_ == null ?
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredSignalValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredSignalValue = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getPassiveInfraredSignalValueFieldBuilder() {
        if (passiveInfraredSignalValueBuilder_ == null) {
          passiveInfraredSignalValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                  getPassiveInfraredSignalValue(),
                  getParentForChildren(),
                  isClean());
          passiveInfraredSignalValue_ = null;
        }
        return passiveInfraredSignalValueBuilder_;
      }

      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> passiveInfraredBaselineValueBuilder_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       * @return Whether the passiveInfraredBaselineValue field is set.
       */
      public boolean hasPassiveInfraredBaselineValue() {
        return passiveInfraredBaselineValueBuilder_ != null || passiveInfraredBaselineValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       * @return The passiveInfraredBaselineValue.
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample getPassiveInfraredBaselineValue() {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          return passiveInfraredBaselineValue_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredBaselineValue_;
        } else {
          return passiveInfraredBaselineValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public Builder setPassiveInfraredBaselineValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passiveInfraredBaselineValue_ = value;
          onChanged();
        } else {
          passiveInfraredBaselineValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public Builder setPassiveInfraredBaselineValue(
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder builderForValue) {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          passiveInfraredBaselineValue_ = builderForValue.build();
          onChanged();
        } else {
          passiveInfraredBaselineValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public Builder mergePassiveInfraredBaselineValue(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample value) {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          if (passiveInfraredBaselineValue_ != null) {
            passiveInfraredBaselineValue_ =
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.newBuilder(passiveInfraredBaselineValue_).mergeFrom(value).buildPartial();
          } else {
            passiveInfraredBaselineValue_ = value;
          }
          onChanged();
        } else {
          passiveInfraredBaselineValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public Builder clearPassiveInfraredBaselineValue() {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          passiveInfraredBaselineValue_ = null;
          onChanged();
        } else {
          passiveInfraredBaselineValue_ = null;
          passiveInfraredBaselineValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder getPassiveInfraredBaselineValueBuilder() {
        
        onChanged();
        return getPassiveInfraredBaselineValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder getPassiveInfraredBaselineValueOrBuilder() {
        if (passiveInfraredBaselineValueBuilder_ != null) {
          return passiveInfraredBaselineValueBuilder_.getMessageOrBuilder();
        } else {
          return passiveInfraredBaselineValue_ == null ?
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.getDefaultInstance() : passiveInfraredBaselineValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredSample passiveInfraredBaselineValue = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder> 
          getPassiveInfraredBaselineValueFieldBuilder() {
        if (passiveInfraredBaselineValueBuilder_ == null) {
          passiveInfraredBaselineValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSample.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredSampleOrBuilder>(
                  getPassiveInfraredBaselineValue(),
                  getParentForChildren(),
                  isClean());
          passiveInfraredBaselineValue_ = null;
        }
        return passiveInfraredBaselineValueBuilder_;
      }

      private nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      public nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation faultInformation = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformation.Builder, nest.trait.sensor.Sensor.PassiveInfraredTrait.PassiveInfraredFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.PassiveInfraredTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.PassiveInfraredTrait)
    private static final nest.trait.sensor.Sensor.PassiveInfraredTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.PassiveInfraredTrait();
    }

    public static nest.trait.sensor.Sensor.PassiveInfraredTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PassiveInfraredTrait>
        PARSER = new com.google.protobuf.AbstractParser<PassiveInfraredTrait>() {
      @java.lang.Override
      public PassiveInfraredTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassiveInfraredTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PassiveInfraredTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PassiveInfraredTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.PassiveInfraredTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SmokeTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     * @return Whether the infraredLedValue field is set.
     */
    boolean hasInfraredLedValue();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     * @return The infraredLedValue.
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getInfraredLedValue();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getInfraredLedValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     * @return Whether the blueLedValue field is set.
     */
    boolean hasBlueLedValue();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     * @return The blueLedValue.
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getBlueLedValue();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getBlueLedValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     * @return Whether the infraredLedFault field is set.
     */
    boolean hasInfraredLedFault();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     * @return The infraredLedFault.
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getInfraredLedFault();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getInfraredLedFaultOrBuilder();

    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     * @return Whether the blueLedFault field is set.
     */
    boolean hasBlueLedFault();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     * @return The blueLedFault.
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getBlueLedFault();
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     */
    nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getBlueLedFaultOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.SmokeTrait}
   */
  public static final class SmokeTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait)
      SmokeTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SmokeTrait.newBuilder() to construct.
    private SmokeTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SmokeTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SmokeTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SmokeTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder subBuilder = null;
              if (infraredLedValue_ != null) {
                subBuilder = infraredLedValue_.toBuilder();
              }
              infraredLedValue_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(infraredLedValue_);
                infraredLedValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder subBuilder = null;
              if (blueLedValue_ != null) {
                subBuilder = blueLedValue_.toBuilder();
              }
              blueLedValue_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blueLedValue_);
                blueLedValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder subBuilder = null;
              if (infraredLedFault_ != null) {
                subBuilder = infraredLedFault_.toBuilder();
              }
              infraredLedFault_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(infraredLedFault_);
                infraredLedFault_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder subBuilder = null;
              if (blueLedFault_ != null) {
                subBuilder = blueLedFault_.toBuilder();
              }
              blueLedFault_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blueLedFault_);
                blueLedFault_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.SmokeTrait.class, nest.trait.sensor.Sensor.SmokeTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.SmokeTrait.SmokeFaultType}
     */
    public enum SmokeFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SMOKE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      SMOKE_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>SMOKE_FAULT_TYPE_NONE = 1;</code>
       */
      SMOKE_FAULT_TYPE_NONE(1),
      /**
       * <code>SMOKE_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      SMOKE_FAULT_TYPE_UNRESPONSIVE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>SMOKE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int SMOKE_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>SMOKE_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int SMOKE_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>SMOKE_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int SMOKE_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SmokeFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SmokeFaultType forNumber(int value) {
        switch (value) {
          case 0: return SMOKE_FAULT_TYPE_UNSPECIFIED;
          case 1: return SMOKE_FAULT_TYPE_NONE;
          case 2: return SMOKE_FAULT_TYPE_UNRESPONSIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SmokeFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SmokeFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SmokeFaultType>() {
              public SmokeFaultType findValueByNumber(int number) {
                return SmokeFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.SmokeTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final SmokeFaultType[] VALUES = values();

      public static SmokeFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SmokeFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.SmokeTrait.SmokeFaultType)
    }

    public interface SmokeSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.SmokeSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       * @return Whether the sample field is set.
       */
      boolean hasSample();
      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       * @return The sample.
       */
      com.google.protobuf.FloatValue getSample();
      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getSampleOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.SmokeSample}
     */
    public static final class SmokeSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.SmokeSample)
        SmokeSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SmokeSample.newBuilder() to construct.
      private SmokeSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SmokeSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SmokeSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SmokeSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 26: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (sample_ != null) {
                  subBuilder = sample_.toBuilder();
                }
                sample_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sample_);
                  sample_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.class, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder.class);
      }

      public static final int SAMPLE_FIELD_NUMBER = 3;
      private com.google.protobuf.FloatValue sample_;
      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       * @return Whether the sample field is set.
       */
      @java.lang.Override
      public boolean hasSample() {
        return sample_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       * @return The sample.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getSample() {
        return sample_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : sample_;
      }
      /**
       * <code>.google.protobuf.FloatValue sample = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getSampleOrBuilder() {
        return getSample();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sample_ != null) {
          output.writeMessage(3, getSample());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getSample());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.SmokeSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.SmokeSample other = (nest.trait.sensor.Sensor.SmokeTrait.SmokeSample) obj;

        if (hasSample() != other.hasSample()) return false;
        if (hasSample()) {
          if (!getSample()
              .equals(other.getSample())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSample()) {
          hash = (37 * hash) + SAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getSample().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.SmokeSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.SmokeSample)
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.class, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleBuilder_ == null) {
            sample_ = null;
          } else {
            sample_ = null;
            sampleBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample build() {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample result = new nest.trait.sensor.Sensor.SmokeTrait.SmokeSample(this);
          if (sampleBuilder_ == null) {
            result.sample_ = sample_;
          } else {
            result.sample_ = sampleBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.SmokeSample) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.SmokeSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance()) return this;
          if (other.hasSample()) {
            mergeSample(other.getSample());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.SmokeSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue sample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> sampleBuilder_;
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         * @return Whether the sample field is set.
         */
        public boolean hasSample() {
          return sampleBuilder_ != null || sample_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         * @return The sample.
         */
        public com.google.protobuf.FloatValue getSample() {
          if (sampleBuilder_ == null) {
            return sample_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : sample_;
          } else {
            return sampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public Builder setSample(com.google.protobuf.FloatValue value) {
          if (sampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sample_ = value;
            onChanged();
          } else {
            sampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public Builder setSample(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (sampleBuilder_ == null) {
            sample_ = builderForValue.build();
            onChanged();
          } else {
            sampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public Builder mergeSample(com.google.protobuf.FloatValue value) {
          if (sampleBuilder_ == null) {
            if (sample_ != null) {
              sample_ =
                com.google.protobuf.FloatValue.newBuilder(sample_).mergeFrom(value).buildPartial();
            } else {
              sample_ = value;
            }
            onChanged();
          } else {
            sampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public Builder clearSample() {
          if (sampleBuilder_ == null) {
            sample_ = null;
            onChanged();
          } else {
            sample_ = null;
            sampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public com.google.protobuf.FloatValue.Builder getSampleBuilder() {
          
          onChanged();
          return getSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getSampleOrBuilder() {
          if (sampleBuilder_ != null) {
            return sampleBuilder_.getMessageOrBuilder();
          } else {
            return sample_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : sample_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue sample = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getSampleFieldBuilder() {
          if (sampleBuilder_ == null) {
            sampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getSample(),
                    getParentForChildren(),
                    isClean());
            sample_ = null;
          }
          return sampleBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.SmokeSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.SmokeSample)
      private static final nest.trait.sensor.Sensor.SmokeTrait.SmokeSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.SmokeSample();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SmokeSample>
          PARSER = new com.google.protobuf.AbstractParser<SmokeSample>() {
        @java.lang.Override
        public SmokeSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SmokeSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SmokeSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SmokeSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SmokeFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.SmokeFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.SmokeFaultInformation}
     */
    public static final class SmokeFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.SmokeFaultInformation)
        SmokeFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SmokeFaultInformation.newBuilder() to construct.
      private SmokeFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SmokeFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SmokeFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SmokeFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.class, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation other = (nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.SmokeFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.SmokeFaultInformation)
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.class, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation build() {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation result = new nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.SmokeFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.SmokeFaultInformation)
      private static final nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SmokeFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<SmokeFaultInformation>() {
        @java.lang.Override
        public SmokeFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SmokeFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SmokeFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SmokeFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InfraredLedFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent}
     */
    public static final class InfraredLedFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent)
        InfraredLedFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InfraredLedFaultEvent.newBuilder() to construct.
      private InfraredLedFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InfraredLedFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InfraredLedFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private InfraredLedFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.class, nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(35, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent other = (nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent)
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.class, nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent build() {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent result = new nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.InfraredLedFaultEvent)
      private static final nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InfraredLedFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<InfraredLedFaultEvent>() {
        @java.lang.Override
        public InfraredLedFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InfraredLedFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InfraredLedFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InfraredLedFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BlueLedFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.BlueLedFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType();

      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue();
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.BlueLedFaultEvent}
     */
    public static final class BlueLedFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.BlueLedFaultEvent)
        BlueLedFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BlueLedFaultEvent.newBuilder() to construct.
      private BlueLedFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BlueLedFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BlueLedFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BlueLedFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.class, nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(35, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.SMOKE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent other = (nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.BlueLedFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.BlueLedFaultEvent)
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.class, nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent build() {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent result = new nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType result = nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.SmokeTrait.SmokeSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.BlueLedFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.BlueLedFaultEvent)
      private static final nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BlueLedFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<BlueLedFaultEvent>() {
        @java.lang.Override
        public BlueLedFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlueLedFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BlueLedFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BlueLedFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.BlueLedFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InfraredLedPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent}
     */
    public static final class InfraredLedPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)
        InfraredLedPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InfraredLedPeriodicSamplesEvent.newBuilder() to construct.
      private InfraredLedPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InfraredLedPeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InfraredLedPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private InfraredLedPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InfraredLedPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<InfraredLedPeriodicSamplesEvent>() {
        @java.lang.Override
        public InfraredLedPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InfraredLedPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InfraredLedPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InfraredLedPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.InfraredLedPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BlueLedPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent}
     */
    public static final class BlueLedPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)
        BlueLedPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BlueLedPeriodicSamplesEvent.newBuilder() to construct.
      private BlueLedPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BlueLedPeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BlueLedPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BlueLedPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.SmokeTrait.SmokeSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait.BlueLedPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BlueLedPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<BlueLedPeriodicSamplesEvent>() {
        @java.lang.Override
        public BlueLedPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlueLedPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BlueLedPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BlueLedPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait.BlueLedPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int INFRAREDLEDVALUE_FIELD_NUMBER = 3;
    private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample infraredLedValue_;
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     * @return Whether the infraredLedValue field is set.
     */
    @java.lang.Override
    public boolean hasInfraredLedValue() {
      return infraredLedValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     * @return The infraredLedValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getInfraredLedValue() {
      return infraredLedValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : infraredLedValue_;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getInfraredLedValueOrBuilder() {
      return getInfraredLedValue();
    }

    public static final int BLUELEDVALUE_FIELD_NUMBER = 4;
    private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample blueLedValue_;
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     * @return Whether the blueLedValue field is set.
     */
    @java.lang.Override
    public boolean hasBlueLedValue() {
      return blueLedValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     * @return The blueLedValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getBlueLedValue() {
      return blueLedValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : blueLedValue_;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getBlueLedValueOrBuilder() {
      return getBlueLedValue();
    }

    public static final int INFRAREDLEDFAULT_FIELD_NUMBER = 5;
    private nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation infraredLedFault_;
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     * @return Whether the infraredLedFault field is set.
     */
    @java.lang.Override
    public boolean hasInfraredLedFault() {
      return infraredLedFault_ != null;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     * @return The infraredLedFault.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getInfraredLedFault() {
      return infraredLedFault_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : infraredLedFault_;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getInfraredLedFaultOrBuilder() {
      return getInfraredLedFault();
    }

    public static final int BLUELEDFAULT_FIELD_NUMBER = 6;
    private nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation blueLedFault_;
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     * @return Whether the blueLedFault field is set.
     */
    @java.lang.Override
    public boolean hasBlueLedFault() {
      return blueLedFault_ != null;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     * @return The blueLedFault.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getBlueLedFault() {
      return blueLedFault_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : blueLedFault_;
    }
    /**
     * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getBlueLedFaultOrBuilder() {
      return getBlueLedFault();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (infraredLedValue_ != null) {
        output.writeMessage(3, getInfraredLedValue());
      }
      if (blueLedValue_ != null) {
        output.writeMessage(4, getBlueLedValue());
      }
      if (infraredLedFault_ != null) {
        output.writeMessage(5, getInfraredLedFault());
      }
      if (blueLedFault_ != null) {
        output.writeMessage(6, getBlueLedFault());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (infraredLedValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInfraredLedValue());
      }
      if (blueLedValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBlueLedValue());
      }
      if (infraredLedFault_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getInfraredLedFault());
      }
      if (blueLedFault_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getBlueLedFault());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.SmokeTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.SmokeTrait other = (nest.trait.sensor.Sensor.SmokeTrait) obj;

      if (hasInfraredLedValue() != other.hasInfraredLedValue()) return false;
      if (hasInfraredLedValue()) {
        if (!getInfraredLedValue()
            .equals(other.getInfraredLedValue())) return false;
      }
      if (hasBlueLedValue() != other.hasBlueLedValue()) return false;
      if (hasBlueLedValue()) {
        if (!getBlueLedValue()
            .equals(other.getBlueLedValue())) return false;
      }
      if (hasInfraredLedFault() != other.hasInfraredLedFault()) return false;
      if (hasInfraredLedFault()) {
        if (!getInfraredLedFault()
            .equals(other.getInfraredLedFault())) return false;
      }
      if (hasBlueLedFault() != other.hasBlueLedFault()) return false;
      if (hasBlueLedFault()) {
        if (!getBlueLedFault()
            .equals(other.getBlueLedFault())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInfraredLedValue()) {
        hash = (37 * hash) + INFRAREDLEDVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInfraredLedValue().hashCode();
      }
      if (hasBlueLedValue()) {
        hash = (37 * hash) + BLUELEDVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBlueLedValue().hashCode();
      }
      if (hasInfraredLedFault()) {
        hash = (37 * hash) + INFRAREDLEDFAULT_FIELD_NUMBER;
        hash = (53 * hash) + getInfraredLedFault().hashCode();
      }
      if (hasBlueLedFault()) {
        hash = (37 * hash) + BLUELEDFAULT_FIELD_NUMBER;
        hash = (53 * hash) + getBlueLedFault().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.SmokeTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.SmokeTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.SmokeTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.SmokeTrait)
        nest.trait.sensor.Sensor.SmokeTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.SmokeTrait.class, nest.trait.sensor.Sensor.SmokeTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.SmokeTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (infraredLedValueBuilder_ == null) {
          infraredLedValue_ = null;
        } else {
          infraredLedValue_ = null;
          infraredLedValueBuilder_ = null;
        }
        if (blueLedValueBuilder_ == null) {
          blueLedValue_ = null;
        } else {
          blueLedValue_ = null;
          blueLedValueBuilder_ = null;
        }
        if (infraredLedFaultBuilder_ == null) {
          infraredLedFault_ = null;
        } else {
          infraredLedFault_ = null;
          infraredLedFaultBuilder_ = null;
        }
        if (blueLedFaultBuilder_ == null) {
          blueLedFault_ = null;
        } else {
          blueLedFault_ = null;
          blueLedFaultBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_SmokeTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.SmokeTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait build() {
        nest.trait.sensor.Sensor.SmokeTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.SmokeTrait buildPartial() {
        nest.trait.sensor.Sensor.SmokeTrait result = new nest.trait.sensor.Sensor.SmokeTrait(this);
        if (infraredLedValueBuilder_ == null) {
          result.infraredLedValue_ = infraredLedValue_;
        } else {
          result.infraredLedValue_ = infraredLedValueBuilder_.build();
        }
        if (blueLedValueBuilder_ == null) {
          result.blueLedValue_ = blueLedValue_;
        } else {
          result.blueLedValue_ = blueLedValueBuilder_.build();
        }
        if (infraredLedFaultBuilder_ == null) {
          result.infraredLedFault_ = infraredLedFault_;
        } else {
          result.infraredLedFault_ = infraredLedFaultBuilder_.build();
        }
        if (blueLedFaultBuilder_ == null) {
          result.blueLedFault_ = blueLedFault_;
        } else {
          result.blueLedFault_ = blueLedFaultBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.SmokeTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.SmokeTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.SmokeTrait other) {
        if (other == nest.trait.sensor.Sensor.SmokeTrait.getDefaultInstance()) return this;
        if (other.hasInfraredLedValue()) {
          mergeInfraredLedValue(other.getInfraredLedValue());
        }
        if (other.hasBlueLedValue()) {
          mergeBlueLedValue(other.getBlueLedValue());
        }
        if (other.hasInfraredLedFault()) {
          mergeInfraredLedFault(other.getInfraredLedFault());
        }
        if (other.hasBlueLedFault()) {
          mergeBlueLedFault(other.getBlueLedFault());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.SmokeTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.SmokeTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample infraredLedValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> infraredLedValueBuilder_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       * @return Whether the infraredLedValue field is set.
       */
      public boolean hasInfraredLedValue() {
        return infraredLedValueBuilder_ != null || infraredLedValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       * @return The infraredLedValue.
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getInfraredLedValue() {
        if (infraredLedValueBuilder_ == null) {
          return infraredLedValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : infraredLedValue_;
        } else {
          return infraredLedValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public Builder setInfraredLedValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
        if (infraredLedValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          infraredLedValue_ = value;
          onChanged();
        } else {
          infraredLedValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public Builder setInfraredLedValue(
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
        if (infraredLedValueBuilder_ == null) {
          infraredLedValue_ = builderForValue.build();
          onChanged();
        } else {
          infraredLedValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public Builder mergeInfraredLedValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
        if (infraredLedValueBuilder_ == null) {
          if (infraredLedValue_ != null) {
            infraredLedValue_ =
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder(infraredLedValue_).mergeFrom(value).buildPartial();
          } else {
            infraredLedValue_ = value;
          }
          onChanged();
        } else {
          infraredLedValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public Builder clearInfraredLedValue() {
        if (infraredLedValueBuilder_ == null) {
          infraredLedValue_ = null;
          onChanged();
        } else {
          infraredLedValue_ = null;
          infraredLedValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getInfraredLedValueBuilder() {
        
        onChanged();
        return getInfraredLedValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getInfraredLedValueOrBuilder() {
        if (infraredLedValueBuilder_ != null) {
          return infraredLedValueBuilder_.getMessageOrBuilder();
        } else {
          return infraredLedValue_ == null ?
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : infraredLedValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample infraredLedValue = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getInfraredLedValueFieldBuilder() {
        if (infraredLedValueBuilder_ == null) {
          infraredLedValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                  getInfraredLedValue(),
                  getParentForChildren(),
                  isClean());
          infraredLedValue_ = null;
        }
        return infraredLedValueBuilder_;
      }

      private nest.trait.sensor.Sensor.SmokeTrait.SmokeSample blueLedValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> blueLedValueBuilder_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       * @return Whether the blueLedValue field is set.
       */
      public boolean hasBlueLedValue() {
        return blueLedValueBuilder_ != null || blueLedValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       * @return The blueLedValue.
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample getBlueLedValue() {
        if (blueLedValueBuilder_ == null) {
          return blueLedValue_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : blueLedValue_;
        } else {
          return blueLedValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public Builder setBlueLedValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
        if (blueLedValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blueLedValue_ = value;
          onChanged();
        } else {
          blueLedValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public Builder setBlueLedValue(
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder builderForValue) {
        if (blueLedValueBuilder_ == null) {
          blueLedValue_ = builderForValue.build();
          onChanged();
        } else {
          blueLedValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public Builder mergeBlueLedValue(nest.trait.sensor.Sensor.SmokeTrait.SmokeSample value) {
        if (blueLedValueBuilder_ == null) {
          if (blueLedValue_ != null) {
            blueLedValue_ =
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.newBuilder(blueLedValue_).mergeFrom(value).buildPartial();
          } else {
            blueLedValue_ = value;
          }
          onChanged();
        } else {
          blueLedValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public Builder clearBlueLedValue() {
        if (blueLedValueBuilder_ == null) {
          blueLedValue_ = null;
          onChanged();
        } else {
          blueLedValue_ = null;
          blueLedValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder getBlueLedValueBuilder() {
        
        onChanged();
        return getBlueLedValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder getBlueLedValueOrBuilder() {
        if (blueLedValueBuilder_ != null) {
          return blueLedValueBuilder_.getMessageOrBuilder();
        } else {
          return blueLedValue_ == null ?
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.getDefaultInstance() : blueLedValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeSample blueLedValue = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder> 
          getBlueLedValueFieldBuilder() {
        if (blueLedValueBuilder_ == null) {
          blueLedValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.SmokeTrait.SmokeSample, nest.trait.sensor.Sensor.SmokeTrait.SmokeSample.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeSampleOrBuilder>(
                  getBlueLedValue(),
                  getParentForChildren(),
                  isClean());
          blueLedValue_ = null;
        }
        return blueLedValueBuilder_;
      }

      private nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation infraredLedFault_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder> infraredLedFaultBuilder_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       * @return Whether the infraredLedFault field is set.
       */
      public boolean hasInfraredLedFault() {
        return infraredLedFaultBuilder_ != null || infraredLedFault_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       * @return The infraredLedFault.
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getInfraredLedFault() {
        if (infraredLedFaultBuilder_ == null) {
          return infraredLedFault_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : infraredLedFault_;
        } else {
          return infraredLedFaultBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public Builder setInfraredLedFault(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation value) {
        if (infraredLedFaultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          infraredLedFault_ = value;
          onChanged();
        } else {
          infraredLedFaultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public Builder setInfraredLedFault(
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder builderForValue) {
        if (infraredLedFaultBuilder_ == null) {
          infraredLedFault_ = builderForValue.build();
          onChanged();
        } else {
          infraredLedFaultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public Builder mergeInfraredLedFault(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation value) {
        if (infraredLedFaultBuilder_ == null) {
          if (infraredLedFault_ != null) {
            infraredLedFault_ =
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.newBuilder(infraredLedFault_).mergeFrom(value).buildPartial();
          } else {
            infraredLedFault_ = value;
          }
          onChanged();
        } else {
          infraredLedFaultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public Builder clearInfraredLedFault() {
        if (infraredLedFaultBuilder_ == null) {
          infraredLedFault_ = null;
          onChanged();
        } else {
          infraredLedFault_ = null;
          infraredLedFaultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder getInfraredLedFaultBuilder() {
        
        onChanged();
        return getInfraredLedFaultFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getInfraredLedFaultOrBuilder() {
        if (infraredLedFaultBuilder_ != null) {
          return infraredLedFaultBuilder_.getMessageOrBuilder();
        } else {
          return infraredLedFault_ == null ?
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : infraredLedFault_;
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation infraredLedFault = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder> 
          getInfraredLedFaultFieldBuilder() {
        if (infraredLedFaultBuilder_ == null) {
          infraredLedFaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder>(
                  getInfraredLedFault(),
                  getParentForChildren(),
                  isClean());
          infraredLedFault_ = null;
        }
        return infraredLedFaultBuilder_;
      }

      private nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation blueLedFault_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder> blueLedFaultBuilder_;
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       * @return Whether the blueLedFault field is set.
       */
      public boolean hasBlueLedFault() {
        return blueLedFaultBuilder_ != null || blueLedFault_ != null;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       * @return The blueLedFault.
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation getBlueLedFault() {
        if (blueLedFaultBuilder_ == null) {
          return blueLedFault_ == null ? nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : blueLedFault_;
        } else {
          return blueLedFaultBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public Builder setBlueLedFault(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation value) {
        if (blueLedFaultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blueLedFault_ = value;
          onChanged();
        } else {
          blueLedFaultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public Builder setBlueLedFault(
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder builderForValue) {
        if (blueLedFaultBuilder_ == null) {
          blueLedFault_ = builderForValue.build();
          onChanged();
        } else {
          blueLedFaultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public Builder mergeBlueLedFault(nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation value) {
        if (blueLedFaultBuilder_ == null) {
          if (blueLedFault_ != null) {
            blueLedFault_ =
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.newBuilder(blueLedFault_).mergeFrom(value).buildPartial();
          } else {
            blueLedFault_ = value;
          }
          onChanged();
        } else {
          blueLedFaultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public Builder clearBlueLedFault() {
        if (blueLedFaultBuilder_ == null) {
          blueLedFault_ = null;
          onChanged();
        } else {
          blueLedFault_ = null;
          blueLedFaultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder getBlueLedFaultBuilder() {
        
        onChanged();
        return getBlueLedFaultFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      public nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder getBlueLedFaultOrBuilder() {
        if (blueLedFaultBuilder_ != null) {
          return blueLedFaultBuilder_.getMessageOrBuilder();
        } else {
          return blueLedFault_ == null ?
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.getDefaultInstance() : blueLedFault_;
        }
      }
      /**
       * <code>.nest.trait.sensor.SmokeTrait.SmokeFaultInformation blueLedFault = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder> 
          getBlueLedFaultFieldBuilder() {
        if (blueLedFaultBuilder_ == null) {
          blueLedFaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformation.Builder, nest.trait.sensor.Sensor.SmokeTrait.SmokeFaultInformationOrBuilder>(
                  getBlueLedFault(),
                  getParentForChildren(),
                  isClean());
          blueLedFault_ = null;
        }
        return blueLedFaultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.SmokeTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.SmokeTrait)
    private static final nest.trait.sensor.Sensor.SmokeTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.SmokeTrait();
    }

    public static nest.trait.sensor.Sensor.SmokeTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SmokeTrait>
        PARSER = new com.google.protobuf.AbstractParser<SmokeTrait>() {
      @java.lang.Override
      public SmokeTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SmokeTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SmokeTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SmokeTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.SmokeTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TemperatureTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.TemperatureTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     * @return Whether the temperatureValue field is set.
     */
    boolean hasTemperatureValue();
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     * @return The temperatureValue.
     */
    nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getTemperatureValue();
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     */
    nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getTemperatureValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     */
    nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.TemperatureTrait}
   */
  public static final class TemperatureTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.TemperatureTrait)
      TemperatureTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TemperatureTrait.newBuilder() to construct.
    private TemperatureTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemperatureTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TemperatureTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemperatureTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder subBuilder = null;
              if (temperatureValue_ != null) {
                subBuilder = temperatureValue_.toBuilder();
              }
              temperatureValue_ = input.readMessage(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperatureValue_);
                temperatureValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.TemperatureTrait.class, nest.trait.sensor.Sensor.TemperatureTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.TemperatureTrait.TemperatureFaultType}
     */
    public enum TemperatureFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEMPERATURE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      TEMPERATURE_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>TEMPERATURE_FAULT_TYPE_NONE = 1;</code>
       */
      TEMPERATURE_FAULT_TYPE_NONE(1),
      /**
       * <code>TEMPERATURE_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      TEMPERATURE_FAULT_TYPE_UNRESPONSIVE(2),
      /**
       * <code>TEMPERATURE_FAULT_TYPE_OUT_OF_NORMAL_RANGE = 3;</code>
       */
      TEMPERATURE_FAULT_TYPE_OUT_OF_NORMAL_RANGE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TEMPERATURE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int TEMPERATURE_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>TEMPERATURE_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int TEMPERATURE_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>TEMPERATURE_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int TEMPERATURE_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;
      /**
       * <code>TEMPERATURE_FAULT_TYPE_OUT_OF_NORMAL_RANGE = 3;</code>
       */
      public static final int TEMPERATURE_FAULT_TYPE_OUT_OF_NORMAL_RANGE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TemperatureFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TemperatureFaultType forNumber(int value) {
        switch (value) {
          case 0: return TEMPERATURE_FAULT_TYPE_UNSPECIFIED;
          case 1: return TEMPERATURE_FAULT_TYPE_NONE;
          case 2: return TEMPERATURE_FAULT_TYPE_UNRESPONSIVE;
          case 3: return TEMPERATURE_FAULT_TYPE_OUT_OF_NORMAL_RANGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TemperatureFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TemperatureFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TemperatureFaultType>() {
              public TemperatureFaultType findValueByNumber(int number) {
                return TemperatureFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.TemperatureTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final TemperatureFaultType[] VALUES = values();

      public static TemperatureFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TemperatureFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.TemperatureTrait.TemperatureFaultType)
    }

    public interface TemperatureSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.TemperatureTrait.TemperatureSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       * @return Whether the temperature field is set.
       */
      boolean hasTemperature();
      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       * @return The temperature.
       */
      com.google.protobuf.FloatValue getTemperature();
      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getTemperatureOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureSample}
     */
    public static final class TemperatureSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.TemperatureTrait.TemperatureSample)
        TemperatureSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TemperatureSample.newBuilder() to construct.
      private TemperatureSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TemperatureSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TemperatureSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TemperatureSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (temperature_ != null) {
                  subBuilder = temperature_.toBuilder();
                }
                temperature_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(temperature_);
                  temperature_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder.class);
      }

      public static final int TEMPERATURE_FIELD_NUMBER = 1;
      private com.google.protobuf.FloatValue temperature_;
      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       * @return Whether the temperature field is set.
       */
      @java.lang.Override
      public boolean hasTemperature() {
        return temperature_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getTemperature() {
        return temperature_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : temperature_;
      }
      /**
       * <code>.google.protobuf.FloatValue temperature = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getTemperatureOrBuilder() {
        return getTemperature();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (temperature_ != null) {
          output.writeMessage(1, getTemperature());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (temperature_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getTemperature());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample other = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample) obj;

        if (hasTemperature() != other.hasTemperature()) return false;
        if (hasTemperature()) {
          if (!getTemperature()
              .equals(other.getTemperature())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTemperature()) {
          hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getTemperature().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.TemperatureTrait.TemperatureSample)
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (temperatureBuilder_ == null) {
            temperature_ = null;
          } else {
            temperature_ = null;
            temperatureBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample build() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample buildPartial() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample result = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample(this);
          if (temperatureBuilder_ == null) {
            result.temperature_ = temperature_;
          } else {
            result.temperature_ = temperatureBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample) {
            return mergeFrom((nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample other) {
          if (other == nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance()) return this;
          if (other.hasTemperature()) {
            mergeTemperature(other.getTemperature());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue temperature_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> temperatureBuilder_;
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         * @return Whether the temperature field is set.
         */
        public boolean hasTemperature() {
          return temperatureBuilder_ != null || temperature_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         * @return The temperature.
         */
        public com.google.protobuf.FloatValue getTemperature() {
          if (temperatureBuilder_ == null) {
            return temperature_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : temperature_;
          } else {
            return temperatureBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public Builder setTemperature(com.google.protobuf.FloatValue value) {
          if (temperatureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            temperature_ = value;
            onChanged();
          } else {
            temperatureBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public Builder setTemperature(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (temperatureBuilder_ == null) {
            temperature_ = builderForValue.build();
            onChanged();
          } else {
            temperatureBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public Builder mergeTemperature(com.google.protobuf.FloatValue value) {
          if (temperatureBuilder_ == null) {
            if (temperature_ != null) {
              temperature_ =
                com.google.protobuf.FloatValue.newBuilder(temperature_).mergeFrom(value).buildPartial();
            } else {
              temperature_ = value;
            }
            onChanged();
          } else {
            temperatureBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public Builder clearTemperature() {
          if (temperatureBuilder_ == null) {
            temperature_ = null;
            onChanged();
          } else {
            temperature_ = null;
            temperatureBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public com.google.protobuf.FloatValue.Builder getTemperatureBuilder() {
          
          onChanged();
          return getTemperatureFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTemperatureOrBuilder() {
          if (temperatureBuilder_ != null) {
            return temperatureBuilder_.getMessageOrBuilder();
          } else {
            return temperature_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : temperature_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue temperature = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getTemperatureFieldBuilder() {
          if (temperatureBuilder_ == null) {
            temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getTemperature(),
                    getParentForChildren(),
                    isClean());
            temperature_ = null;
          }
          return temperatureBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.TemperatureTrait.TemperatureSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.TemperatureTrait.TemperatureSample)
      private static final nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample();
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TemperatureSample>
          PARSER = new com.google.protobuf.AbstractParser<TemperatureSample>() {
        @java.lang.Override
        public TemperatureSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TemperatureSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TemperatureSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TemperatureSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TemperatureFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType();

      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation}
     */
    public static final class TemperatureFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation)
        TemperatureFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TemperatureFaultInformation.newBuilder() to construct.
      private TemperatureFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TemperatureFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TemperatureFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TemperatureFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType result = nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample lastValue_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.TEMPERATURE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.TEMPERATURE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation other = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation)
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation build() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation result = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType result = nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation)
      private static final nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation();
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TemperatureFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<TemperatureFaultInformation>() {
        @java.lang.Override
        public TemperatureFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TemperatureFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TemperatureFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TemperatureFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TemperatureSensorFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType();

      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue();
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent}
     */
    public static final class TemperatureSensorFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent)
        TemperatureSensorFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TemperatureSensorFaultEvent.newBuilder() to construct.
      private TemperatureSensorFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TemperatureSensorFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TemperatureSensorFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TemperatureSensorFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 290: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType result = nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample lastValue_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 36;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.TEMPERATURE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(36, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.TEMPERATURE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(36, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent other = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent)
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent build() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent result = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType result = nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 36;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.TemperatureTrait.TemperatureSensorFaultEvent)
      private static final nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent();
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TemperatureSensorFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<TemperatureSensorFaultEvent>() {
        @java.lang.Override
        public TemperatureSensorFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TemperatureSensorFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TemperatureSensorFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TemperatureSensorFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSensorFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TemperaturePeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent}
     */
    public static final class TemperaturePeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)
        TemperaturePeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TemperaturePeriodicSamplesEvent.newBuilder() to construct.
      private TemperaturePeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TemperaturePeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TemperaturePeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TemperaturePeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent other = (nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)
          nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent result = new nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.TemperatureTrait.TemperatureSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TemperaturePeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<TemperaturePeriodicSamplesEvent>() {
        @java.lang.Override
        public TemperaturePeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TemperaturePeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TemperaturePeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TemperaturePeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperaturePeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TEMPERATUREVALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample temperatureValue_;
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     * @return Whether the temperatureValue field is set.
     */
    @java.lang.Override
    public boolean hasTemperatureValue() {
      return temperatureValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     * @return The temperatureValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getTemperatureValue() {
      return temperatureValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : temperatureValue_;
    }
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getTemperatureValueOrBuilder() {
      return getTemperatureValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (temperatureValue_ != null) {
        output.writeMessage(1, getTemperatureValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(2, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (temperatureValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTemperatureValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.TemperatureTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.TemperatureTrait other = (nest.trait.sensor.Sensor.TemperatureTrait) obj;

      if (hasTemperatureValue() != other.hasTemperatureValue()) return false;
      if (hasTemperatureValue()) {
        if (!getTemperatureValue()
            .equals(other.getTemperatureValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTemperatureValue()) {
        hash = (37 * hash) + TEMPERATUREVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperatureValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.TemperatureTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.TemperatureTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.TemperatureTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.TemperatureTrait)
        nest.trait.sensor.Sensor.TemperatureTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.TemperatureTrait.class, nest.trait.sensor.Sensor.TemperatureTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.TemperatureTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (temperatureValueBuilder_ == null) {
          temperatureValue_ = null;
        } else {
          temperatureValue_ = null;
          temperatureValueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_TemperatureTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.TemperatureTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait build() {
        nest.trait.sensor.Sensor.TemperatureTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.TemperatureTrait buildPartial() {
        nest.trait.sensor.Sensor.TemperatureTrait result = new nest.trait.sensor.Sensor.TemperatureTrait(this);
        if (temperatureValueBuilder_ == null) {
          result.temperatureValue_ = temperatureValue_;
        } else {
          result.temperatureValue_ = temperatureValueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.TemperatureTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.TemperatureTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.TemperatureTrait other) {
        if (other == nest.trait.sensor.Sensor.TemperatureTrait.getDefaultInstance()) return this;
        if (other.hasTemperatureValue()) {
          mergeTemperatureValue(other.getTemperatureValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.TemperatureTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.TemperatureTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample temperatureValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> temperatureValueBuilder_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       * @return Whether the temperatureValue field is set.
       */
      public boolean hasTemperatureValue() {
        return temperatureValueBuilder_ != null || temperatureValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       * @return The temperatureValue.
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample getTemperatureValue() {
        if (temperatureValueBuilder_ == null) {
          return temperatureValue_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : temperatureValue_;
        } else {
          return temperatureValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public Builder setTemperatureValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
        if (temperatureValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperatureValue_ = value;
          onChanged();
        } else {
          temperatureValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public Builder setTemperatureValue(
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder builderForValue) {
        if (temperatureValueBuilder_ == null) {
          temperatureValue_ = builderForValue.build();
          onChanged();
        } else {
          temperatureValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public Builder mergeTemperatureValue(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample value) {
        if (temperatureValueBuilder_ == null) {
          if (temperatureValue_ != null) {
            temperatureValue_ =
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.newBuilder(temperatureValue_).mergeFrom(value).buildPartial();
          } else {
            temperatureValue_ = value;
          }
          onChanged();
        } else {
          temperatureValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public Builder clearTemperatureValue() {
        if (temperatureValueBuilder_ == null) {
          temperatureValue_ = null;
          onChanged();
        } else {
          temperatureValue_ = null;
          temperatureValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder getTemperatureValueBuilder() {
        
        onChanged();
        return getTemperatureValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder getTemperatureValueOrBuilder() {
        if (temperatureValueBuilder_ != null) {
          return temperatureValueBuilder_.getMessageOrBuilder();
        } else {
          return temperatureValue_ == null ?
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.getDefaultInstance() : temperatureValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureSample temperatureValue = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder> 
          getTemperatureValueFieldBuilder() {
        if (temperatureValueBuilder_ == null) {
          temperatureValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSample.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureSampleOrBuilder>(
                  getTemperatureValue(),
                  getParentForChildren(),
                  isClean());
          temperatureValue_ = null;
        }
        return temperatureValueBuilder_;
      }

      private nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.TemperatureTrait.TemperatureFaultInformation faultInformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformation.Builder, nest.trait.sensor.Sensor.TemperatureTrait.TemperatureFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.TemperatureTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.TemperatureTrait)
    private static final nest.trait.sensor.Sensor.TemperatureTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.TemperatureTrait();
    }

    public static nest.trait.sensor.Sensor.TemperatureTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TemperatureTrait>
        PARSER = new com.google.protobuf.AbstractParser<TemperatureTrait>() {
      @java.lang.Override
      public TemperatureTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemperatureTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemperatureTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemperatureTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.TemperatureTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CarbonMonoxideTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.CarbonMonoxideTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     * @return The value.
     */
    nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getValue();
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     */
    nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     */
    nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait}
   */
  public static final class CarbonMonoxideTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.CarbonMonoxideTrait)
      CarbonMonoxideTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CarbonMonoxideTrait.newBuilder() to construct.
    private CarbonMonoxideTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CarbonMonoxideTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CarbonMonoxideTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CarbonMonoxideTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.CarbonMonoxideTrait.CoFaultType}
     */
    public enum CoFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CO_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      CO_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>CO_FAULT_TYPE_NONE = 1;</code>
       */
      CO_FAULT_TYPE_NONE(1),
      /**
       * <code>CO_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      CO_FAULT_TYPE_UNRESPONSIVE(2),
      /**
       * <code>CO_FAULT_TYPE_END_OF_LIFE = 3;</code>
       */
      CO_FAULT_TYPE_END_OF_LIFE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CO_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int CO_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>CO_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int CO_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>CO_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int CO_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;
      /**
       * <code>CO_FAULT_TYPE_END_OF_LIFE = 3;</code>
       */
      public static final int CO_FAULT_TYPE_END_OF_LIFE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CoFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CoFaultType forNumber(int value) {
        switch (value) {
          case 0: return CO_FAULT_TYPE_UNSPECIFIED;
          case 1: return CO_FAULT_TYPE_NONE;
          case 2: return CO_FAULT_TYPE_UNRESPONSIVE;
          case 3: return CO_FAULT_TYPE_END_OF_LIFE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CoFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CoFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CoFaultType>() {
              public CoFaultType findValueByNumber(int number) {
                return CoFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.CarbonMonoxideTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final CoFaultType[] VALUES = values();

      public static CoFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CoFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.CarbonMonoxideTrait.CoFaultType)
    }

    public interface CoSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.CarbonMonoxideTrait.CoSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 ppm = 1;</code>
       * @return The ppm.
       */
      int getPpm();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoSample}
     */
    public static final class CoSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.CarbonMonoxideTrait.CoSample)
        CoSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CoSample.newBuilder() to construct.
      private CoSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CoSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CoSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CoSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                ppm_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder.class);
      }

      public static final int PPM_FIELD_NUMBER = 1;
      private int ppm_;
      /**
       * <code>uint32 ppm = 1;</code>
       * @return The ppm.
       */
      @java.lang.Override
      public int getPpm() {
        return ppm_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ppm_ != 0) {
          output.writeUInt32(1, ppm_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ppm_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ppm_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample other = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample) obj;

        if (getPpm()
            != other.getPpm()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PPM_FIELD_NUMBER;
        hash = (53 * hash) + getPpm();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.CarbonMonoxideTrait.CoSample)
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          ppm_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample build() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample buildPartial() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample result = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample(this);
          result.ppm_ = ppm_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample) {
            return mergeFrom((nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample other) {
          if (other == nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance()) return this;
          if (other.getPpm() != 0) {
            setPpm(other.getPpm());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int ppm_ ;
        /**
         * <code>uint32 ppm = 1;</code>
         * @return The ppm.
         */
        @java.lang.Override
        public int getPpm() {
          return ppm_;
        }
        /**
         * <code>uint32 ppm = 1;</code>
         * @param value The ppm to set.
         * @return This builder for chaining.
         */
        public Builder setPpm(int value) {
          
          ppm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 ppm = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPpm() {
          
          ppm_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.CarbonMonoxideTrait.CoSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.CarbonMonoxideTrait.CoSample)
      private static final nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample();
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CoSample>
          PARSER = new com.google.protobuf.AbstractParser<CoSample>() {
        @java.lang.Override
        public CoSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CoSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CoSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CoFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType();

      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation}
     */
    public static final class CoFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation)
        CoFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CoFaultInformation.newBuilder() to construct.
      private CoFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CoFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CoFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CoFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType result = nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample lastValue_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.CO_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.CO_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation other = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation)
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation build() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation result = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType result = nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation)
      private static final nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation();
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CoFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<CoFaultInformation>() {
        @java.lang.Override
        public CoFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CoFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CoFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CoFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType();

      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue();
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent}
     */
    public static final class CoFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent)
        CoFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CoFaultEvent.newBuilder() to construct.
      private CoFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CoFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CoFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CoFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType result = nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample lastValue_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.CO_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(35, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.CO_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent other = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent)
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent build() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent result = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType result = nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.CarbonMonoxideTrait.CoFaultEvent)
      private static final nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent();
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CoFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<CoFaultEvent>() {
        @java.lang.Override
        public CoFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CoFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CoFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CoPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent}
     */
    public static final class CoPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)
        CoPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CoPeriodicSamplesEvent.newBuilder() to construct.
      private CoPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CoPeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CoPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CoPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.CarbonMonoxideTrait.CoSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CoPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<CoPeriodicSamplesEvent>() {
        @java.lang.Override
        public CoPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CoPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CoPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value_;
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getValue() {
      return value_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : value_;
    }
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != null) {
        output.writeMessage(1, getValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(2, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.CarbonMonoxideTrait other = (nest.trait.sensor.Sensor.CarbonMonoxideTrait) obj;

      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.CarbonMonoxideTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.CarbonMonoxideTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.CarbonMonoxideTrait)
        nest.trait.sensor.Sensor.CarbonMonoxideTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.CarbonMonoxideTrait.class, nest.trait.sensor.Sensor.CarbonMonoxideTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.CarbonMonoxideTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.CarbonMonoxideTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait build() {
        nest.trait.sensor.Sensor.CarbonMonoxideTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait buildPartial() {
        nest.trait.sensor.Sensor.CarbonMonoxideTrait result = new nest.trait.sensor.Sensor.CarbonMonoxideTrait(this);
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.CarbonMonoxideTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.CarbonMonoxideTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.CarbonMonoxideTrait other) {
        if (other == nest.trait.sensor.Sensor.CarbonMonoxideTrait.getDefaultInstance()) return this;
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.CarbonMonoxideTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.CarbonMonoxideTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> valueBuilder_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       * @return Whether the value field is set.
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       * @return The value.
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public Builder setValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public Builder setValue(
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public Builder mergeValue(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoSample value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSample.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoSampleOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.CarbonMonoxideTrait.CoFaultInformation faultInformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformation.Builder, nest.trait.sensor.Sensor.CarbonMonoxideTrait.CoFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.CarbonMonoxideTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.CarbonMonoxideTrait)
    private static final nest.trait.sensor.Sensor.CarbonMonoxideTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.CarbonMonoxideTrait();
    }

    public static nest.trait.sensor.Sensor.CarbonMonoxideTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CarbonMonoxideTrait>
        PARSER = new com.google.protobuf.AbstractParser<CarbonMonoxideTrait>() {
      @java.lang.Override
      public CarbonMonoxideTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CarbonMonoxideTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CarbonMonoxideTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CarbonMonoxideTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.CarbonMonoxideTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatteryVoltageTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     * @return Whether the batteryValue field is set.
     */
    boolean hasBatteryValue();
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     * @return The batteryValue.
     */
    nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getBatteryValue();
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     */
    nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getBatteryValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     */
    nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait}
   */
  public static final class BatteryVoltageTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait)
      BatteryVoltageTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatteryVoltageTrait.newBuilder() to construct.
    private BatteryVoltageTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatteryVoltageTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatteryVoltageTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryVoltageTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
              if (batteryValue_ != null) {
                subBuilder = batteryValue_.toBuilder();
              }
              batteryValue_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batteryValue_);
                batteryValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.BatteryVoltageTrait.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType}
     */
    public enum BatteryVoltageFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_NONE = 1;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_NONE(1),
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERATING_RANGE = 2;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERATING_RANGE(2),
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_UNRESPONSIVE = 3;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_UNRESPONSIVE(3),
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_DISCONNECTED = 4;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_DISCONNECTED(4),
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_END_OF_LIFE = 5;</code>
       */
      BATTERY_VOLTAGE_FAULT_TYPE_END_OF_LIFE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERATING_RANGE = 2;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERATING_RANGE_VALUE = 2;
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_UNRESPONSIVE = 3;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_UNRESPONSIVE_VALUE = 3;
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_DISCONNECTED = 4;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_DISCONNECTED_VALUE = 4;
      /**
       * <code>BATTERY_VOLTAGE_FAULT_TYPE_END_OF_LIFE = 5;</code>
       */
      public static final int BATTERY_VOLTAGE_FAULT_TYPE_END_OF_LIFE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BatteryVoltageFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static BatteryVoltageFaultType forNumber(int value) {
        switch (value) {
          case 0: return BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED;
          case 1: return BATTERY_VOLTAGE_FAULT_TYPE_NONE;
          case 2: return BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERATING_RANGE;
          case 3: return BATTERY_VOLTAGE_FAULT_TYPE_UNRESPONSIVE;
          case 4: return BATTERY_VOLTAGE_FAULT_TYPE_DISCONNECTED;
          case 5: return BATTERY_VOLTAGE_FAULT_TYPE_END_OF_LIFE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BatteryVoltageFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          BatteryVoltageFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BatteryVoltageFaultType>() {
              public BatteryVoltageFaultType findValueByNumber(int number) {
                return BatteryVoltageFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.BatteryVoltageTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final BatteryVoltageFaultType[] VALUES = values();

      public static BatteryVoltageFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private BatteryVoltageFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType)
    }

    public interface BatteryVoltageSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       * @return Whether the batteryVoltage field is set.
       */
      boolean hasBatteryVoltage();
      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       * @return The batteryVoltage.
       */
      com.google.protobuf.FloatValue getBatteryVoltage();
      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getBatteryVoltageOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample}
     */
    public static final class BatteryVoltageSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample)
        BatteryVoltageSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BatteryVoltageSample.newBuilder() to construct.
      private BatteryVoltageSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BatteryVoltageSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BatteryVoltageSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BatteryVoltageSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (batteryVoltage_ != null) {
                  subBuilder = batteryVoltage_.toBuilder();
                }
                batteryVoltage_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(batteryVoltage_);
                  batteryVoltage_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder.class);
      }

      public static final int BATTERYVOLTAGE_FIELD_NUMBER = 1;
      private com.google.protobuf.FloatValue batteryVoltage_;
      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       * @return Whether the batteryVoltage field is set.
       */
      @java.lang.Override
      public boolean hasBatteryVoltage() {
        return batteryVoltage_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       * @return The batteryVoltage.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getBatteryVoltage() {
        return batteryVoltage_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : batteryVoltage_;
      }
      /**
       * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getBatteryVoltageOrBuilder() {
        return getBatteryVoltage();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (batteryVoltage_ != null) {
          output.writeMessage(1, getBatteryVoltage());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (batteryVoltage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getBatteryVoltage());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample other = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample) obj;

        if (hasBatteryVoltage() != other.hasBatteryVoltage()) return false;
        if (hasBatteryVoltage()) {
          if (!getBatteryVoltage()
              .equals(other.getBatteryVoltage())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasBatteryVoltage()) {
          hash = (37 * hash) + BATTERYVOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getBatteryVoltage().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample)
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (batteryVoltageBuilder_ == null) {
            batteryVoltage_ = null;
          } else {
            batteryVoltage_ = null;
            batteryVoltageBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample build() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample buildPartial() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample result = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample(this);
          if (batteryVoltageBuilder_ == null) {
            result.batteryVoltage_ = batteryVoltage_;
          } else {
            result.batteryVoltage_ = batteryVoltageBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample) {
            return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample other) {
          if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance()) return this;
          if (other.hasBatteryVoltage()) {
            mergeBatteryVoltage(other.getBatteryVoltage());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue batteryVoltage_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> batteryVoltageBuilder_;
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         * @return Whether the batteryVoltage field is set.
         */
        public boolean hasBatteryVoltage() {
          return batteryVoltageBuilder_ != null || batteryVoltage_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         * @return The batteryVoltage.
         */
        public com.google.protobuf.FloatValue getBatteryVoltage() {
          if (batteryVoltageBuilder_ == null) {
            return batteryVoltage_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : batteryVoltage_;
          } else {
            return batteryVoltageBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public Builder setBatteryVoltage(com.google.protobuf.FloatValue value) {
          if (batteryVoltageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            batteryVoltage_ = value;
            onChanged();
          } else {
            batteryVoltageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public Builder setBatteryVoltage(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (batteryVoltageBuilder_ == null) {
            batteryVoltage_ = builderForValue.build();
            onChanged();
          } else {
            batteryVoltageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public Builder mergeBatteryVoltage(com.google.protobuf.FloatValue value) {
          if (batteryVoltageBuilder_ == null) {
            if (batteryVoltage_ != null) {
              batteryVoltage_ =
                com.google.protobuf.FloatValue.newBuilder(batteryVoltage_).mergeFrom(value).buildPartial();
            } else {
              batteryVoltage_ = value;
            }
            onChanged();
          } else {
            batteryVoltageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public Builder clearBatteryVoltage() {
          if (batteryVoltageBuilder_ == null) {
            batteryVoltage_ = null;
            onChanged();
          } else {
            batteryVoltage_ = null;
            batteryVoltageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public com.google.protobuf.FloatValue.Builder getBatteryVoltageBuilder() {
          
          onChanged();
          return getBatteryVoltageFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getBatteryVoltageOrBuilder() {
          if (batteryVoltageBuilder_ != null) {
            return batteryVoltageBuilder_.getMessageOrBuilder();
          } else {
            return batteryVoltage_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : batteryVoltage_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue batteryVoltage = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getBatteryVoltageFieldBuilder() {
          if (batteryVoltageBuilder_ == null) {
            batteryVoltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getBatteryVoltage(),
                    getParentForChildren(),
                    isClean());
            batteryVoltage_ = null;
          }
          return batteryVoltageBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample)
      private static final nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample();
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BatteryVoltageSample>
          PARSER = new com.google.protobuf.AbstractParser<BatteryVoltageSample>() {
        @java.lang.Override
        public BatteryVoltageSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryVoltageSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BatteryVoltageSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BatteryVoltageSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BatteryVoltageFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation}
     */
    public static final class BatteryVoltageFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)
        BatteryVoltageFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BatteryVoltageFaultInformation.newBuilder() to construct.
      private BatteryVoltageFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BatteryVoltageFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BatteryVoltageFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BatteryVoltageFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType result = nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation other = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation build() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation result = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType result = nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation)
      private static final nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation();
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BatteryVoltageFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<BatteryVoltageFaultInformation>() {
        @java.lang.Override
        public BatteryVoltageFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryVoltageFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BatteryVoltageFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BatteryVoltageFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BatteryVoltageFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent}
     */
    public static final class BatteryVoltageFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)
        BatteryVoltageFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BatteryVoltageFaultEvent.newBuilder() to construct.
      private BatteryVoltageFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BatteryVoltageFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BatteryVoltageFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BatteryVoltageFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType result = nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent other = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent build() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent result = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType result = nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent)
      private static final nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent();
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BatteryVoltageFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<BatteryVoltageFaultEvent>() {
        @java.lang.Override
        public BatteryVoltageFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryVoltageFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BatteryVoltageFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BatteryVoltageFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BatteryVoltagePeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent}
     */
    public static final class BatteryVoltagePeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)
        BatteryVoltagePeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BatteryVoltagePeriodicSamplesEvent.newBuilder() to construct.
      private BatteryVoltagePeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BatteryVoltagePeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BatteryVoltagePeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BatteryVoltagePeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent other = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent result = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BatteryVoltagePeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<BatteryVoltagePeriodicSamplesEvent>() {
        @java.lang.Override
        public BatteryVoltagePeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryVoltagePeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BatteryVoltagePeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BatteryVoltagePeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltagePeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BatteryVoltageStatisticsEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       * @return Whether the meanVoltage field is set.
       */
      boolean hasMeanVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       * @return The meanVoltage.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMeanVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMeanVoltageOrBuilder();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       * @return Whether the minimumVoltage field is set.
       */
      boolean hasMinimumVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       * @return The minimumVoltage.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMinimumVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMinimumVoltageOrBuilder();

      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       * @return Whether the maximumVoltage field is set.
       */
      boolean hasMaximumVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       * @return The maximumVoltage.
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMaximumVoltage();
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       */
      nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMaximumVoltageOrBuilder();

      /**
       * <code>uint32 numSamples = 4;</code>
       * @return The numSamples.
       */
      int getNumSamples();

      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       * @return Whether the statsSampleInterval field is set.
       */
      boolean hasStatsSampleInterval();
      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       * @return The statsSampleInterval.
       */
      com.google.protobuf.Duration getStatsSampleInterval();
      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       */
      com.google.protobuf.DurationOrBuilder getStatsSampleIntervalOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent}
     */
    public static final class BatteryVoltageStatisticsEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)
        BatteryVoltageStatisticsEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use BatteryVoltageStatisticsEvent.newBuilder() to construct.
      private BatteryVoltageStatisticsEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private BatteryVoltageStatisticsEvent() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new BatteryVoltageStatisticsEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private BatteryVoltageStatisticsEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
                if (meanVoltage_ != null) {
                  subBuilder = meanVoltage_.toBuilder();
                }
                meanVoltage_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(meanVoltage_);
                  meanVoltage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
                if (minimumVoltage_ != null) {
                  subBuilder = minimumVoltage_.toBuilder();
                }
                minimumVoltage_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(minimumVoltage_);
                  minimumVoltage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder subBuilder = null;
                if (maximumVoltage_ != null) {
                  subBuilder = maximumVoltage_.toBuilder();
                }
                maximumVoltage_ = input.readMessage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maximumVoltage_);
                  maximumVoltage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 32: {

                numSamples_ = input.readUInt32();
                break;
              }
              case 42: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (statsSampleInterval_ != null) {
                  subBuilder = statsSampleInterval_.toBuilder();
                }
                statsSampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statsSampleInterval_);
                  statsSampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.Builder.class);
      }

      public static final int MEANVOLTAGE_FIELD_NUMBER = 1;
      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       * @return Whether the meanVoltage field is set.
       */
      @java.lang.Override
      public boolean hasMeanVoltage() {
        return meanVoltage_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       * @return The meanVoltage.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMeanVoltage() {
        return meanVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : meanVoltage_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMeanVoltageOrBuilder() {
        return getMeanVoltage();
      }

      public static final int MINIMUMVOLTAGE_FIELD_NUMBER = 2;
      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       * @return Whether the minimumVoltage field is set.
       */
      @java.lang.Override
      public boolean hasMinimumVoltage() {
        return minimumVoltage_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       * @return The minimumVoltage.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMinimumVoltage() {
        return minimumVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : minimumVoltage_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMinimumVoltageOrBuilder() {
        return getMinimumVoltage();
      }

      public static final int MAXIMUMVOLTAGE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       * @return Whether the maximumVoltage field is set.
       */
      @java.lang.Override
      public boolean hasMaximumVoltage() {
        return maximumVoltage_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       * @return The maximumVoltage.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMaximumVoltage() {
        return maximumVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : maximumVoltage_;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMaximumVoltageOrBuilder() {
        return getMaximumVoltage();
      }

      public static final int NUMSAMPLES_FIELD_NUMBER = 4;
      private int numSamples_;
      /**
       * <code>uint32 numSamples = 4;</code>
       * @return The numSamples.
       */
      @java.lang.Override
      public int getNumSamples() {
        return numSamples_;
      }

      public static final int STATSSAMPLEINTERVAL_FIELD_NUMBER = 5;
      private com.google.protobuf.Duration statsSampleInterval_;
      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       * @return Whether the statsSampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasStatsSampleInterval() {
        return statsSampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       * @return The statsSampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getStatsSampleInterval() {
        return statsSampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : statsSampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getStatsSampleIntervalOrBuilder() {
        return getStatsSampleInterval();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (meanVoltage_ != null) {
          output.writeMessage(1, getMeanVoltage());
        }
        if (minimumVoltage_ != null) {
          output.writeMessage(2, getMinimumVoltage());
        }
        if (maximumVoltage_ != null) {
          output.writeMessage(3, getMaximumVoltage());
        }
        if (numSamples_ != 0) {
          output.writeUInt32(4, numSamples_);
        }
        if (statsSampleInterval_ != null) {
          output.writeMessage(5, getStatsSampleInterval());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (meanVoltage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getMeanVoltage());
        }
        if (minimumVoltage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getMinimumVoltage());
        }
        if (maximumVoltage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getMaximumVoltage());
        }
        if (numSamples_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, numSamples_);
        }
        if (statsSampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getStatsSampleInterval());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent other = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent) obj;

        if (hasMeanVoltage() != other.hasMeanVoltage()) return false;
        if (hasMeanVoltage()) {
          if (!getMeanVoltage()
              .equals(other.getMeanVoltage())) return false;
        }
        if (hasMinimumVoltage() != other.hasMinimumVoltage()) return false;
        if (hasMinimumVoltage()) {
          if (!getMinimumVoltage()
              .equals(other.getMinimumVoltage())) return false;
        }
        if (hasMaximumVoltage() != other.hasMaximumVoltage()) return false;
        if (hasMaximumVoltage()) {
          if (!getMaximumVoltage()
              .equals(other.getMaximumVoltage())) return false;
        }
        if (getNumSamples()
            != other.getNumSamples()) return false;
        if (hasStatsSampleInterval() != other.hasStatsSampleInterval()) return false;
        if (hasStatsSampleInterval()) {
          if (!getStatsSampleInterval()
              .equals(other.getStatsSampleInterval())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMeanVoltage()) {
          hash = (37 * hash) + MEANVOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMeanVoltage().hashCode();
        }
        if (hasMinimumVoltage()) {
          hash = (37 * hash) + MINIMUMVOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMinimumVoltage().hashCode();
        }
        if (hasMaximumVoltage()) {
          hash = (37 * hash) + MAXIMUMVOLTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMaximumVoltage().hashCode();
        }
        hash = (37 * hash) + NUMSAMPLES_FIELD_NUMBER;
        hash = (53 * hash) + getNumSamples();
        if (hasStatsSampleInterval()) {
          hash = (37 * hash) + STATSSAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getStatsSampleInterval().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (meanVoltageBuilder_ == null) {
            meanVoltage_ = null;
          } else {
            meanVoltage_ = null;
            meanVoltageBuilder_ = null;
          }
          if (minimumVoltageBuilder_ == null) {
            minimumVoltage_ = null;
          } else {
            minimumVoltage_ = null;
            minimumVoltageBuilder_ = null;
          }
          if (maximumVoltageBuilder_ == null) {
            maximumVoltage_ = null;
          } else {
            maximumVoltage_ = null;
            maximumVoltageBuilder_ = null;
          }
          numSamples_ = 0;

          if (statsSampleIntervalBuilder_ == null) {
            statsSampleInterval_ = null;
          } else {
            statsSampleInterval_ = null;
            statsSampleIntervalBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent build() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent buildPartial() {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent result = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent(this);
          if (meanVoltageBuilder_ == null) {
            result.meanVoltage_ = meanVoltage_;
          } else {
            result.meanVoltage_ = meanVoltageBuilder_.build();
          }
          if (minimumVoltageBuilder_ == null) {
            result.minimumVoltage_ = minimumVoltage_;
          } else {
            result.minimumVoltage_ = minimumVoltageBuilder_.build();
          }
          if (maximumVoltageBuilder_ == null) {
            result.maximumVoltage_ = maximumVoltage_;
          } else {
            result.maximumVoltage_ = maximumVoltageBuilder_.build();
          }
          result.numSamples_ = numSamples_;
          if (statsSampleIntervalBuilder_ == null) {
            result.statsSampleInterval_ = statsSampleInterval_;
          } else {
            result.statsSampleInterval_ = statsSampleIntervalBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent other) {
          if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent.getDefaultInstance()) return this;
          if (other.hasMeanVoltage()) {
            mergeMeanVoltage(other.getMeanVoltage());
          }
          if (other.hasMinimumVoltage()) {
            mergeMinimumVoltage(other.getMinimumVoltage());
          }
          if (other.hasMaximumVoltage()) {
            mergeMaximumVoltage(other.getMaximumVoltage());
          }
          if (other.getNumSamples() != 0) {
            setNumSamples(other.getNumSamples());
          }
          if (other.hasStatsSampleInterval()) {
            mergeStatsSampleInterval(other.getStatsSampleInterval());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> meanVoltageBuilder_;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         * @return Whether the meanVoltage field is set.
         */
        public boolean hasMeanVoltage() {
          return meanVoltageBuilder_ != null || meanVoltage_ != null;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         * @return The meanVoltage.
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMeanVoltage() {
          if (meanVoltageBuilder_ == null) {
            return meanVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : meanVoltage_;
          } else {
            return meanVoltageBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public Builder setMeanVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (meanVoltageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            meanVoltage_ = value;
            onChanged();
          } else {
            meanVoltageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public Builder setMeanVoltage(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (meanVoltageBuilder_ == null) {
            meanVoltage_ = builderForValue.build();
            onChanged();
          } else {
            meanVoltageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public Builder mergeMeanVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (meanVoltageBuilder_ == null) {
            if (meanVoltage_ != null) {
              meanVoltage_ =
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(meanVoltage_).mergeFrom(value).buildPartial();
            } else {
              meanVoltage_ = value;
            }
            onChanged();
          } else {
            meanVoltageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public Builder clearMeanVoltage() {
          if (meanVoltageBuilder_ == null) {
            meanVoltage_ = null;
            onChanged();
          } else {
            meanVoltage_ = null;
            meanVoltageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getMeanVoltageBuilder() {
          
          onChanged();
          return getMeanVoltageFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMeanVoltageOrBuilder() {
          if (meanVoltageBuilder_ != null) {
            return meanVoltageBuilder_.getMessageOrBuilder();
          } else {
            return meanVoltage_ == null ?
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : meanVoltage_;
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample meanVoltage = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getMeanVoltageFieldBuilder() {
          if (meanVoltageBuilder_ == null) {
            meanVoltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    getMeanVoltage(),
                    getParentForChildren(),
                    isClean());
            meanVoltage_ = null;
          }
          return meanVoltageBuilder_;
        }

        private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> minimumVoltageBuilder_;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         * @return Whether the minimumVoltage field is set.
         */
        public boolean hasMinimumVoltage() {
          return minimumVoltageBuilder_ != null || minimumVoltage_ != null;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         * @return The minimumVoltage.
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMinimumVoltage() {
          if (minimumVoltageBuilder_ == null) {
            return minimumVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : minimumVoltage_;
          } else {
            return minimumVoltageBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public Builder setMinimumVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (minimumVoltageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            minimumVoltage_ = value;
            onChanged();
          } else {
            minimumVoltageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public Builder setMinimumVoltage(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (minimumVoltageBuilder_ == null) {
            minimumVoltage_ = builderForValue.build();
            onChanged();
          } else {
            minimumVoltageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public Builder mergeMinimumVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (minimumVoltageBuilder_ == null) {
            if (minimumVoltage_ != null) {
              minimumVoltage_ =
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(minimumVoltage_).mergeFrom(value).buildPartial();
            } else {
              minimumVoltage_ = value;
            }
            onChanged();
          } else {
            minimumVoltageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public Builder clearMinimumVoltage() {
          if (minimumVoltageBuilder_ == null) {
            minimumVoltage_ = null;
            onChanged();
          } else {
            minimumVoltage_ = null;
            minimumVoltageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getMinimumVoltageBuilder() {
          
          onChanged();
          return getMinimumVoltageFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMinimumVoltageOrBuilder() {
          if (minimumVoltageBuilder_ != null) {
            return minimumVoltageBuilder_.getMessageOrBuilder();
          } else {
            return minimumVoltage_ == null ?
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : minimumVoltage_;
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample minimumVoltage = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getMinimumVoltageFieldBuilder() {
          if (minimumVoltageBuilder_ == null) {
            minimumVoltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    getMinimumVoltage(),
                    getParentForChildren(),
                    isClean());
            minimumVoltage_ = null;
          }
          return minimumVoltageBuilder_;
        }

        private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> maximumVoltageBuilder_;
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         * @return Whether the maximumVoltage field is set.
         */
        public boolean hasMaximumVoltage() {
          return maximumVoltageBuilder_ != null || maximumVoltage_ != null;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         * @return The maximumVoltage.
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getMaximumVoltage() {
          if (maximumVoltageBuilder_ == null) {
            return maximumVoltage_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : maximumVoltage_;
          } else {
            return maximumVoltageBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public Builder setMaximumVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (maximumVoltageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maximumVoltage_ = value;
            onChanged();
          } else {
            maximumVoltageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public Builder setMaximumVoltage(
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
          if (maximumVoltageBuilder_ == null) {
            maximumVoltage_ = builderForValue.build();
            onChanged();
          } else {
            maximumVoltageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public Builder mergeMaximumVoltage(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
          if (maximumVoltageBuilder_ == null) {
            if (maximumVoltage_ != null) {
              maximumVoltage_ =
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(maximumVoltage_).mergeFrom(value).buildPartial();
            } else {
              maximumVoltage_ = value;
            }
            onChanged();
          } else {
            maximumVoltageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public Builder clearMaximumVoltage() {
          if (maximumVoltageBuilder_ == null) {
            maximumVoltage_ = null;
            onChanged();
          } else {
            maximumVoltage_ = null;
            maximumVoltageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getMaximumVoltageBuilder() {
          
          onChanged();
          return getMaximumVoltageFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getMaximumVoltageOrBuilder() {
          if (maximumVoltageBuilder_ != null) {
            return maximumVoltageBuilder_.getMessageOrBuilder();
          } else {
            return maximumVoltage_ == null ?
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : maximumVoltage_;
          }
        }
        /**
         * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample maximumVoltage = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
            getMaximumVoltageFieldBuilder() {
          if (maximumVoltageBuilder_ == null) {
            maximumVoltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                    getMaximumVoltage(),
                    getParentForChildren(),
                    isClean());
            maximumVoltage_ = null;
          }
          return maximumVoltageBuilder_;
        }

        private int numSamples_ ;
        /**
         * <code>uint32 numSamples = 4;</code>
         * @return The numSamples.
         */
        @java.lang.Override
        public int getNumSamples() {
          return numSamples_;
        }
        /**
         * <code>uint32 numSamples = 4;</code>
         * @param value The numSamples to set.
         * @return This builder for chaining.
         */
        public Builder setNumSamples(int value) {
          
          numSamples_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 numSamples = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearNumSamples() {
          
          numSamples_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Duration statsSampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> statsSampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         * @return Whether the statsSampleInterval field is set.
         */
        public boolean hasStatsSampleInterval() {
          return statsSampleIntervalBuilder_ != null || statsSampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         * @return The statsSampleInterval.
         */
        public com.google.protobuf.Duration getStatsSampleInterval() {
          if (statsSampleIntervalBuilder_ == null) {
            return statsSampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : statsSampleInterval_;
          } else {
            return statsSampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public Builder setStatsSampleInterval(com.google.protobuf.Duration value) {
          if (statsSampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statsSampleInterval_ = value;
            onChanged();
          } else {
            statsSampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public Builder setStatsSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (statsSampleIntervalBuilder_ == null) {
            statsSampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            statsSampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public Builder mergeStatsSampleInterval(com.google.protobuf.Duration value) {
          if (statsSampleIntervalBuilder_ == null) {
            if (statsSampleInterval_ != null) {
              statsSampleInterval_ =
                com.google.protobuf.Duration.newBuilder(statsSampleInterval_).mergeFrom(value).buildPartial();
            } else {
              statsSampleInterval_ = value;
            }
            onChanged();
          } else {
            statsSampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public Builder clearStatsSampleInterval() {
          if (statsSampleIntervalBuilder_ == null) {
            statsSampleInterval_ = null;
            onChanged();
          } else {
            statsSampleInterval_ = null;
            statsSampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public com.google.protobuf.Duration.Builder getStatsSampleIntervalBuilder() {
          
          onChanged();
          return getStatsSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        public com.google.protobuf.DurationOrBuilder getStatsSampleIntervalOrBuilder() {
          if (statsSampleIntervalBuilder_ != null) {
            return statsSampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return statsSampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : statsSampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration statsSampleInterval = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getStatsSampleIntervalFieldBuilder() {
          if (statsSampleIntervalBuilder_ == null) {
            statsSampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getStatsSampleInterval(),
                    getParentForChildren(),
                    isClean());
            statsSampleInterval_ = null;
          }
          return statsSampleIntervalBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent)
      private static final nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent();
      }

      public static nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BatteryVoltageStatisticsEvent>
          PARSER = new com.google.protobuf.AbstractParser<BatteryVoltageStatisticsEvent>() {
        @java.lang.Override
        public BatteryVoltageStatisticsEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryVoltageStatisticsEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<BatteryVoltageStatisticsEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BatteryVoltageStatisticsEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageStatisticsEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int BATTERYVALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue_;
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     * @return Whether the batteryValue field is set.
     */
    @java.lang.Override
    public boolean hasBatteryValue() {
      return batteryValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     * @return The batteryValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getBatteryValue() {
      return batteryValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : batteryValue_;
    }
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getBatteryValueOrBuilder() {
      return getBatteryValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (batteryValue_ != null) {
        output.writeMessage(1, getBatteryValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(2, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (batteryValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBatteryValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.BatteryVoltageTrait other = (nest.trait.sensor.Sensor.BatteryVoltageTrait) obj;

      if (hasBatteryValue() != other.hasBatteryValue()) return false;
      if (hasBatteryValue()) {
        if (!getBatteryValue()
            .equals(other.getBatteryValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBatteryValue()) {
        hash = (37 * hash) + BATTERYVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBatteryValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.BatteryVoltageTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.BatteryVoltageTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.BatteryVoltageTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.BatteryVoltageTrait)
        nest.trait.sensor.Sensor.BatteryVoltageTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.BatteryVoltageTrait.class, nest.trait.sensor.Sensor.BatteryVoltageTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.BatteryVoltageTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (batteryValueBuilder_ == null) {
          batteryValue_ = null;
        } else {
          batteryValue_ = null;
          batteryValueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.BatteryVoltageTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait build() {
        nest.trait.sensor.Sensor.BatteryVoltageTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.BatteryVoltageTrait buildPartial() {
        nest.trait.sensor.Sensor.BatteryVoltageTrait result = new nest.trait.sensor.Sensor.BatteryVoltageTrait(this);
        if (batteryValueBuilder_ == null) {
          result.batteryValue_ = batteryValue_;
        } else {
          result.batteryValue_ = batteryValueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.BatteryVoltageTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.BatteryVoltageTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.BatteryVoltageTrait other) {
        if (other == nest.trait.sensor.Sensor.BatteryVoltageTrait.getDefaultInstance()) return this;
        if (other.hasBatteryValue()) {
          mergeBatteryValue(other.getBatteryValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.BatteryVoltageTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.BatteryVoltageTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> batteryValueBuilder_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       * @return Whether the batteryValue field is set.
       */
      public boolean hasBatteryValue() {
        return batteryValueBuilder_ != null || batteryValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       * @return The batteryValue.
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample getBatteryValue() {
        if (batteryValueBuilder_ == null) {
          return batteryValue_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : batteryValue_;
        } else {
          return batteryValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public Builder setBatteryValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
        if (batteryValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batteryValue_ = value;
          onChanged();
        } else {
          batteryValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public Builder setBatteryValue(
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder builderForValue) {
        if (batteryValueBuilder_ == null) {
          batteryValue_ = builderForValue.build();
          onChanged();
        } else {
          batteryValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public Builder mergeBatteryValue(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample value) {
        if (batteryValueBuilder_ == null) {
          if (batteryValue_ != null) {
            batteryValue_ =
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.newBuilder(batteryValue_).mergeFrom(value).buildPartial();
          } else {
            batteryValue_ = value;
          }
          onChanged();
        } else {
          batteryValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public Builder clearBatteryValue() {
        if (batteryValueBuilder_ == null) {
          batteryValue_ = null;
          onChanged();
        } else {
          batteryValue_ = null;
          batteryValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder getBatteryValueBuilder() {
        
        onChanged();
        return getBatteryValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder getBatteryValueOrBuilder() {
        if (batteryValueBuilder_ != null) {
          return batteryValueBuilder_.getMessageOrBuilder();
        } else {
          return batteryValue_ == null ?
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.getDefaultInstance() : batteryValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageSample batteryValue = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder> 
          getBatteryValueFieldBuilder() {
        if (batteryValueBuilder_ == null) {
          batteryValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSample.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageSampleOrBuilder>(
                  getBatteryValue(),
                  getParentForChildren(),
                  isClean());
          batteryValue_ = null;
        }
        return batteryValueBuilder_;
      }

      private nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation faultInformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformation.Builder, nest.trait.sensor.Sensor.BatteryVoltageTrait.BatteryVoltageFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.BatteryVoltageTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.BatteryVoltageTrait)
    private static final nest.trait.sensor.Sensor.BatteryVoltageTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.BatteryVoltageTrait();
    }

    public static nest.trait.sensor.Sensor.BatteryVoltageTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatteryVoltageTrait>
        PARSER = new com.google.protobuf.AbstractParser<BatteryVoltageTrait>() {
      @java.lang.Override
      public BatteryVoltageTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryVoltageTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatteryVoltageTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryVoltageTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.BatteryVoltageTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AmbientLightTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.AmbientLightTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     * @return Whether the ambientLightValue field is set.
     */
    boolean hasAmbientLightValue();
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     * @return The ambientLightValue.
     */
    nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getAmbientLightValue();
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     */
    nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getAmbientLightValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     */
    nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.AmbientLightTrait}
   */
  public static final class AmbientLightTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.AmbientLightTrait)
      AmbientLightTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AmbientLightTrait.newBuilder() to construct.
    private AmbientLightTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AmbientLightTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AmbientLightTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AmbientLightTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder subBuilder = null;
              if (ambientLightValue_ != null) {
                subBuilder = ambientLightValue_.toBuilder();
              }
              ambientLightValue_ = input.readMessage(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ambientLightValue_);
                ambientLightValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.AmbientLightTrait.class, nest.trait.sensor.Sensor.AmbientLightTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType}
     */
    public enum AmbientLightFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_NONE = 1;</code>
       */
      AMBIENT_LIGHT_FAULT_TYPE_NONE(1),
      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      AMBIENT_LIGHT_FAULT_TYPE_UNRESPONSIVE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int AMBIENT_LIGHT_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>AMBIENT_LIGHT_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int AMBIENT_LIGHT_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AmbientLightFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AmbientLightFaultType forNumber(int value) {
        switch (value) {
          case 0: return AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED;
          case 1: return AMBIENT_LIGHT_FAULT_TYPE_NONE;
          case 2: return AMBIENT_LIGHT_FAULT_TYPE_UNRESPONSIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AmbientLightFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AmbientLightFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AmbientLightFaultType>() {
              public AmbientLightFaultType findValueByNumber(int number) {
                return AmbientLightFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.AmbientLightTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final AmbientLightFaultType[] VALUES = values();

      public static AmbientLightFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AmbientLightFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType)
    }

    public interface AmbientLightSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.AmbientLightTrait.AmbientLightSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       * @return Whether the ambientLight field is set.
       */
      boolean hasAmbientLight();
      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       * @return The ambientLight.
       */
      com.google.protobuf.FloatValue getAmbientLight();
      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getAmbientLightOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightSample}
     */
    public static final class AmbientLightSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightSample)
        AmbientLightSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AmbientLightSample.newBuilder() to construct.
      private AmbientLightSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AmbientLightSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AmbientLightSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AmbientLightSample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (ambientLight_ != null) {
                  subBuilder = ambientLight_.toBuilder();
                }
                ambientLight_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ambientLight_);
                  ambientLight_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder.class);
      }

      public static final int AMBIENTLIGHT_FIELD_NUMBER = 1;
      private com.google.protobuf.FloatValue ambientLight_;
      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       * @return Whether the ambientLight field is set.
       */
      @java.lang.Override
      public boolean hasAmbientLight() {
        return ambientLight_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       * @return The ambientLight.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getAmbientLight() {
        return ambientLight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : ambientLight_;
      }
      /**
       * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getAmbientLightOrBuilder() {
        return getAmbientLight();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ambientLight_ != null) {
          output.writeMessage(1, getAmbientLight());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ambientLight_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getAmbientLight());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample other = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample) obj;

        if (hasAmbientLight() != other.hasAmbientLight()) return false;
        if (hasAmbientLight()) {
          if (!getAmbientLight()
              .equals(other.getAmbientLight())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAmbientLight()) {
          hash = (37 * hash) + AMBIENTLIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getAmbientLight().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightSample)
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (ambientLightBuilder_ == null) {
            ambientLight_ = null;
          } else {
            ambientLight_ = null;
            ambientLightBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample build() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample buildPartial() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample result = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample(this);
          if (ambientLightBuilder_ == null) {
            result.ambientLight_ = ambientLight_;
          } else {
            result.ambientLight_ = ambientLightBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample) {
            return mergeFrom((nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample other) {
          if (other == nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance()) return this;
          if (other.hasAmbientLight()) {
            mergeAmbientLight(other.getAmbientLight());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue ambientLight_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> ambientLightBuilder_;
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         * @return Whether the ambientLight field is set.
         */
        public boolean hasAmbientLight() {
          return ambientLightBuilder_ != null || ambientLight_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         * @return The ambientLight.
         */
        public com.google.protobuf.FloatValue getAmbientLight() {
          if (ambientLightBuilder_ == null) {
            return ambientLight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : ambientLight_;
          } else {
            return ambientLightBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public Builder setAmbientLight(com.google.protobuf.FloatValue value) {
          if (ambientLightBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ambientLight_ = value;
            onChanged();
          } else {
            ambientLightBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public Builder setAmbientLight(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (ambientLightBuilder_ == null) {
            ambientLight_ = builderForValue.build();
            onChanged();
          } else {
            ambientLightBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public Builder mergeAmbientLight(com.google.protobuf.FloatValue value) {
          if (ambientLightBuilder_ == null) {
            if (ambientLight_ != null) {
              ambientLight_ =
                com.google.protobuf.FloatValue.newBuilder(ambientLight_).mergeFrom(value).buildPartial();
            } else {
              ambientLight_ = value;
            }
            onChanged();
          } else {
            ambientLightBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public Builder clearAmbientLight() {
          if (ambientLightBuilder_ == null) {
            ambientLight_ = null;
            onChanged();
          } else {
            ambientLight_ = null;
            ambientLightBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public com.google.protobuf.FloatValue.Builder getAmbientLightBuilder() {
          
          onChanged();
          return getAmbientLightFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getAmbientLightOrBuilder() {
          if (ambientLightBuilder_ != null) {
            return ambientLightBuilder_.getMessageOrBuilder();
          } else {
            return ambientLight_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : ambientLight_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue ambientLight = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getAmbientLightFieldBuilder() {
          if (ambientLightBuilder_ == null) {
            ambientLightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getAmbientLight(),
                    getParentForChildren(),
                    isClean());
            ambientLight_ = null;
          }
          return ambientLightBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightSample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightSample)
      private static final nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample();
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AmbientLightSample>
          PARSER = new com.google.protobuf.AbstractParser<AmbientLightSample>() {
        @java.lang.Override
        public AmbientLightSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AmbientLightSample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AmbientLightSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AmbientLightSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AmbientLightFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType();

      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation}
     */
    public static final class AmbientLightFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation)
        AmbientLightFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AmbientLightFaultInformation.newBuilder() to construct.
      private AmbientLightFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AmbientLightFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AmbientLightFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AmbientLightFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType result = nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample lastValue_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation other = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation)
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation build() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation result = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType result = nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation)
      private static final nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation();
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AmbientLightFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<AmbientLightFaultInformation>() {
        @java.lang.Override
        public AmbientLightFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AmbientLightFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AmbientLightFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AmbientLightFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AmbientLightFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType();

      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue();
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent}
     */
    public static final class AmbientLightFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent)
        AmbientLightFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AmbientLightFaultEvent.newBuilder() to construct.
      private AmbientLightFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AmbientLightFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AmbientLightFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AmbientLightFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType result = nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample lastValue_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(35, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.AMBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent other = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent)
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent build() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent result = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType result = nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightFaultEvent)
      private static final nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent();
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AmbientLightFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<AmbientLightFaultEvent>() {
        @java.lang.Override
        public AmbientLightFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AmbientLightFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AmbientLightFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AmbientLightFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AmbientLightPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent}
     */
    public static final class AmbientLightPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)
        AmbientLightPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AmbientLightPeriodicSamplesEvent.newBuilder() to construct.
      private AmbientLightPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AmbientLightPeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AmbientLightPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AmbientLightPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.AmbientLightTrait.AmbientLightSample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AmbientLightPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<AmbientLightPeriodicSamplesEvent>() {
        @java.lang.Override
        public AmbientLightPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AmbientLightPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AmbientLightPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AmbientLightPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int AMBIENTLIGHTVALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample ambientLightValue_;
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     * @return Whether the ambientLightValue field is set.
     */
    @java.lang.Override
    public boolean hasAmbientLightValue() {
      return ambientLightValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     * @return The ambientLightValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getAmbientLightValue() {
      return ambientLightValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : ambientLightValue_;
    }
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getAmbientLightValueOrBuilder() {
      return getAmbientLightValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ambientLightValue_ != null) {
        output.writeMessage(1, getAmbientLightValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(2, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ambientLightValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAmbientLightValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.AmbientLightTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.AmbientLightTrait other = (nest.trait.sensor.Sensor.AmbientLightTrait) obj;

      if (hasAmbientLightValue() != other.hasAmbientLightValue()) return false;
      if (hasAmbientLightValue()) {
        if (!getAmbientLightValue()
            .equals(other.getAmbientLightValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAmbientLightValue()) {
        hash = (37 * hash) + AMBIENTLIGHTVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getAmbientLightValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.AmbientLightTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.AmbientLightTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.AmbientLightTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.AmbientLightTrait)
        nest.trait.sensor.Sensor.AmbientLightTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.AmbientLightTrait.class, nest.trait.sensor.Sensor.AmbientLightTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.AmbientLightTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ambientLightValueBuilder_ == null) {
          ambientLightValue_ = null;
        } else {
          ambientLightValue_ = null;
          ambientLightValueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_AmbientLightTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.AmbientLightTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait build() {
        nest.trait.sensor.Sensor.AmbientLightTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.AmbientLightTrait buildPartial() {
        nest.trait.sensor.Sensor.AmbientLightTrait result = new nest.trait.sensor.Sensor.AmbientLightTrait(this);
        if (ambientLightValueBuilder_ == null) {
          result.ambientLightValue_ = ambientLightValue_;
        } else {
          result.ambientLightValue_ = ambientLightValueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.AmbientLightTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.AmbientLightTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.AmbientLightTrait other) {
        if (other == nest.trait.sensor.Sensor.AmbientLightTrait.getDefaultInstance()) return this;
        if (other.hasAmbientLightValue()) {
          mergeAmbientLightValue(other.getAmbientLightValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.AmbientLightTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.AmbientLightTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample ambientLightValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> ambientLightValueBuilder_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       * @return Whether the ambientLightValue field is set.
       */
      public boolean hasAmbientLightValue() {
        return ambientLightValueBuilder_ != null || ambientLightValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       * @return The ambientLightValue.
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample getAmbientLightValue() {
        if (ambientLightValueBuilder_ == null) {
          return ambientLightValue_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : ambientLightValue_;
        } else {
          return ambientLightValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public Builder setAmbientLightValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
        if (ambientLightValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ambientLightValue_ = value;
          onChanged();
        } else {
          ambientLightValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public Builder setAmbientLightValue(
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder builderForValue) {
        if (ambientLightValueBuilder_ == null) {
          ambientLightValue_ = builderForValue.build();
          onChanged();
        } else {
          ambientLightValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public Builder mergeAmbientLightValue(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample value) {
        if (ambientLightValueBuilder_ == null) {
          if (ambientLightValue_ != null) {
            ambientLightValue_ =
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.newBuilder(ambientLightValue_).mergeFrom(value).buildPartial();
          } else {
            ambientLightValue_ = value;
          }
          onChanged();
        } else {
          ambientLightValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public Builder clearAmbientLightValue() {
        if (ambientLightValueBuilder_ == null) {
          ambientLightValue_ = null;
          onChanged();
        } else {
          ambientLightValue_ = null;
          ambientLightValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder getAmbientLightValueBuilder() {
        
        onChanged();
        return getAmbientLightValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder getAmbientLightValueOrBuilder() {
        if (ambientLightValueBuilder_ != null) {
          return ambientLightValueBuilder_.getMessageOrBuilder();
        } else {
          return ambientLightValue_ == null ?
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.getDefaultInstance() : ambientLightValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightSample ambientLightValue = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder> 
          getAmbientLightValueFieldBuilder() {
        if (ambientLightValueBuilder_ == null) {
          ambientLightValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSample.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightSampleOrBuilder>(
                  getAmbientLightValue(),
                  getParentForChildren(),
                  isClean());
          ambientLightValue_ = null;
        }
        return ambientLightValueBuilder_;
      }

      private nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.AmbientLightTrait.AmbientLightFaultInformation faultInformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformation.Builder, nest.trait.sensor.Sensor.AmbientLightTrait.AmbientLightFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.AmbientLightTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.AmbientLightTrait)
    private static final nest.trait.sensor.Sensor.AmbientLightTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.AmbientLightTrait();
    }

    public static nest.trait.sensor.Sensor.AmbientLightTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AmbientLightTrait>
        PARSER = new com.google.protobuf.AbstractParser<AmbientLightTrait>() {
      @java.lang.Override
      public AmbientLightTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AmbientLightTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AmbientLightTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AmbientLightTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.AmbientLightTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HumidityTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.sensor.HumidityTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     * @return Whether the humidityValue field is set.
     */
    boolean hasHumidityValue();
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     * @return The humidityValue.
     */
    nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getHumidityValue();
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     */
    nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getHumidityValueOrBuilder();

    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     */
    nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.sensor.HumidityTrait}
   */
  public static final class HumidityTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.sensor.HumidityTrait)
      HumidityTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HumidityTrait.newBuilder() to construct.
    private HumidityTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HumidityTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HumidityTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HumidityTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder subBuilder = null;
              if (humidityValue_ != null) {
                subBuilder = humidityValue_.toBuilder();
              }
              humidityValue_ = input.readMessage(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(humidityValue_);
                humidityValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.sensor.Sensor.HumidityTrait.class, nest.trait.sensor.Sensor.HumidityTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.sensor.HumidityTrait.HumidityFaultType}
     */
    public enum HumidityFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HUMIDITY_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      HUMIDITY_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>HUMIDITY_FAULT_TYPE_NONE = 1;</code>
       */
      HUMIDITY_FAULT_TYPE_NONE(1),
      /**
       * <code>HUMIDITY_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      HUMIDITY_FAULT_TYPE_UNRESPONSIVE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>HUMIDITY_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int HUMIDITY_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>HUMIDITY_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int HUMIDITY_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>HUMIDITY_FAULT_TYPE_UNRESPONSIVE = 2;</code>
       */
      public static final int HUMIDITY_FAULT_TYPE_UNRESPONSIVE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HumidityFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static HumidityFaultType forNumber(int value) {
        switch (value) {
          case 0: return HUMIDITY_FAULT_TYPE_UNSPECIFIED;
          case 1: return HUMIDITY_FAULT_TYPE_NONE;
          case 2: return HUMIDITY_FAULT_TYPE_UNRESPONSIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HumidityFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          HumidityFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HumidityFaultType>() {
              public HumidityFaultType findValueByNumber(int number) {
                return HumidityFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.HumidityTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final HumidityFaultType[] VALUES = values();

      public static HumidityFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private HumidityFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.sensor.HumidityTrait.HumidityFaultType)
    }

    public interface HumiditySampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.HumidityTrait.HumiditySample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       * @return Whether the humidity field is set.
       */
      boolean hasHumidity();
      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       * @return The humidity.
       */
      com.google.protobuf.FloatValue getHumidity();
      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       */
      com.google.protobuf.FloatValueOrBuilder getHumidityOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumiditySample}
     */
    public static final class HumiditySample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.HumidityTrait.HumiditySample)
        HumiditySampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HumiditySample.newBuilder() to construct.
      private HumiditySample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HumiditySample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HumiditySample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HumiditySample(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.FloatValue.Builder subBuilder = null;
                if (humidity_ != null) {
                  subBuilder = humidity_.toBuilder();
                }
                humidity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(humidity_);
                  humidity_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.class, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder.class);
      }

      public static final int HUMIDITY_FIELD_NUMBER = 1;
      private com.google.protobuf.FloatValue humidity_;
      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       * @return Whether the humidity field is set.
       */
      @java.lang.Override
      public boolean hasHumidity() {
        return humidity_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       * @return The humidity.
       */
      @java.lang.Override
      public com.google.protobuf.FloatValue getHumidity() {
        return humidity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : humidity_;
      }
      /**
       * <code>.google.protobuf.FloatValue humidity = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.FloatValueOrBuilder getHumidityOrBuilder() {
        return getHumidity();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (humidity_ != null) {
          output.writeMessage(1, getHumidity());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (humidity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getHumidity());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.HumidityTrait.HumiditySample)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.HumidityTrait.HumiditySample other = (nest.trait.sensor.Sensor.HumidityTrait.HumiditySample) obj;

        if (hasHumidity() != other.hasHumidity()) return false;
        if (hasHumidity()) {
          if (!getHumidity()
              .equals(other.getHumidity())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasHumidity()) {
          hash = (37 * hash) + HUMIDITY_FIELD_NUMBER;
          hash = (53 * hash) + getHumidity().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumiditySample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.HumidityTrait.HumiditySample)
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.class, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (humidityBuilder_ == null) {
            humidity_ = null;
          } else {
            humidity_ = null;
            humidityBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample build() {
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample buildPartial() {
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample result = new nest.trait.sensor.Sensor.HumidityTrait.HumiditySample(this);
          if (humidityBuilder_ == null) {
            result.humidity_ = humidity_;
          } else {
            result.humidity_ = humidityBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.HumidityTrait.HumiditySample) {
            return mergeFrom((nest.trait.sensor.Sensor.HumidityTrait.HumiditySample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample other) {
          if (other == nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance()) return this;
          if (other.hasHumidity()) {
            mergeHumidity(other.getHumidity());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.HumidityTrait.HumiditySample) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.FloatValue humidity_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> humidityBuilder_;
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         * @return Whether the humidity field is set.
         */
        public boolean hasHumidity() {
          return humidityBuilder_ != null || humidity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         * @return The humidity.
         */
        public com.google.protobuf.FloatValue getHumidity() {
          if (humidityBuilder_ == null) {
            return humidity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : humidity_;
          } else {
            return humidityBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public Builder setHumidity(com.google.protobuf.FloatValue value) {
          if (humidityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            humidity_ = value;
            onChanged();
          } else {
            humidityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public Builder setHumidity(
            com.google.protobuf.FloatValue.Builder builderForValue) {
          if (humidityBuilder_ == null) {
            humidity_ = builderForValue.build();
            onChanged();
          } else {
            humidityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public Builder mergeHumidity(com.google.protobuf.FloatValue value) {
          if (humidityBuilder_ == null) {
            if (humidity_ != null) {
              humidity_ =
                com.google.protobuf.FloatValue.newBuilder(humidity_).mergeFrom(value).buildPartial();
            } else {
              humidity_ = value;
            }
            onChanged();
          } else {
            humidityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public Builder clearHumidity() {
          if (humidityBuilder_ == null) {
            humidity_ = null;
            onChanged();
          } else {
            humidity_ = null;
            humidityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public com.google.protobuf.FloatValue.Builder getHumidityBuilder() {
          
          onChanged();
          return getHumidityFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getHumidityOrBuilder() {
          if (humidityBuilder_ != null) {
            return humidityBuilder_.getMessageOrBuilder();
          } else {
            return humidity_ == null ?
                com.google.protobuf.FloatValue.getDefaultInstance() : humidity_;
          }
        }
        /**
         * <code>.google.protobuf.FloatValue humidity = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
            getHumidityFieldBuilder() {
          if (humidityBuilder_ == null) {
            humidityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                    getHumidity(),
                    getParentForChildren(),
                    isClean());
            humidity_ = null;
          }
          return humidityBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.HumidityTrait.HumiditySample)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.HumidityTrait.HumiditySample)
      private static final nest.trait.sensor.Sensor.HumidityTrait.HumiditySample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.HumidityTrait.HumiditySample();
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HumiditySample>
          PARSER = new com.google.protobuf.AbstractParser<HumiditySample>() {
        @java.lang.Override
        public HumiditySample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HumiditySample(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HumiditySample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HumiditySample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HumidityFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.HumidityTrait.HumidityFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType();

      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityFaultInformation}
     */
    public static final class HumidityFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.HumidityTrait.HumidityFaultInformation)
        HumidityFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HumidityFaultInformation.newBuilder() to construct.
      private HumidityFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HumidityFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HumidityFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HumidityFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 26: {
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType result = nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 3;
      private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample lastValue_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.HUMIDITY_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(3, getLastValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.HUMIDITY_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLastValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation other = (nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.HumidityTrait.HumidityFaultInformation)
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation build() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation buildPartial() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation result = new nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation) {
            return mergeFrom((nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation other) {
          if (other == nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType result = nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.HumidityTrait.HumidityFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.HumidityTrait.HumidityFaultInformation)
      private static final nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation();
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HumidityFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<HumidityFaultInformation>() {
        @java.lang.Override
        public HumidityFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HumidityFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HumidityFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HumidityFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HumidityFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.HumidityTrait.HumidityFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType();

      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      boolean hasLastValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       * @return The lastValue.
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue();
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder();

      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      boolean hasDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      com.google.protobuf.Duration getDurationSinceLastSample();
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder();

      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      boolean hasLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      com.google.protobuf.Duration getLastSamplePeriod();
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder();
    }
    /**
     * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityFaultEvent}
     */
    public static final class HumidityFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.HumidityTrait.HumidityFaultEvent)
        HumidityFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HumidityFaultEvent.newBuilder() to construct.
      private HumidityFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HumidityFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HumidityFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HumidityFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 266: {
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder subBuilder = null;
                if (lastValue_ != null) {
                  subBuilder = lastValue_.toBuilder();
                }
                lastValue_ = input.readMessage(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastValue_);
                  lastValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 274: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (durationSinceLastSample_ != null) {
                  subBuilder = durationSinceLastSample_.toBuilder();
                }
                durationSinceLastSample_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(durationSinceLastSample_);
                  durationSinceLastSample_ = subBuilder.buildPartial();
                }

                break;
              }
              case 282: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (lastSamplePeriod_ != null) {
                  subBuilder = lastSamplePeriod_.toBuilder();
                }
                lastSamplePeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastSamplePeriod_);
                  lastSamplePeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType result = nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.valueOf(type_);
        return result == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.UNRECOGNIZED : result;
      }

      public static final int LASTVALUE_FIELD_NUMBER = 33;
      private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample lastValue_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       * @return Whether the lastValue field is set.
       */
      @java.lang.Override
      public boolean hasLastValue() {
        return lastValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       * @return The lastValue.
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue() {
        return lastValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder() {
        return getLastValue();
      }

      public static final int DURATIONSINCELASTSAMPLE_FIELD_NUMBER = 34;
      private com.google.protobuf.Duration durationSinceLastSample_;
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return Whether the durationSinceLastSample field is set.
       */
      @java.lang.Override
      public boolean hasDurationSinceLastSample() {
        return durationSinceLastSample_ != null;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       * @return The durationSinceLastSample.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDurationSinceLastSample() {
        return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
      }
      /**
       * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
        return getDurationSinceLastSample();
      }

      public static final int LASTSAMPLEPERIOD_FIELD_NUMBER = 35;
      private com.google.protobuf.Duration lastSamplePeriod_;
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return Whether the lastSamplePeriod field is set.
       */
      @java.lang.Override
      public boolean hasLastSamplePeriod() {
        return lastSamplePeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       * @return The lastSamplePeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getLastSamplePeriod() {
        return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
      }
      /**
       * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
        return getLastSamplePeriod();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.HUMIDITY_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        if (lastValue_ != null) {
          output.writeMessage(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          output.writeMessage(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          output.writeMessage(35, getLastSamplePeriod());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.HUMIDITY_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        if (lastValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(33, getLastValue());
        }
        if (durationSinceLastSample_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(34, getDurationSinceLastSample());
        }
        if (lastSamplePeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, getLastSamplePeriod());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent other = (nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (hasLastValue() != other.hasLastValue()) return false;
        if (hasLastValue()) {
          if (!getLastValue()
              .equals(other.getLastValue())) return false;
        }
        if (hasDurationSinceLastSample() != other.hasDurationSinceLastSample()) return false;
        if (hasDurationSinceLastSample()) {
          if (!getDurationSinceLastSample()
              .equals(other.getDurationSinceLastSample())) return false;
        }
        if (hasLastSamplePeriod() != other.hasLastSamplePeriod()) return false;
        if (hasLastSamplePeriod()) {
          if (!getLastSamplePeriod()
              .equals(other.getLastSamplePeriod())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasLastValue()) {
          hash = (37 * hash) + LASTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLastValue().hashCode();
        }
        if (hasDurationSinceLastSample()) {
          hash = (37 * hash) + DURATIONSINCELASTSAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getDurationSinceLastSample().hashCode();
        }
        if (hasLastSamplePeriod()) {
          hash = (37 * hash) + LASTSAMPLEPERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getLastSamplePeriod().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.HumidityTrait.HumidityFaultEvent)
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          if (lastValueBuilder_ == null) {
            lastValue_ = null;
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent build() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent buildPartial() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent result = new nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          if (lastValueBuilder_ == null) {
            result.lastValue_ = lastValue_;
          } else {
            result.lastValue_ = lastValueBuilder_.build();
          }
          if (durationSinceLastSampleBuilder_ == null) {
            result.durationSinceLastSample_ = durationSinceLastSample_;
          } else {
            result.durationSinceLastSample_ = durationSinceLastSampleBuilder_.build();
          }
          if (lastSamplePeriodBuilder_ == null) {
            result.lastSamplePeriod_ = lastSamplePeriod_;
          } else {
            result.lastSamplePeriod_ = lastSamplePeriodBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent other) {
          if (other == nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasLastValue()) {
            mergeLastValue(other.getLastValue());
          }
          if (other.hasDurationSinceLastSample()) {
            mergeDurationSinceLastSample(other.getDurationSinceLastSample());
          }
          if (other.hasLastSamplePeriod()) {
            mergeLastSamplePeriod(other.getLastSamplePeriod());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType result = nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.valueOf(type_);
          return result == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample lastValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> lastValueBuilder_;
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         * @return Whether the lastValue field is set.
         */
        public boolean hasLastValue() {
          return lastValueBuilder_ != null || lastValue_ != null;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         * @return The lastValue.
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getLastValue() {
          if (lastValueBuilder_ == null) {
            return lastValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
          } else {
            return lastValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public Builder setLastValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (lastValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastValue_ = value;
            onChanged();
          } else {
            lastValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public Builder setLastValue(
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
          if (lastValueBuilder_ == null) {
            lastValue_ = builderForValue.build();
            onChanged();
          } else {
            lastValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public Builder mergeLastValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (lastValueBuilder_ == null) {
            if (lastValue_ != null) {
              lastValue_ =
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.newBuilder(lastValue_).mergeFrom(value).buildPartial();
            } else {
              lastValue_ = value;
            }
            onChanged();
          } else {
            lastValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public Builder clearLastValue() {
          if (lastValueBuilder_ == null) {
            lastValue_ = null;
            onChanged();
          } else {
            lastValue_ = null;
            lastValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder getLastValueBuilder() {
          
          onChanged();
          return getLastValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getLastValueOrBuilder() {
          if (lastValueBuilder_ != null) {
            return lastValueBuilder_.getMessageOrBuilder();
          } else {
            return lastValue_ == null ?
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : lastValue_;
          }
        }
        /**
         * <code>.nest.trait.sensor.HumidityTrait.HumiditySample lastValue = 33;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
            getLastValueFieldBuilder() {
          if (lastValueBuilder_ == null) {
            lastValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder>(
                    getLastValue(),
                    getParentForChildren(),
                    isClean());
            lastValue_ = null;
          }
          return lastValueBuilder_;
        }

        private com.google.protobuf.Duration durationSinceLastSample_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationSinceLastSampleBuilder_;
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return Whether the durationSinceLastSample field is set.
         */
        public boolean hasDurationSinceLastSample() {
          return durationSinceLastSampleBuilder_ != null || durationSinceLastSample_ != null;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         * @return The durationSinceLastSample.
         */
        public com.google.protobuf.Duration getDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            return durationSinceLastSample_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          } else {
            return durationSinceLastSampleBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            durationSinceLastSample_ = value;
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder setDurationSinceLastSample(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = builderForValue.build();
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder mergeDurationSinceLastSample(com.google.protobuf.Duration value) {
          if (durationSinceLastSampleBuilder_ == null) {
            if (durationSinceLastSample_ != null) {
              durationSinceLastSample_ =
                com.google.protobuf.Duration.newBuilder(durationSinceLastSample_).mergeFrom(value).buildPartial();
            } else {
              durationSinceLastSample_ = value;
            }
            onChanged();
          } else {
            durationSinceLastSampleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public Builder clearDurationSinceLastSample() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSample_ = null;
            onChanged();
          } else {
            durationSinceLastSample_ = null;
            durationSinceLastSampleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationSinceLastSampleBuilder() {
          
          onChanged();
          return getDurationSinceLastSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationSinceLastSampleOrBuilder() {
          if (durationSinceLastSampleBuilder_ != null) {
            return durationSinceLastSampleBuilder_.getMessageOrBuilder();
          } else {
            return durationSinceLastSample_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : durationSinceLastSample_;
          }
        }
        /**
         * <code>.google.protobuf.Duration durationSinceLastSample = 34;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getDurationSinceLastSampleFieldBuilder() {
          if (durationSinceLastSampleBuilder_ == null) {
            durationSinceLastSampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getDurationSinceLastSample(),
                    getParentForChildren(),
                    isClean());
            durationSinceLastSample_ = null;
          }
          return durationSinceLastSampleBuilder_;
        }

        private com.google.protobuf.Duration lastSamplePeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lastSamplePeriodBuilder_;
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return Whether the lastSamplePeriod field is set.
         */
        public boolean hasLastSamplePeriod() {
          return lastSamplePeriodBuilder_ != null || lastSamplePeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         * @return The lastSamplePeriod.
         */
        public com.google.protobuf.Duration getLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            return lastSamplePeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          } else {
            return lastSamplePeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastSamplePeriod_ = value;
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder setLastSamplePeriod(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = builderForValue.build();
            onChanged();
          } else {
            lastSamplePeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder mergeLastSamplePeriod(com.google.protobuf.Duration value) {
          if (lastSamplePeriodBuilder_ == null) {
            if (lastSamplePeriod_ != null) {
              lastSamplePeriod_ =
                com.google.protobuf.Duration.newBuilder(lastSamplePeriod_).mergeFrom(value).buildPartial();
            } else {
              lastSamplePeriod_ = value;
            }
            onChanged();
          } else {
            lastSamplePeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public Builder clearLastSamplePeriod() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriod_ = null;
            onChanged();
          } else {
            lastSamplePeriod_ = null;
            lastSamplePeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.Duration.Builder getLastSamplePeriodBuilder() {
          
          onChanged();
          return getLastSamplePeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLastSamplePeriodOrBuilder() {
          if (lastSamplePeriodBuilder_ != null) {
            return lastSamplePeriodBuilder_.getMessageOrBuilder();
          } else {
            return lastSamplePeriod_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : lastSamplePeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Duration lastSamplePeriod = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getLastSamplePeriodFieldBuilder() {
          if (lastSamplePeriodBuilder_ == null) {
            lastSamplePeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getLastSamplePeriod(),
                    getParentForChildren(),
                    isClean());
            lastSamplePeriod_ = null;
          }
          return lastSamplePeriodBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.HumidityTrait.HumidityFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.HumidityTrait.HumidityFaultEvent)
      private static final nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent();
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HumidityFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<HumidityFaultEvent>() {
        @java.lang.Override
        public HumidityFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HumidityFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HumidityFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HumidityFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HumidityPeriodicSamplesEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      boolean hasSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      com.google.protobuf.Duration getSampleInterval();
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder();

      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> 
          getSamplesList();
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getSamples(int index);
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      java.util.List<? extends nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent}
     */
    public static final class HumidityPeriodicSamplesEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent)
        HumidityPeriodicSamplesEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HumidityPeriodicSamplesEvent.newBuilder() to construct.
      private HumidityPeriodicSamplesEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HumidityPeriodicSamplesEvent() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HumidityPeriodicSamplesEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HumidityPeriodicSamplesEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (sampleInterval_ != null) {
                  subBuilder = sampleInterval_.toBuilder();
                }
                sampleInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sampleInterval_);
                  sampleInterval_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.Builder.class);
      }

      public static final int SAMPLEINTERVAL_FIELD_NUMBER = 1;
      private com.google.protobuf.Duration sampleInterval_;
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return Whether the sampleInterval field is set.
       */
      @java.lang.Override
      public boolean hasSampleInterval() {
        return sampleInterval_ != null;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       * @return The sampleInterval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getSampleInterval() {
        return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
      }
      /**
       * <code>.google.protobuf.Duration sampleInterval = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
        return getSampleInterval();
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      private java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> samples_;
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
       */
      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sampleInterval_ != null) {
          output.writeMessage(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sampleInterval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSampleInterval());
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent)) {
          return super.equals(obj);
        }
        nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent other = (nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent) obj;

        if (hasSampleInterval() != other.hasSampleInterval()) return false;
        if (hasSampleInterval()) {
          if (!getSampleInterval()
              .equals(other.getSampleInterval())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSampleInterval()) {
          hash = (37 * hash) + SAMPLEINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getSampleInterval().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent)
          nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.class, nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.Builder.class);
        }

        // Construct using nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent getDefaultInstanceForType() {
          return nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent build() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent buildPartial() {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent result = new nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent(this);
          int from_bitField0_ = bitField0_;
          if (sampleIntervalBuilder_ == null) {
            result.sampleInterval_ = sampleInterval_;
          } else {
            result.sampleInterval_ = sampleIntervalBuilder_.build();
          }
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent) {
            return mergeFrom((nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent other) {
          if (other == nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent.getDefaultInstance()) return this;
          if (other.hasSampleInterval()) {
            mergeSampleInterval(other.getSampleInterval());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Duration sampleInterval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sampleIntervalBuilder_;
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return Whether the sampleInterval field is set.
         */
        public boolean hasSampleInterval() {
          return sampleIntervalBuilder_ != null || sampleInterval_ != null;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         * @return The sampleInterval.
         */
        public com.google.protobuf.Duration getSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            return sampleInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          } else {
            return sampleIntervalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sampleInterval_ = value;
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder setSampleInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = builderForValue.build();
            onChanged();
          } else {
            sampleIntervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder mergeSampleInterval(com.google.protobuf.Duration value) {
          if (sampleIntervalBuilder_ == null) {
            if (sampleInterval_ != null) {
              sampleInterval_ =
                com.google.protobuf.Duration.newBuilder(sampleInterval_).mergeFrom(value).buildPartial();
            } else {
              sampleInterval_ = value;
            }
            onChanged();
          } else {
            sampleIntervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public Builder clearSampleInterval() {
          if (sampleIntervalBuilder_ == null) {
            sampleInterval_ = null;
            onChanged();
          } else {
            sampleInterval_ = null;
            sampleIntervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.Duration.Builder getSampleIntervalBuilder() {
          
          onChanged();
          return getSampleIntervalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        public com.google.protobuf.DurationOrBuilder getSampleIntervalOrBuilder() {
          if (sampleIntervalBuilder_ != null) {
            return sampleIntervalBuilder_.getMessageOrBuilder();
          } else {
            return sampleInterval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : sampleInterval_;
          }
        }
        /**
         * <code>.google.protobuf.Duration sampleInterval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getSampleIntervalFieldBuilder() {
          if (sampleIntervalBuilder_ == null) {
            sampleIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getSampleInterval(),
                    getParentForChildren(),
                    isClean());
            sampleInterval_ = null;
          }
          return sampleIntervalBuilder_;
        }

        private java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            samples_ = new java.util.ArrayList<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder setSamples(
            int index, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder addSamples(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder addSamples(
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder addSamples(
            int index, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends nest.trait.sensor.Sensor.HumidityTrait.HumiditySample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public java.util.List<? extends nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance());
        }
        /**
         * <code>repeated .nest.trait.sensor.HumidityTrait.HumiditySample samples = 2;</code>
         */
        public java.util.List<nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.sensor.HumidityTrait.HumidityPeriodicSamplesEvent)
      private static final nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent();
      }

      public static nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HumidityPeriodicSamplesEvent>
          PARSER = new com.google.protobuf.AbstractParser<HumidityPeriodicSamplesEvent>() {
        @java.lang.Override
        public HumidityPeriodicSamplesEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HumidityPeriodicSamplesEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HumidityPeriodicSamplesEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HumidityPeriodicSamplesEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityPeriodicSamplesEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int HUMIDITYVALUE_FIELD_NUMBER = 1;
    private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample humidityValue_;
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     * @return Whether the humidityValue field is set.
     */
    @java.lang.Override
    public boolean hasHumidityValue() {
      return humidityValue_ != null;
    }
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     * @return The humidityValue.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getHumidityValue() {
      return humidityValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : humidityValue_;
    }
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getHumidityValueOrBuilder() {
      return getHumidityValue();
    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 2;
    private nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
     */
    @java.lang.Override
    public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (humidityValue_ != null) {
        output.writeMessage(1, getHumidityValue());
      }
      if (faultInformation_ != null) {
        output.writeMessage(2, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (humidityValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHumidityValue());
      }
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.sensor.Sensor.HumidityTrait)) {
        return super.equals(obj);
      }
      nest.trait.sensor.Sensor.HumidityTrait other = (nest.trait.sensor.Sensor.HumidityTrait) obj;

      if (hasHumidityValue() != other.hasHumidityValue()) return false;
      if (hasHumidityValue()) {
        if (!getHumidityValue()
            .equals(other.getHumidityValue())) return false;
      }
      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHumidityValue()) {
        hash = (37 * hash) + HUMIDITYVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getHumidityValue().hashCode();
      }
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.sensor.Sensor.HumidityTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.sensor.Sensor.HumidityTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.sensor.HumidityTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.sensor.HumidityTrait)
        nest.trait.sensor.Sensor.HumidityTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.sensor.Sensor.HumidityTrait.class, nest.trait.sensor.Sensor.HumidityTrait.Builder.class);
      }

      // Construct using nest.trait.sensor.Sensor.HumidityTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (humidityValueBuilder_ == null) {
          humidityValue_ = null;
        } else {
          humidityValue_ = null;
          humidityValueBuilder_ = null;
        }
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.sensor.Sensor.internal_static_nest_trait_sensor_HumidityTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait getDefaultInstanceForType() {
        return nest.trait.sensor.Sensor.HumidityTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait build() {
        nest.trait.sensor.Sensor.HumidityTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.sensor.Sensor.HumidityTrait buildPartial() {
        nest.trait.sensor.Sensor.HumidityTrait result = new nest.trait.sensor.Sensor.HumidityTrait(this);
        if (humidityValueBuilder_ == null) {
          result.humidityValue_ = humidityValue_;
        } else {
          result.humidityValue_ = humidityValueBuilder_.build();
        }
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.sensor.Sensor.HumidityTrait) {
          return mergeFrom((nest.trait.sensor.Sensor.HumidityTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.sensor.Sensor.HumidityTrait other) {
        if (other == nest.trait.sensor.Sensor.HumidityTrait.getDefaultInstance()) return this;
        if (other.hasHumidityValue()) {
          mergeHumidityValue(other.getHumidityValue());
        }
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.sensor.Sensor.HumidityTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.sensor.Sensor.HumidityTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.sensor.Sensor.HumidityTrait.HumiditySample humidityValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> humidityValueBuilder_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       * @return Whether the humidityValue field is set.
       */
      public boolean hasHumidityValue() {
        return humidityValueBuilder_ != null || humidityValue_ != null;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       * @return The humidityValue.
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample getHumidityValue() {
        if (humidityValueBuilder_ == null) {
          return humidityValue_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : humidityValue_;
        } else {
          return humidityValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public Builder setHumidityValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
        if (humidityValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          humidityValue_ = value;
          onChanged();
        } else {
          humidityValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public Builder setHumidityValue(
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder builderForValue) {
        if (humidityValueBuilder_ == null) {
          humidityValue_ = builderForValue.build();
          onChanged();
        } else {
          humidityValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public Builder mergeHumidityValue(nest.trait.sensor.Sensor.HumidityTrait.HumiditySample value) {
        if (humidityValueBuilder_ == null) {
          if (humidityValue_ != null) {
            humidityValue_ =
              nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.newBuilder(humidityValue_).mergeFrom(value).buildPartial();
          } else {
            humidityValue_ = value;
          }
          onChanged();
        } else {
          humidityValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public Builder clearHumidityValue() {
        if (humidityValueBuilder_ == null) {
          humidityValue_ = null;
          onChanged();
        } else {
          humidityValue_ = null;
          humidityValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder getHumidityValueBuilder() {
        
        onChanged();
        return getHumidityValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder getHumidityValueOrBuilder() {
        if (humidityValueBuilder_ != null) {
          return humidityValueBuilder_.getMessageOrBuilder();
        } else {
          return humidityValue_ == null ?
              nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.getDefaultInstance() : humidityValue_;
        }
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumiditySample humidityValue = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder> 
          getHumidityValueFieldBuilder() {
        if (humidityValueBuilder_ == null) {
          humidityValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.HumidityTrait.HumiditySample, nest.trait.sensor.Sensor.HumidityTrait.HumiditySample.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumiditySampleOrBuilder>(
                  getHumidityValue(),
                  getParentForChildren(),
                  isClean());
          humidityValue_ = null;
        }
        return humidityValueBuilder_;
      }

      private nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       * @return The faultInformation.
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public Builder setFaultInformation(
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public Builder mergeFaultInformation(nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      public nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.sensor.HumidityTrait.HumidityFaultInformation faultInformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformation.Builder, nest.trait.sensor.Sensor.HumidityTrait.HumidityFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.sensor.HumidityTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.sensor.HumidityTrait)
    private static final nest.trait.sensor.Sensor.HumidityTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.sensor.Sensor.HumidityTrait();
    }

    public static nest.trait.sensor.Sensor.HumidityTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HumidityTrait>
        PARSER = new com.google.protobuf.AbstractParser<HumidityTrait>() {
      @java.lang.Override
      public HumidityTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HumidityTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HumidityTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HumidityTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.sensor.Sensor.HumidityTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_TemperatureTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_TemperatureTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_AmbientLightTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_AmbientLightTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_HumidityTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_HumidityTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027nest/trait/sensor.proto\022\021nest.trait.se" +
      "nsor\032\036google/protobuf/duration.proto\032\036go" +
      "ogle/protobuf/wrappers.proto\"\313\017\n\024Passive" +
      "InfraredTrait\022a\n\032passiveInfraredSignalVa" +
      "lue\030\001 \001(\0132=.nest.trait.sensor.PassiveInf" +
      "raredTrait.PassiveInfraredSample\022c\n\034pass" +
      "iveInfraredBaselineValue\030\002 \001(\0132=.nest.tr" +
      "ait.sensor.PassiveInfraredTrait.PassiveI" +
      "nfraredSample\022a\n\020faultInformation\030\003 \001(\0132" +
      "G.nest.trait.sensor.PassiveInfraredTrait" +
      ".PassiveInfraredFaultInformation\032C\n\025Pass" +
      "iveInfraredSample\022*\n\005value\030\001 \001(\0132\033.googl" +
      "e.protobuf.FloatValue\032\265\002\n\037PassiveInfrare" +
      "dFaultInformation\022\020\n\010asserted\030\001 \001(\010\022N\n\004t" +
      "ype\030\002 \001(\0162@.nest.trait.sensor.PassiveInf" +
      "raredTrait.PassiveInfraredFaultType\022V\n\017s" +
      "ignalLastValue\030\003 \001(\0132=.nest.trait.sensor" +
      ".PassiveInfraredTrait.PassiveInfraredSam" +
      "ple\022X\n\021baselineLastValue\030\004 \001(\0132=.nest.tr" +
      "ait.sensor.PassiveInfraredTrait.PassiveI" +
      "nfraredSample\032\264\001\n)PassiveInfraredSignalP" +
      "eriodicSamplesEvent\0221\n\016sampleInterval\030\001 " +
      "\001(\0132\031.google.protobuf.Duration\022T\n\rsignal" +
      "Samples\030\002 \003(\0132=.nest.trait.sensor.Passiv" +
      "eInfraredTrait.PassiveInfraredSample\032\270\001\n" +
      "+PassiveInfraredBaselinePeriodicSamplesE" +
      "vent\0221\n\016sampleInterval\030\001 \001(\0132\031.google.pr" +
      "otobuf.Duration\022V\n\017baselineSamples\030\002 \003(\013" +
      "2=.nest.trait.sensor.PassiveInfraredTrai" +
      "t.PassiveInfraredSample\032\271\001\n/PassiveInfra" +
      "redDifferentialPeriodicSamplesEvent\0221\n\016s" +
      "ampleInterval\030\001 \001(\0132\031.google.protobuf.Du" +
      "ration\022S\n\014deltaSamples\030\002 \003(\0132=.nest.trai" +
      "t.sensor.PassiveInfraredTrait.PassiveInf" +
      "raredSample\032\240\003\n\031PassiveInfraredFaultEven" +
      "t\022\020\n\010asserted\030\001 \001(\010\022N\n\004type\030  \001(\0162@.nest" +
      ".trait.sensor.PassiveInfraredTrait.Passi" +
      "veInfraredFaultType\022V\n\017signalLastValue\030!" +
      " \001(\0132=.nest.trait.sensor.PassiveInfrared" +
      "Trait.PassiveInfraredSample\022X\n\021baselineL" +
      "astValue\030\" \001(\0132=.nest.trait.sensor.Passi" +
      "veInfraredTrait.PassiveInfraredSample\022:\n" +
      "\027durationSinceLastSample\030# \001(\0132\031.google." +
      "protobuf.Duration\0223\n\020lastSamplePeriod\030$ " +
      "\001(\0132\031.google.protobuf.Duration\032u\n$Passiv" +
      "eInfraredSignalStatisticsEvent\022\033\n\023histog" +
      "ramBoundaries\030\001 \003(\r\022\027\n\017histogramCounts\030\002" +
      " \003(\r\022\027\n\017vacancyExpected\030\003 \001(\010\"\302\001\n\030Passiv" +
      "eInfraredFaultType\022+\n\'PASSIVE_INFRARED_F" +
      "AULT_TYPE_UNSPECIFIED\020\000\022$\n PASSIVE_INFRA" +
      "RED_FAULT_TYPE_NONE\020\001\022,\n(PASSIVE_INFRARE" +
      "D_FAULT_TYPE_UNRESPONSIVE\020\002\022%\n!PASSIVE_I" +
      "NFRARED_FAULT_TYPE_STUCK\020\003\"\314\013\n\nSmokeTrai" +
      "t\022C\n\020infraredLedValue\030\003 \001(\0132).nest.trait" +
      ".sensor.SmokeTrait.SmokeSample\022?\n\014blueLe" +
      "dValue\030\004 \001(\0132).nest.trait.sensor.SmokeTr" +
      "ait.SmokeSample\022M\n\020infraredLedFault\030\005 \001(" +
      "\01323.nest.trait.sensor.SmokeTrait.SmokeFa" +
      "ultInformation\022I\n\014blueLedFault\030\006 \001(\01323.n" +
      "est.trait.sensor.SmokeTrait.SmokeFaultIn" +
      "formation\032:\n\013SmokeSample\022+\n\006sample\030\003 \001(\013" +
      "2\033.google.protobuf.FloatValue\032\243\001\n\025SmokeF" +
      "aultInformation\022\020\n\010asserted\030\001 \001(\010\022:\n\004typ" +
      "e\030\002 \001(\0162,.nest.trait.sensor.SmokeTrait.S" +
      "mokeFaultType\022<\n\tlastValue\030\003 \001(\0132).nest." +
      "trait.sensor.SmokeTrait.SmokeSample\032\224\002\n\025" +
      "InfraredLedFaultEvent\022\020\n\010asserted\030\001 \001(\010\022" +
      ":\n\004type\030  \001(\0162,.nest.trait.sensor.SmokeT" +
      "rait.SmokeFaultType\022<\n\tlastValue\030! \001(\0132)" +
      ".nest.trait.sensor.SmokeTrait.SmokeSampl" +
      "e\022:\n\027durationSinceLastSample\030\" \001(\0132\031.goo" +
      "gle.protobuf.Duration\0223\n\020lastSamplePerio" +
      "d\030# \001(\0132\031.google.protobuf.Duration\032\220\002\n\021B" +
      "lueLedFaultEvent\022\020\n\010asserted\030\001 \001(\010\022:\n\004ty" +
      "pe\030  \001(\0162,.nest.trait.sensor.SmokeTrait." +
      "SmokeFaultType\022<\n\tlastValue\030! \001(\0132).nest" +
      ".trait.sensor.SmokeTrait.SmokeSample\022:\n\027" +
      "durationSinceLastSample\030\" \001(\0132\031.google.p" +
      "rotobuf.Duration\0223\n\020lastSamplePeriod\030# \001" +
      "(\0132\031.google.protobuf.Duration\032\220\001\n\037Infrar" +
      "edLedPeriodicSamplesEvent\0221\n\016sampleInter" +
      "val\030\001 \001(\0132\031.google.protobuf.Duration\022:\n\007" +
      "samples\030\002 \003(\0132).nest.trait.sensor.SmokeT" +
      "rait.SmokeSample\032\214\001\n\033BlueLedPeriodicSamp" +
      "lesEvent\0221\n\016sampleInterval\030\001 \001(\0132\031.googl" +
      "e.protobuf.Duration\022:\n\007samples\030\002 \003(\0132).n" +
      "est.trait.sensor.SmokeTrait.SmokeSample\"" +
      "p\n\016SmokeFaultType\022 \n\034SMOKE_FAULT_TYPE_UN" +
      "SPECIFIED\020\000\022\031\n\025SMOKE_FAULT_TYPE_NONE\020\001\022!" +
      "\n\035SMOKE_FAULT_TYPE_UNRESPONSIVE\020\002\"\330\010\n\020Te" +
      "mperatureTrait\022O\n\020temperatureValue\030\001 \001(\013" +
      "25.nest.trait.sensor.TemperatureTrait.Te" +
      "mperatureSample\022Y\n\020faultInformation\030\002 \001(" +
      "\0132?.nest.trait.sensor.TemperatureTrait.T" +
      "emperatureFaultInformation\032E\n\021Temperatur" +
      "eSample\0220\n\013temperature\030\001 \001(\0132\033.google.pr" +
      "otobuf.FloatValue\032\301\001\n\033TemperatureFaultIn" +
      "formation\022\020\n\010asserted\030\001 \001(\010\022F\n\004type\030\002 \001(" +
      "\01628.nest.trait.sensor.TemperatureTrait.T" +
      "emperatureFaultType\022H\n\tlastValue\030\003 \001(\01325" +
      ".nest.trait.sensor.TemperatureTrait.Temp" +
      "eratureSample\032\262\002\n\033TemperatureSensorFault" +
      "Event\022\020\n\010asserted\030\001 \001(\010\022F\n\004type\030  \001(\01628." +
      "nest.trait.sensor.TemperatureTrait.Tempe" +
      "ratureFaultType\022H\n\tlastValue\030! \001(\01325.nes" +
      "t.trait.sensor.TemperatureTrait.Temperat" +
      "ureSample\022:\n\027durationSinceLastSample\030\" \001" +
      "(\0132\031.google.protobuf.Duration\0223\n\020lastSam" +
      "plePeriod\030$ \001(\0132\031.google.protobuf.Durati" +
      "on\032\234\001\n\037TemperaturePeriodicSamplesEvent\0221" +
      "\n\016sampleInterval\030\001 \001(\0132\031.google.protobuf" +
      ".Duration\022F\n\007samples\030\002 \003(\01325.nest.trait." +
      "sensor.TemperatureTrait.TemperatureSampl" +
      "e\"\270\001\n\024TemperatureFaultType\022&\n\"TEMPERATUR" +
      "E_FAULT_TYPE_UNSPECIFIED\020\000\022\037\n\033TEMPERATUR" +
      "E_FAULT_TYPE_NONE\020\001\022\'\n#TEMPERATURE_FAULT" +
      "_TYPE_UNRESPONSIVE\020\002\022.\n*TEMPERATURE_FAUL" +
      "T_TYPE_OUT_OF_NORMAL_RANGE\020\003\"\242\007\n\023CarbonM" +
      "onoxideTrait\022>\n\005value\030\001 \001(\0132/.nest.trait" +
      ".sensor.CarbonMonoxideTrait.CoSample\022S\n\020" +
      "faultInformation\030\002 \001(\01329.nest.trait.sens" +
      "or.CarbonMonoxideTrait.CoFaultInformatio" +
      "n\032\027\n\010CoSample\022\013\n\003ppm\030\001 \001(\r\032\254\001\n\022CoFaultIn" +
      "formation\022\020\n\010asserted\030\001 \001(\010\022@\n\004type\030\002 \001(" +
      "\01622.nest.trait.sensor.CarbonMonoxideTrai" +
      "t.CoFaultType\022B\n\tlastValue\030\003 \001(\0132/.nest." +
      "trait.sensor.CarbonMonoxideTrait.CoSampl" +
      "e\032\227\002\n\014CoFaultEvent\022\020\n\010asserted\030\001 \001(\010\022@\n\004" +
      "type\030  \001(\01622.nest.trait.sensor.CarbonMon" +
      "oxideTrait.CoFaultType\022B\n\tlastValue\030! \001(" +
      "\0132/.nest.trait.sensor.CarbonMonoxideTrai" +
      "t.CoSample\022:\n\027durationSinceLastSample\030\" " +
      "\001(\0132\031.google.protobuf.Duration\0223\n\020lastSa" +
      "mplePeriod\030# \001(\0132\031.google.protobuf.Durat" +
      "ion\032\215\001\n\026CoPeriodicSamplesEvent\0221\n\016sample" +
      "Interval\030\001 \001(\0132\031.google.protobuf.Duratio" +
      "n\022@\n\007samples\030\002 \003(\0132/.nest.trait.sensor.C" +
      "arbonMonoxideTrait.CoSample\"\203\001\n\013CoFaultT" +
      "ype\022\035\n\031CO_FAULT_TYPE_UNSPECIFIED\020\000\022\026\n\022CO" +
      "_FAULT_TYPE_NONE\020\001\022\036\n\032CO_FAULT_TYPE_UNRE" +
      "SPONSIVE\020\002\022\035\n\031CO_FAULT_TYPE_END_OF_LIFE\020" +
      "\003\"\256\014\n\023BatteryVoltageTrait\022Q\n\014batteryValu" +
      "e\030\001 \001(\0132;.nest.trait.sensor.BatteryVolta" +
      "geTrait.BatteryVoltageSample\022_\n\020faultInf" +
      "ormation\030\002 \001(\0132E.nest.trait.sensor.Batte" +
      "ryVoltageTrait.BatteryVoltageFaultInform" +
      "ation\032K\n\024BatteryVoltageSample\0223\n\016battery" +
      "Voltage\030\001 \001(\0132\033.google.protobuf.FloatVal" +
      "ue\032\320\001\n\036BatteryVoltageFaultInformation\022\020\n" +
      "\010asserted\030\001 \001(\010\022L\n\004type\030\002 \001(\0162>.nest.tra" +
      "it.sensor.BatteryVoltageTrait.BatteryVol" +
      "tageFaultType\022N\n\tlastValue\030\003 \001(\0132;.nest." +
      "trait.sensor.BatteryVoltageTrait.Battery" +
      "VoltageSample\032\206\002\n\030BatteryVoltageFaultEve" +
      "nt\022\020\n\010asserted\030\001 \001(\010\022L\n\004type\030  \001(\0162>.nes" +
      "t.trait.sensor.BatteryVoltageTrait.Batte" +
      "ryVoltageFaultType\022N\n\tlastValue\030! \001(\0132;." +
      "nest.trait.sensor.BatteryVoltageTrait.Ba" +
      "tteryVoltageSample\022:\n\027durationSinceLastS" +
      "ample\030\" \001(\0132\031.google.protobuf.Duration\032\245" +
      "\001\n\"BatteryVoltagePeriodicSamplesEvent\0221\n" +
      "\016sampleInterval\030\001 \001(\0132\031.google.protobuf." +
      "Duration\022L\n\007samples\030\002 \003(\0132;.nest.trait.s" +
      "ensor.BatteryVoltageTrait.BatteryVoltage" +
      "Sample\032\347\002\n\035BatteryVoltageStatisticsEvent" +
      "\022P\n\013meanVoltage\030\001 \001(\0132;.nest.trait.senso" +
      "r.BatteryVoltageTrait.BatteryVoltageSamp" +
      "le\022S\n\016minimumVoltage\030\002 \001(\0132;.nest.trait." +
      "sensor.BatteryVoltageTrait.BatteryVoltag" +
      "eSample\022S\n\016maximumVoltage\030\003 \001(\0132;.nest.t" +
      "rait.sensor.BatteryVoltageTrait.BatteryV" +
      "oltageSample\022\022\n\nnumSamples\030\004 \001(\r\0226\n\023stat" +
      "sSampleInterval\030\005 \001(\0132\031.google.protobuf." +
      "Duration\"\247\002\n\027BatteryVoltageFaultType\022*\n&" +
      "BATTERY_VOLTAGE_FAULT_TYPE_UNSPECIFIED\020\000" +
      "\022#\n\037BATTERY_VOLTAGE_FAULT_TYPE_NONE\020\001\0225\n" +
      "1BATTERY_VOLTAGE_FAULT_TYPE_OUT_OF_OPERA" +
      "TING_RANGE\020\002\022+\n\'BATTERY_VOLTAGE_FAULT_TY" +
      "PE_UNRESPONSIVE\020\003\022+\n\'BATTERY_VOLTAGE_FAU" +
      "LT_TYPE_DISCONNECTED\020\004\022*\n&BATTERY_VOLTAG" +
      "E_FAULT_TYPE_END_OF_LIFE\020\005\"\276\010\n\021AmbientLi" +
      "ghtTrait\022R\n\021ambientLightValue\030\001 \001(\01327.ne" +
      "st.trait.sensor.AmbientLightTrait.Ambien" +
      "tLightSample\022[\n\020faultInformation\030\002 \001(\0132A" +
      ".nest.trait.sensor.AmbientLightTrait.Amb" +
      "ientLightFaultInformation\032G\n\022AmbientLigh" +
      "tSample\0221\n\014ambientLight\030\001 \001(\0132\033.google.p" +
      "rotobuf.FloatValue\032\306\001\n\034AmbientLightFault" +
      "Information\022\020\n\010asserted\030\001 \001(\010\022H\n\004type\030\002 " +
      "\001(\0162:.nest.trait.sensor.AmbientLightTrai" +
      "t.AmbientLightFaultType\022J\n\tlastValue\030\003 \001" +
      "(\01327.nest.trait.sensor.AmbientLightTrait" +
      ".AmbientLightSample\032\261\002\n\026AmbientLightFaul" +
      "tEvent\022\020\n\010asserted\030\001 \001(\010\022H\n\004type\030  \001(\0162:" +
      ".nest.trait.sensor.AmbientLightTrait.Amb" +
      "ientLightFaultType\022J\n\tlastValue\030! \001(\01327." +
      "nest.trait.sensor.AmbientLightTrait.Ambi" +
      "entLightSample\022:\n\027durationSinceLastSampl" +
      "e\030\" \001(\0132\031.google.protobuf.Duration\0223\n\020la" +
      "stSamplePeriod\030# \001(\0132\031.google.protobuf.D" +
      "uration\032\237\001\n AmbientLightPeriodicSamplesE" +
      "vent\0221\n\016sampleInterval\030\001 \001(\0132\031.google.pr" +
      "otobuf.Duration\022H\n\007samples\030\002 \003(\01327.nest." +
      "trait.sensor.AmbientLightTrait.AmbientLi" +
      "ghtSample\"\217\001\n\025AmbientLightFaultType\022(\n$A" +
      "MBIENT_LIGHT_FAULT_TYPE_UNSPECIFIED\020\000\022!\n" +
      "\035AMBIENT_LIGHT_FAULT_TYPE_NONE\020\001\022)\n%AMBI" +
      "ENT_LIGHT_FAULT_TYPE_UNRESPONSIVE\020\002\"\326\007\n\r" +
      "HumidityTrait\022F\n\rhumidityValue\030\001 \001(\0132/.n" +
      "est.trait.sensor.HumidityTrait.HumidityS" +
      "ample\022S\n\020faultInformation\030\002 \001(\01329.nest.t" +
      "rait.sensor.HumidityTrait.HumidityFaultI" +
      "nformation\032?\n\016HumiditySample\022-\n\010humidity" +
      "\030\001 \001(\0132\033.google.protobuf.FloatValue\032\262\001\n\030" +
      "HumidityFaultInformation\022\020\n\010asserted\030\001 \001" +
      "(\010\022@\n\004type\030\002 \001(\01622.nest.trait.sensor.Hum" +
      "idityTrait.HumidityFaultType\022B\n\tlastValu" +
      "e\030\003 \001(\0132/.nest.trait.sensor.HumidityTrai" +
      "t.HumiditySample\032\235\002\n\022HumidityFaultEvent\022" +
      "\020\n\010asserted\030\001 \001(\010\022@\n\004type\030  \001(\01622.nest.t" +
      "rait.sensor.HumidityTrait.HumidityFaultT" +
      "ype\022B\n\tlastValue\030! \001(\0132/.nest.trait.sens" +
      "or.HumidityTrait.HumiditySample\022:\n\027durat" +
      "ionSinceLastSample\030\" \001(\0132\031.google.protob" +
      "uf.Duration\0223\n\020lastSamplePeriod\030# \001(\0132\031." +
      "google.protobuf.Duration\032\223\001\n\034HumidityPer" +
      "iodicSamplesEvent\0221\n\016sampleInterval\030\001 \001(" +
      "\0132\031.google.protobuf.Duration\022@\n\007samples\030" +
      "\002 \003(\0132/.nest.trait.sensor.HumidityTrait." +
      "HumiditySample\"|\n\021HumidityFaultType\022#\n\037H" +
      "UMIDITY_FAULT_TYPE_UNSPECIFIED\020\000\022\034\n\030HUMI" +
      "DITY_FAULT_TYPE_NONE\020\001\022$\n HUMIDITY_FAULT" +
      "_TYPE_UNRESPONSIVE\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
        });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor,
        new java.lang.String[] { "PassiveInfraredSignalValue", "PassiveInfraredBaselineValue", "FaultInformation", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSample_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "SignalLastValue", "BaselineLastValue", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "SignalSamples", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredBaselinePeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "BaselineSamples", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(4);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredDifferentialPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "DeltaSamples", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(5);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "SignalLastValue", "BaselineLastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor =
      internal_static_nest_trait_sensor_PassiveInfraredTrait_descriptor.getNestedTypes().get(6);
    internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_PassiveInfraredTrait_PassiveInfraredSignalStatisticsEvent_descriptor,
        new java.lang.String[] { "HistogramBoundaries", "HistogramCounts", "VacancyExpected", });
    internal_static_nest_trait_sensor_SmokeTrait_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_nest_trait_sensor_SmokeTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_descriptor,
        new java.lang.String[] { "InfraredLedValue", "BlueLedValue", "InfraredLedFault", "BlueLedFault", });
    internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_SmokeSample_descriptor,
        new java.lang.String[] { "Sample", });
    internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_SmokeFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_InfraredLedFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_BlueLedFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(4);
    internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_InfraredLedPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_SmokeTrait_descriptor.getNestedTypes().get(5);
    internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_SmokeTrait_BlueLedPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_TemperatureTrait_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_nest_trait_sensor_TemperatureTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_TemperatureTrait_descriptor,
        new java.lang.String[] { "TemperatureValue", "FaultInformation", });
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor =
      internal_static_nest_trait_sensor_TemperatureTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSample_descriptor,
        new java.lang.String[] { "Temperature", });
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor =
      internal_static_nest_trait_sensor_TemperatureTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_TemperatureTrait_TemperatureFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor =
      internal_static_nest_trait_sensor_TemperatureTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_TemperatureTrait_TemperatureSensorFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_TemperatureTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_TemperatureTrait_TemperaturePeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor,
        new java.lang.String[] { "Value", "FaultInformation", });
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor =
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoSample_descriptor,
        new java.lang.String[] { "Ppm", });
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor =
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor =
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_CarbonMonoxideTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_CarbonMonoxideTrait_CoPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor,
        new java.lang.String[] { "BatteryValue", "FaultInformation", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor =
      internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageSample_descriptor,
        new java.lang.String[] { "BatteryVoltage", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor =
      internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor =
      internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltagePeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor =
      internal_static_nest_trait_sensor_BatteryVoltageTrait_descriptor.getNestedTypes().get(4);
    internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_BatteryVoltageTrait_BatteryVoltageStatisticsEvent_descriptor,
        new java.lang.String[] { "MeanVoltage", "MinimumVoltage", "MaximumVoltage", "NumSamples", "StatsSampleInterval", });
    internal_static_nest_trait_sensor_AmbientLightTrait_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_nest_trait_sensor_AmbientLightTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_AmbientLightTrait_descriptor,
        new java.lang.String[] { "AmbientLightValue", "FaultInformation", });
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor =
      internal_static_nest_trait_sensor_AmbientLightTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightSample_descriptor,
        new java.lang.String[] { "AmbientLight", });
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor =
      internal_static_nest_trait_sensor_AmbientLightTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor =
      internal_static_nest_trait_sensor_AmbientLightTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_AmbientLightTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_AmbientLightTrait_AmbientLightPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    internal_static_nest_trait_sensor_HumidityTrait_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_nest_trait_sensor_HumidityTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_HumidityTrait_descriptor,
        new java.lang.String[] { "HumidityValue", "FaultInformation", });
    internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor =
      internal_static_nest_trait_sensor_HumidityTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_HumidityTrait_HumiditySample_descriptor,
        new java.lang.String[] { "Humidity", });
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor =
      internal_static_nest_trait_sensor_HumidityTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", });
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor =
      internal_static_nest_trait_sensor_HumidityTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_HumidityTrait_HumidityFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", "LastValue", "DurationSinceLastSample", "LastSamplePeriod", });
    internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor =
      internal_static_nest_trait_sensor_HumidityTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_sensor_HumidityTrait_HumidityPeriodicSamplesEvent_descriptor,
        new java.lang.String[] { "SampleInterval", "Samples", });
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
