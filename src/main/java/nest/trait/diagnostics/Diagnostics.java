// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nest/trait/diagnostics.proto

package nest.trait.diagnostics;

public final class Diagnostics {
  private Diagnostics() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LedTraitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nest.trait.diagnostics.LedTrait)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     * @return Whether the faultInformation field is set.
     */
    boolean hasFaultInformation();
    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     * @return The faultInformation.
     */
    nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getFaultInformation();
    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     */
    nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder getFaultInformationOrBuilder();
  }
  /**
   * Protobuf type {@code nest.trait.diagnostics.LedTrait}
   */
  public static final class LedTrait extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nest.trait.diagnostics.LedTrait)
      LedTraitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LedTrait.newBuilder() to construct.
    private LedTrait(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LedTrait() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LedTrait();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LedTrait(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder subBuilder = null;
              if (faultInformation_ != null) {
                subBuilder = faultInformation_.toBuilder();
              }
              faultInformation_ = input.readMessage(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(faultInformation_);
                faultInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nest.trait.diagnostics.Diagnostics.LedTrait.class, nest.trait.diagnostics.Diagnostics.LedTrait.Builder.class);
    }

    /**
     * Protobuf enum {@code nest.trait.diagnostics.LedTrait.LedScene}
     */
    public enum LedScene
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LED_SCENE_UNSPECIFIED = 0;</code>
       */
      LED_SCENE_UNSPECIFIED(0),
      /**
       * <code>LED_SCENE_BLUE = 1;</code>
       */
      LED_SCENE_BLUE(1),
      /**
       * <code>LED_SCENE_GREEN = 2;</code>
       */
      LED_SCENE_GREEN(2),
      /**
       * <code>LED_SCENE_YELLOW = 3;</code>
       */
      LED_SCENE_YELLOW(3),
      /**
       * <code>LED_SCENE_RED = 4;</code>
       */
      LED_SCENE_RED(4),
      /**
       * <code>LED_SCENE_PATHLIGHT = 5;</code>
       */
      LED_SCENE_PATHLIGHT(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LED_SCENE_UNSPECIFIED = 0;</code>
       */
      public static final int LED_SCENE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>LED_SCENE_BLUE = 1;</code>
       */
      public static final int LED_SCENE_BLUE_VALUE = 1;
      /**
       * <code>LED_SCENE_GREEN = 2;</code>
       */
      public static final int LED_SCENE_GREEN_VALUE = 2;
      /**
       * <code>LED_SCENE_YELLOW = 3;</code>
       */
      public static final int LED_SCENE_YELLOW_VALUE = 3;
      /**
       * <code>LED_SCENE_RED = 4;</code>
       */
      public static final int LED_SCENE_RED_VALUE = 4;
      /**
       * <code>LED_SCENE_PATHLIGHT = 5;</code>
       */
      public static final int LED_SCENE_PATHLIGHT_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LedScene valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LedScene forNumber(int value) {
        switch (value) {
          case 0: return LED_SCENE_UNSPECIFIED;
          case 1: return LED_SCENE_BLUE;
          case 2: return LED_SCENE_GREEN;
          case 3: return LED_SCENE_YELLOW;
          case 4: return LED_SCENE_RED;
          case 5: return LED_SCENE_PATHLIGHT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LedScene>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LedScene> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LedScene>() {
              public LedScene findValueByNumber(int number) {
                return LedScene.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.LedTrait.getDescriptor().getEnumTypes().get(0);
      }

      private static final LedScene[] VALUES = values();

      public static LedScene valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LedScene(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.diagnostics.LedTrait.LedScene)
    }

    /**
     * Protobuf enum {@code nest.trait.diagnostics.LedTrait.LedAnimation}
     */
    public enum LedAnimation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LED_ANIMATION_UNSPECIFIED = 0;</code>
       */
      LED_ANIMATION_UNSPECIFIED(0),
      /**
       * <code>LED_ANIMATION_BOOT = 1;</code>
       */
      LED_ANIMATION_BOOT(1),
      /**
       * <code>LED_ANIMATION_STATUS = 2;</code>
       */
      LED_ANIMATION_STATUS(2),
      /**
       * <code>LED_ANIMATION_BYPASS = 3;</code>
       */
      LED_ANIMATION_BYPASS(3),
      /**
       * <code>LED_ANIMATION_SWU = 4;</code>
       */
      LED_ANIMATION_SWU(4),
      /**
       * <code>LED_ANIMATION_PATHLIGHT = 5;</code>
       */
      LED_ANIMATION_PATHLIGHT(5),
      /**
       * <code>LED_ANIMATION_PULSE = 6;</code>
       */
      LED_ANIMATION_PULSE(6),
      /**
       * <code>LED_ANIMATION_PIRTEST = 7;</code>
       */
      LED_ANIMATION_PIRTEST(7),
      /**
       * <code>LED_ANIMATION_SOLID_ON = 8;</code>
       */
      LED_ANIMATION_SOLID_ON(8),
      /**
       * <code>LED_ANIMATION_PULSE_ALARM = 9;</code>
       */
      LED_ANIMATION_PULSE_ALARM(9),
      /**
       * <code>LED_ANIMATION_PULSE_ALARM_WAIT = 10;</code>
       */
      LED_ANIMATION_PULSE_ALARM_WAIT(10),
      /**
       * <code>LED_ANIMATION_PULSE_FAST = 11;</code>
       */
      LED_ANIMATION_PULSE_FAST(11),
      /**
       * <code>LED_ANIMATION_PULSE_FAST_WAIT = 12;</code>
       */
      LED_ANIMATION_PULSE_FAST_WAIT(12),
      /**
       * <code>LED_ANIMATION_PULSE_SLOW = 13;</code>
       */
      LED_ANIMATION_PULSE_SLOW(13),
      /**
       * <code>LED_ANIMATION_PULSE_WAIT = 14;</code>
       */
      LED_ANIMATION_PULSE_WAIT(14),
      /**
       * <code>LED_ANIMATION_ROTATE = 15;</code>
       */
      LED_ANIMATION_ROTATE(15),
      /**
       * <code>LED_ANIMATION_ROTATE_SLOW = 16;</code>
       */
      LED_ANIMATION_ROTATE_SLOW(16),
      /**
       * <code>LED_ANIMATION_SHIMMER = 17;</code>
       */
      LED_ANIMATION_SHIMMER(17),
      /**
       * <code>LED_ANIMATION_SIDELEFT = 18;</code>
       */
      LED_ANIMATION_SIDELEFT(18),
      /**
       * <code>LED_ANIMATION_SIDERIGHT = 19;</code>
       */
      LED_ANIMATION_SIDERIGHT(19),
      /**
       * <code>LED_ANIMATION_WAVE1 = 20;</code>
       */
      LED_ANIMATION_WAVE1(20),
      /**
       * <code>LED_ANIMATION_FLASH = 21;</code>
       */
      LED_ANIMATION_FLASH(21),
      /**
       * <code>LED_ANIMATION_PROGRESS = 22;</code>
       */
      LED_ANIMATION_PROGRESS(22),
      /**
       * <code>LED_ANIMATION_DIM_PULSES_SLOW = 23;</code>
       */
      LED_ANIMATION_DIM_PULSES_SLOW(23),
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_LOW = 24;</code>
       */
      LED_ANIMATION_NIGHTLIGHT_LOW(24),
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_MEDIUM = 25;</code>
       */
      LED_ANIMATION_NIGHTLIGHT_MEDIUM(25),
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_HIGH = 26;</code>
       */
      LED_ANIMATION_NIGHTLIGHT_HIGH(26),
      /**
       * <code>LED_ANIMATION_LINE_HIGH = 27;</code>
       */
      LED_ANIMATION_LINE_HIGH(27),
      /**
       * <code>LED_ANIMATION_BLINK = 28;</code>
       */
      LED_ANIMATION_BLINK(28),
      /**
       * <code>LED_ANIMATION_BLINK_SLOW = 29;</code>
       */
      LED_ANIMATION_BLINK_SLOW(29),
      /**
       * <code>LED_ANIMATION_BLINK_INFREQUENT = 30;</code>
       */
      LED_ANIMATION_BLINK_INFREQUENT(30),
      /**
       * <code>LED_ANIMATION_BREATHE = 31;</code>
       */
      LED_ANIMATION_BREATHE(31),
      /**
       * <code>LED_ANIMATION_BREATHE_SLOW = 32;</code>
       */
      LED_ANIMATION_BREATHE_SLOW(32),
      /**
       * <code>LED_ANIMATION_BREATHE_FAST = 33;</code>
       */
      LED_ANIMATION_BREATHE_FAST(33),
      /**
       * <code>LED_ANIMATION_OFF = 34;</code>
       */
      LED_ANIMATION_OFF(34),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LED_ANIMATION_UNSPECIFIED = 0;</code>
       */
      public static final int LED_ANIMATION_UNSPECIFIED_VALUE = 0;
      /**
       * <code>LED_ANIMATION_BOOT = 1;</code>
       */
      public static final int LED_ANIMATION_BOOT_VALUE = 1;
      /**
       * <code>LED_ANIMATION_STATUS = 2;</code>
       */
      public static final int LED_ANIMATION_STATUS_VALUE = 2;
      /**
       * <code>LED_ANIMATION_BYPASS = 3;</code>
       */
      public static final int LED_ANIMATION_BYPASS_VALUE = 3;
      /**
       * <code>LED_ANIMATION_SWU = 4;</code>
       */
      public static final int LED_ANIMATION_SWU_VALUE = 4;
      /**
       * <code>LED_ANIMATION_PATHLIGHT = 5;</code>
       */
      public static final int LED_ANIMATION_PATHLIGHT_VALUE = 5;
      /**
       * <code>LED_ANIMATION_PULSE = 6;</code>
       */
      public static final int LED_ANIMATION_PULSE_VALUE = 6;
      /**
       * <code>LED_ANIMATION_PIRTEST = 7;</code>
       */
      public static final int LED_ANIMATION_PIRTEST_VALUE = 7;
      /**
       * <code>LED_ANIMATION_SOLID_ON = 8;</code>
       */
      public static final int LED_ANIMATION_SOLID_ON_VALUE = 8;
      /**
       * <code>LED_ANIMATION_PULSE_ALARM = 9;</code>
       */
      public static final int LED_ANIMATION_PULSE_ALARM_VALUE = 9;
      /**
       * <code>LED_ANIMATION_PULSE_ALARM_WAIT = 10;</code>
       */
      public static final int LED_ANIMATION_PULSE_ALARM_WAIT_VALUE = 10;
      /**
       * <code>LED_ANIMATION_PULSE_FAST = 11;</code>
       */
      public static final int LED_ANIMATION_PULSE_FAST_VALUE = 11;
      /**
       * <code>LED_ANIMATION_PULSE_FAST_WAIT = 12;</code>
       */
      public static final int LED_ANIMATION_PULSE_FAST_WAIT_VALUE = 12;
      /**
       * <code>LED_ANIMATION_PULSE_SLOW = 13;</code>
       */
      public static final int LED_ANIMATION_PULSE_SLOW_VALUE = 13;
      /**
       * <code>LED_ANIMATION_PULSE_WAIT = 14;</code>
       */
      public static final int LED_ANIMATION_PULSE_WAIT_VALUE = 14;
      /**
       * <code>LED_ANIMATION_ROTATE = 15;</code>
       */
      public static final int LED_ANIMATION_ROTATE_VALUE = 15;
      /**
       * <code>LED_ANIMATION_ROTATE_SLOW = 16;</code>
       */
      public static final int LED_ANIMATION_ROTATE_SLOW_VALUE = 16;
      /**
       * <code>LED_ANIMATION_SHIMMER = 17;</code>
       */
      public static final int LED_ANIMATION_SHIMMER_VALUE = 17;
      /**
       * <code>LED_ANIMATION_SIDELEFT = 18;</code>
       */
      public static final int LED_ANIMATION_SIDELEFT_VALUE = 18;
      /**
       * <code>LED_ANIMATION_SIDERIGHT = 19;</code>
       */
      public static final int LED_ANIMATION_SIDERIGHT_VALUE = 19;
      /**
       * <code>LED_ANIMATION_WAVE1 = 20;</code>
       */
      public static final int LED_ANIMATION_WAVE1_VALUE = 20;
      /**
       * <code>LED_ANIMATION_FLASH = 21;</code>
       */
      public static final int LED_ANIMATION_FLASH_VALUE = 21;
      /**
       * <code>LED_ANIMATION_PROGRESS = 22;</code>
       */
      public static final int LED_ANIMATION_PROGRESS_VALUE = 22;
      /**
       * <code>LED_ANIMATION_DIM_PULSES_SLOW = 23;</code>
       */
      public static final int LED_ANIMATION_DIM_PULSES_SLOW_VALUE = 23;
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_LOW = 24;</code>
       */
      public static final int LED_ANIMATION_NIGHTLIGHT_LOW_VALUE = 24;
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_MEDIUM = 25;</code>
       */
      public static final int LED_ANIMATION_NIGHTLIGHT_MEDIUM_VALUE = 25;
      /**
       * <code>LED_ANIMATION_NIGHTLIGHT_HIGH = 26;</code>
       */
      public static final int LED_ANIMATION_NIGHTLIGHT_HIGH_VALUE = 26;
      /**
       * <code>LED_ANIMATION_LINE_HIGH = 27;</code>
       */
      public static final int LED_ANIMATION_LINE_HIGH_VALUE = 27;
      /**
       * <code>LED_ANIMATION_BLINK = 28;</code>
       */
      public static final int LED_ANIMATION_BLINK_VALUE = 28;
      /**
       * <code>LED_ANIMATION_BLINK_SLOW = 29;</code>
       */
      public static final int LED_ANIMATION_BLINK_SLOW_VALUE = 29;
      /**
       * <code>LED_ANIMATION_BLINK_INFREQUENT = 30;</code>
       */
      public static final int LED_ANIMATION_BLINK_INFREQUENT_VALUE = 30;
      /**
       * <code>LED_ANIMATION_BREATHE = 31;</code>
       */
      public static final int LED_ANIMATION_BREATHE_VALUE = 31;
      /**
       * <code>LED_ANIMATION_BREATHE_SLOW = 32;</code>
       */
      public static final int LED_ANIMATION_BREATHE_SLOW_VALUE = 32;
      /**
       * <code>LED_ANIMATION_BREATHE_FAST = 33;</code>
       */
      public static final int LED_ANIMATION_BREATHE_FAST_VALUE = 33;
      /**
       * <code>LED_ANIMATION_OFF = 34;</code>
       */
      public static final int LED_ANIMATION_OFF_VALUE = 34;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LedAnimation valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LedAnimation forNumber(int value) {
        switch (value) {
          case 0: return LED_ANIMATION_UNSPECIFIED;
          case 1: return LED_ANIMATION_BOOT;
          case 2: return LED_ANIMATION_STATUS;
          case 3: return LED_ANIMATION_BYPASS;
          case 4: return LED_ANIMATION_SWU;
          case 5: return LED_ANIMATION_PATHLIGHT;
          case 6: return LED_ANIMATION_PULSE;
          case 7: return LED_ANIMATION_PIRTEST;
          case 8: return LED_ANIMATION_SOLID_ON;
          case 9: return LED_ANIMATION_PULSE_ALARM;
          case 10: return LED_ANIMATION_PULSE_ALARM_WAIT;
          case 11: return LED_ANIMATION_PULSE_FAST;
          case 12: return LED_ANIMATION_PULSE_FAST_WAIT;
          case 13: return LED_ANIMATION_PULSE_SLOW;
          case 14: return LED_ANIMATION_PULSE_WAIT;
          case 15: return LED_ANIMATION_ROTATE;
          case 16: return LED_ANIMATION_ROTATE_SLOW;
          case 17: return LED_ANIMATION_SHIMMER;
          case 18: return LED_ANIMATION_SIDELEFT;
          case 19: return LED_ANIMATION_SIDERIGHT;
          case 20: return LED_ANIMATION_WAVE1;
          case 21: return LED_ANIMATION_FLASH;
          case 22: return LED_ANIMATION_PROGRESS;
          case 23: return LED_ANIMATION_DIM_PULSES_SLOW;
          case 24: return LED_ANIMATION_NIGHTLIGHT_LOW;
          case 25: return LED_ANIMATION_NIGHTLIGHT_MEDIUM;
          case 26: return LED_ANIMATION_NIGHTLIGHT_HIGH;
          case 27: return LED_ANIMATION_LINE_HIGH;
          case 28: return LED_ANIMATION_BLINK;
          case 29: return LED_ANIMATION_BLINK_SLOW;
          case 30: return LED_ANIMATION_BLINK_INFREQUENT;
          case 31: return LED_ANIMATION_BREATHE;
          case 32: return LED_ANIMATION_BREATHE_SLOW;
          case 33: return LED_ANIMATION_BREATHE_FAST;
          case 34: return LED_ANIMATION_OFF;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LedAnimation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LedAnimation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LedAnimation>() {
              public LedAnimation findValueByNumber(int number) {
                return LedAnimation.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.LedTrait.getDescriptor().getEnumTypes().get(1);
      }

      private static final LedAnimation[] VALUES = values();

      public static LedAnimation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LedAnimation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.diagnostics.LedTrait.LedAnimation)
    }

    /**
     * Protobuf enum {@code nest.trait.diagnostics.LedTrait.LedFaultType}
     */
    public enum LedFaultType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LED_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      LED_FAULT_TYPE_UNSPECIFIED(0),
      /**
       * <code>LED_FAULT_TYPE_NONE = 1;</code>
       */
      LED_FAULT_TYPE_NONE(1),
      /**
       * <code>LED_FAULT_TYPE_STUCK_ON = 2;</code>
       */
      LED_FAULT_TYPE_STUCK_ON(2),
      /**
       * <code>LED_FAULT_TYPE_SELF_TEST_FAILED = 3;</code>
       */
      LED_FAULT_TYPE_SELF_TEST_FAILED(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LED_FAULT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int LED_FAULT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>LED_FAULT_TYPE_NONE = 1;</code>
       */
      public static final int LED_FAULT_TYPE_NONE_VALUE = 1;
      /**
       * <code>LED_FAULT_TYPE_STUCK_ON = 2;</code>
       */
      public static final int LED_FAULT_TYPE_STUCK_ON_VALUE = 2;
      /**
       * <code>LED_FAULT_TYPE_SELF_TEST_FAILED = 3;</code>
       */
      public static final int LED_FAULT_TYPE_SELF_TEST_FAILED_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LedFaultType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LedFaultType forNumber(int value) {
        switch (value) {
          case 0: return LED_FAULT_TYPE_UNSPECIFIED;
          case 1: return LED_FAULT_TYPE_NONE;
          case 2: return LED_FAULT_TYPE_STUCK_ON;
          case 3: return LED_FAULT_TYPE_SELF_TEST_FAILED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LedFaultType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LedFaultType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LedFaultType>() {
              public LedFaultType findValueByNumber(int number) {
                return LedFaultType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.LedTrait.getDescriptor().getEnumTypes().get(2);
      }

      private static final LedFaultType[] VALUES = values();

      public static LedFaultType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LedFaultType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:nest.trait.diagnostics.LedTrait.LedFaultType)
    }

    public interface LedFaultInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.diagnostics.LedTrait.LedFaultInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
       * @return The type.
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType();
    }
    /**
     * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedFaultInformation}
     */
    public static final class LedFaultInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.diagnostics.LedTrait.LedFaultInformation)
        LedFaultInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LedFaultInformation.newBuilder() to construct.
      private LedFaultInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LedFaultInformation() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LedFaultInformation();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LedFaultInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType result = nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.valueOf(type_);
        return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.LED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.LED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation)) {
          return super.equals(obj);
        }
        nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation other = (nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedFaultInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.diagnostics.LedTrait.LedFaultInformation)
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder.class);
        }

        // Construct using nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getDefaultInstanceForType() {
          return nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation build() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation buildPartial() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation result = new nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation) {
            return mergeFrom((nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation other) {
          if (other == nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType result = nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.valueOf(type_);
          return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.diagnostics.LedTrait.LedFaultInformation)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.diagnostics.LedTrait.LedFaultInformation)
      private static final nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation();
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LedFaultInformation>
          PARSER = new com.google.protobuf.AbstractParser<LedFaultInformation>() {
        @java.lang.Override
        public LedFaultInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LedFaultInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LedFaultInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LedFaultInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LedEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.diagnostics.LedTrait.LedEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 ledId = 1;</code>
       * @return The ledId.
       */
      int getLedId();

      /**
       * <code>bool ledOn = 2;</code>
       * @return The ledOn.
       */
      boolean getLedOn();

      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
       * @return The enum numeric value on the wire for ledScene.
       */
      int getLedSceneValue();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
       * @return The ledScene.
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedScene getLedScene();

      /**
       * <code>uint32 brightness = 4;</code>
       * @return The brightness.
       */
      int getBrightness();

      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       * @return Whether the wrgb field is set.
       */
      boolean hasWrgb();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       * @return The wrgb.
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getWrgb();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder getWrgbOrBuilder();

      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
       * @return The enum numeric value on the wire for ledAnimation.
       */
      int getLedAnimationValue();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
       * @return The ledAnimation.
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation getLedAnimation();
    }
    /**
     * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedEvent}
     */
    public static final class LedEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.diagnostics.LedTrait.LedEvent)
        LedEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LedEvent.newBuilder() to construct.
      private LedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LedEvent() {
        ledScene_ = 0;
        ledAnimation_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LedEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LedEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                ledId_ = input.readUInt32();
                break;
              }
              case 16: {

                ledOn_ = input.readBool();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                ledScene_ = rawValue;
                break;
              }
              case 32: {

                brightness_ = input.readUInt32();
                break;
              }
              case 42: {
                nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder subBuilder = null;
                if (wrgb_ != null) {
                  subBuilder = wrgb_.toBuilder();
                }
                wrgb_ = input.readMessage(nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(wrgb_);
                  wrgb_ = subBuilder.buildPartial();
                }

                break;
              }
              case 48: {
                int rawValue = input.readEnum();

                ledAnimation_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.Builder.class);
      }

      public static final int LEDID_FIELD_NUMBER = 1;
      private int ledId_;
      /**
       * <code>uint32 ledId = 1;</code>
       * @return The ledId.
       */
      @java.lang.Override
      public int getLedId() {
        return ledId_;
      }

      public static final int LEDON_FIELD_NUMBER = 2;
      private boolean ledOn_;
      /**
       * <code>bool ledOn = 2;</code>
       * @return The ledOn.
       */
      @java.lang.Override
      public boolean getLedOn() {
        return ledOn_;
      }

      public static final int LEDSCENE_FIELD_NUMBER = 3;
      private int ledScene_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
       * @return The enum numeric value on the wire for ledScene.
       */
      @java.lang.Override public int getLedSceneValue() {
        return ledScene_;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
       * @return The ledScene.
       */
      @java.lang.Override public nest.trait.diagnostics.Diagnostics.LedTrait.LedScene getLedScene() {
        @SuppressWarnings("deprecation")
        nest.trait.diagnostics.Diagnostics.LedTrait.LedScene result = nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.valueOf(ledScene_);
        return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.UNRECOGNIZED : result;
      }

      public static final int BRIGHTNESS_FIELD_NUMBER = 4;
      private int brightness_;
      /**
       * <code>uint32 brightness = 4;</code>
       * @return The brightness.
       */
      @java.lang.Override
      public int getBrightness() {
        return brightness_;
      }

      public static final int WRGB_FIELD_NUMBER = 5;
      private nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb wrgb_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       * @return Whether the wrgb field is set.
       */
      @java.lang.Override
      public boolean hasWrgb() {
        return wrgb_ != null;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       * @return The wrgb.
       */
      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getWrgb() {
        return wrgb_ == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.getDefaultInstance() : wrgb_;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
       */
      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder getWrgbOrBuilder() {
        return getWrgb();
      }

      public static final int LEDANIMATION_FIELD_NUMBER = 6;
      private int ledAnimation_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
       * @return The enum numeric value on the wire for ledAnimation.
       */
      @java.lang.Override public int getLedAnimationValue() {
        return ledAnimation_;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
       * @return The ledAnimation.
       */
      @java.lang.Override public nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation getLedAnimation() {
        @SuppressWarnings("deprecation")
        nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation result = nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.valueOf(ledAnimation_);
        return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ledId_ != 0) {
          output.writeUInt32(1, ledId_);
        }
        if (ledOn_ != false) {
          output.writeBool(2, ledOn_);
        }
        if (ledScene_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.LED_SCENE_UNSPECIFIED.getNumber()) {
          output.writeEnum(3, ledScene_);
        }
        if (brightness_ != 0) {
          output.writeUInt32(4, brightness_);
        }
        if (wrgb_ != null) {
          output.writeMessage(5, getWrgb());
        }
        if (ledAnimation_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.LED_ANIMATION_UNSPECIFIED.getNumber()) {
          output.writeEnum(6, ledAnimation_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ledId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ledId_);
        }
        if (ledOn_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, ledOn_);
        }
        if (ledScene_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.LED_SCENE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, ledScene_);
        }
        if (brightness_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, brightness_);
        }
        if (wrgb_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getWrgb());
        }
        if (ledAnimation_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.LED_ANIMATION_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, ledAnimation_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent)) {
          return super.equals(obj);
        }
        nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent other = (nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent) obj;

        if (getLedId()
            != other.getLedId()) return false;
        if (getLedOn()
            != other.getLedOn()) return false;
        if (ledScene_ != other.ledScene_) return false;
        if (getBrightness()
            != other.getBrightness()) return false;
        if (hasWrgb() != other.hasWrgb()) return false;
        if (hasWrgb()) {
          if (!getWrgb()
              .equals(other.getWrgb())) return false;
        }
        if (ledAnimation_ != other.ledAnimation_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEDID_FIELD_NUMBER;
        hash = (53 * hash) + getLedId();
        hash = (37 * hash) + LEDON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLedOn());
        hash = (37 * hash) + LEDSCENE_FIELD_NUMBER;
        hash = (53 * hash) + ledScene_;
        hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
        hash = (53 * hash) + getBrightness();
        if (hasWrgb()) {
          hash = (37 * hash) + WRGB_FIELD_NUMBER;
          hash = (53 * hash) + getWrgb().hashCode();
        }
        hash = (37 * hash) + LEDANIMATION_FIELD_NUMBER;
        hash = (53 * hash) + ledAnimation_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.diagnostics.LedTrait.LedEvent)
          nest.trait.diagnostics.Diagnostics.LedTrait.LedEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.Builder.class);
        }

        // Construct using nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          ledId_ = 0;

          ledOn_ = false;

          ledScene_ = 0;

          brightness_ = 0;

          if (wrgbBuilder_ == null) {
            wrgb_ = null;
          } else {
            wrgb_ = null;
            wrgbBuilder_ = null;
          }
          ledAnimation_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent getDefaultInstanceForType() {
          return nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent build() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent buildPartial() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent result = new nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent(this);
          result.ledId_ = ledId_;
          result.ledOn_ = ledOn_;
          result.ledScene_ = ledScene_;
          result.brightness_ = brightness_;
          if (wrgbBuilder_ == null) {
            result.wrgb_ = wrgb_;
          } else {
            result.wrgb_ = wrgbBuilder_.build();
          }
          result.ledAnimation_ = ledAnimation_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent) {
            return mergeFrom((nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent other) {
          if (other == nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent.getDefaultInstance()) return this;
          if (other.getLedId() != 0) {
            setLedId(other.getLedId());
          }
          if (other.getLedOn() != false) {
            setLedOn(other.getLedOn());
          }
          if (other.ledScene_ != 0) {
            setLedSceneValue(other.getLedSceneValue());
          }
          if (other.getBrightness() != 0) {
            setBrightness(other.getBrightness());
          }
          if (other.hasWrgb()) {
            mergeWrgb(other.getWrgb());
          }
          if (other.ledAnimation_ != 0) {
            setLedAnimationValue(other.getLedAnimationValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int ledId_ ;
        /**
         * <code>uint32 ledId = 1;</code>
         * @return The ledId.
         */
        @java.lang.Override
        public int getLedId() {
          return ledId_;
        }
        /**
         * <code>uint32 ledId = 1;</code>
         * @param value The ledId to set.
         * @return This builder for chaining.
         */
        public Builder setLedId(int value) {
          
          ledId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 ledId = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLedId() {
          
          ledId_ = 0;
          onChanged();
          return this;
        }

        private boolean ledOn_ ;
        /**
         * <code>bool ledOn = 2;</code>
         * @return The ledOn.
         */
        @java.lang.Override
        public boolean getLedOn() {
          return ledOn_;
        }
        /**
         * <code>bool ledOn = 2;</code>
         * @param value The ledOn to set.
         * @return This builder for chaining.
         */
        public Builder setLedOn(boolean value) {
          
          ledOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool ledOn = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLedOn() {
          
          ledOn_ = false;
          onChanged();
          return this;
        }

        private int ledScene_ = 0;
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
         * @return The enum numeric value on the wire for ledScene.
         */
        @java.lang.Override public int getLedSceneValue() {
          return ledScene_;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
         * @param value The enum numeric value on the wire for ledScene to set.
         * @return This builder for chaining.
         */
        public Builder setLedSceneValue(int value) {
          
          ledScene_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
         * @return The ledScene.
         */
        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedScene getLedScene() {
          @SuppressWarnings("deprecation")
          nest.trait.diagnostics.Diagnostics.LedTrait.LedScene result = nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.valueOf(ledScene_);
          return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedScene.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
         * @param value The ledScene to set.
         * @return This builder for chaining.
         */
        public Builder setLedScene(nest.trait.diagnostics.Diagnostics.LedTrait.LedScene value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          ledScene_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedScene ledScene = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearLedScene() {
          
          ledScene_ = 0;
          onChanged();
          return this;
        }

        private int brightness_ ;
        /**
         * <code>uint32 brightness = 4;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public int getBrightness() {
          return brightness_;
        }
        /**
         * <code>uint32 brightness = 4;</code>
         * @param value The brightness to set.
         * @return This builder for chaining.
         */
        public Builder setBrightness(int value) {
          
          brightness_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 brightness = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearBrightness() {
          
          brightness_ = 0;
          onChanged();
          return this;
        }

        private nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb wrgb_;
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder> wrgbBuilder_;
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         * @return Whether the wrgb field is set.
         */
        public boolean hasWrgb() {
          return wrgbBuilder_ != null || wrgb_ != null;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         * @return The wrgb.
         */
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getWrgb() {
          if (wrgbBuilder_ == null) {
            return wrgb_ == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.getDefaultInstance() : wrgb_;
          } else {
            return wrgbBuilder_.getMessage();
          }
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public Builder setWrgb(nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb value) {
          if (wrgbBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            wrgb_ = value;
            onChanged();
          } else {
            wrgbBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public Builder setWrgb(
            nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder builderForValue) {
          if (wrgbBuilder_ == null) {
            wrgb_ = builderForValue.build();
            onChanged();
          } else {
            wrgbBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public Builder mergeWrgb(nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb value) {
          if (wrgbBuilder_ == null) {
            if (wrgb_ != null) {
              wrgb_ =
                nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.newBuilder(wrgb_).mergeFrom(value).buildPartial();
            } else {
              wrgb_ = value;
            }
            onChanged();
          } else {
            wrgbBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public Builder clearWrgb() {
          if (wrgbBuilder_ == null) {
            wrgb_ = null;
            onChanged();
          } else {
            wrgb_ = null;
            wrgbBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder getWrgbBuilder() {
          
          onChanged();
          return getWrgbFieldBuilder().getBuilder();
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder getWrgbOrBuilder() {
          if (wrgbBuilder_ != null) {
            return wrgbBuilder_.getMessageOrBuilder();
          } else {
            return wrgb_ == null ?
                nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.getDefaultInstance() : wrgb_;
          }
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedWrgb wrgb = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder> 
            getWrgbFieldBuilder() {
          if (wrgbBuilder_ == null) {
            wrgbBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder>(
                    getWrgb(),
                    getParentForChildren(),
                    isClean());
            wrgb_ = null;
          }
          return wrgbBuilder_;
        }

        private int ledAnimation_ = 0;
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
         * @return The enum numeric value on the wire for ledAnimation.
         */
        @java.lang.Override public int getLedAnimationValue() {
          return ledAnimation_;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
         * @param value The enum numeric value on the wire for ledAnimation to set.
         * @return This builder for chaining.
         */
        public Builder setLedAnimationValue(int value) {
          
          ledAnimation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
         * @return The ledAnimation.
         */
        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation getLedAnimation() {
          @SuppressWarnings("deprecation")
          nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation result = nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.valueOf(ledAnimation_);
          return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
         * @param value The ledAnimation to set.
         * @return This builder for chaining.
         */
        public Builder setLedAnimation(nest.trait.diagnostics.Diagnostics.LedTrait.LedAnimation value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          ledAnimation_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedAnimation ledAnimation = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearLedAnimation() {
          
          ledAnimation_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.diagnostics.LedTrait.LedEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.diagnostics.LedTrait.LedEvent)
      private static final nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent();
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LedEvent>
          PARSER = new com.google.protobuf.AbstractParser<LedEvent>() {
        @java.lang.Override
        public LedEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LedEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LedEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LedEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LedFaultEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.diagnostics.LedTrait.LedFaultEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      boolean getAsserted();

      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
       * @return The type.
       */
      nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType();
    }
    /**
     * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedFaultEvent}
     */
    public static final class LedFaultEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.diagnostics.LedTrait.LedFaultEvent)
        LedFaultEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LedFaultEvent.newBuilder() to construct.
      private LedFaultEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LedFaultEvent() {
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LedFaultEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LedFaultEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                asserted_ = input.readBool();
                break;
              }
              case 256: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.Builder.class);
      }

      public static final int ASSERTED_FIELD_NUMBER = 1;
      private boolean asserted_;
      /**
       * <code>bool asserted = 1;</code>
       * @return The asserted.
       */
      @java.lang.Override
      public boolean getAsserted() {
        return asserted_;
      }

      public static final int TYPE_FIELD_NUMBER = 32;
      private int type_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
       * @return The type.
       */
      @java.lang.Override public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType() {
        @SuppressWarnings("deprecation")
        nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType result = nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.valueOf(type_);
        return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (asserted_ != false) {
          output.writeBool(1, asserted_);
        }
        if (type_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.LED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(32, type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (asserted_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, asserted_);
        }
        if (type_ != nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.LED_FAULT_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(32, type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent)) {
          return super.equals(obj);
        }
        nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent other = (nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent) obj;

        if (getAsserted()
            != other.getAsserted()) return false;
        if (type_ != other.type_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ASSERTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsserted());
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedFaultEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.diagnostics.LedTrait.LedFaultEvent)
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.Builder.class);
        }

        // Construct using nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          asserted_ = false;

          type_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent getDefaultInstanceForType() {
          return nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent build() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent buildPartial() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent result = new nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent(this);
          result.asserted_ = asserted_;
          result.type_ = type_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent) {
            return mergeFrom((nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent other) {
          if (other == nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent.getDefaultInstance()) return this;
          if (other.getAsserted() != false) {
            setAsserted(other.getAsserted());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean asserted_ ;
        /**
         * <code>bool asserted = 1;</code>
         * @return The asserted.
         */
        @java.lang.Override
        public boolean getAsserted() {
          return asserted_;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @param value The asserted to set.
         * @return This builder for chaining.
         */
        public Builder setAsserted(boolean value) {
          
          asserted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool asserted = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAsserted() {
          
          asserted_ = false;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
         * @return The type.
         */
        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType getType() {
          @SuppressWarnings("deprecation")
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType result = nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.valueOf(type_);
          return result == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType.UNRECOGNIZED : result;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.nest.trait.diagnostics.LedTrait.LedFaultType type = 32;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.diagnostics.LedTrait.LedFaultEvent)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.diagnostics.LedTrait.LedFaultEvent)
      private static final nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent();
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LedFaultEvent>
          PARSER = new com.google.protobuf.AbstractParser<LedFaultEvent>() {
        @java.lang.Override
        public LedFaultEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LedFaultEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LedFaultEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LedFaultEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LedWrgbOrBuilder extends
        // @@protoc_insertion_point(interface_extends:nest.trait.diagnostics.LedTrait.LedWrgb)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 blue = 1;</code>
       * @return The blue.
       */
      int getBlue();

      /**
       * <code>uint32 green = 2;</code>
       * @return The green.
       */
      int getGreen();

      /**
       * <code>uint32 red = 3;</code>
       * @return The red.
       */
      int getRed();

      /**
       * <code>uint32 white = 4;</code>
       * @return The white.
       */
      int getWhite();
    }
    /**
     * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedWrgb}
     */
    public static final class LedWrgb extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:nest.trait.diagnostics.LedTrait.LedWrgb)
        LedWrgbOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LedWrgb.newBuilder() to construct.
      private LedWrgb(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LedWrgb() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LedWrgb();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LedWrgb(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                blue_ = input.readUInt32();
                break;
              }
              case 16: {

                green_ = input.readUInt32();
                break;
              }
              case 24: {

                red_ = input.readUInt32();
                break;
              }
              case 32: {

                white_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder.class);
      }

      public static final int BLUE_FIELD_NUMBER = 1;
      private int blue_;
      /**
       * <code>uint32 blue = 1;</code>
       * @return The blue.
       */
      @java.lang.Override
      public int getBlue() {
        return blue_;
      }

      public static final int GREEN_FIELD_NUMBER = 2;
      private int green_;
      /**
       * <code>uint32 green = 2;</code>
       * @return The green.
       */
      @java.lang.Override
      public int getGreen() {
        return green_;
      }

      public static final int RED_FIELD_NUMBER = 3;
      private int red_;
      /**
       * <code>uint32 red = 3;</code>
       * @return The red.
       */
      @java.lang.Override
      public int getRed() {
        return red_;
      }

      public static final int WHITE_FIELD_NUMBER = 4;
      private int white_;
      /**
       * <code>uint32 white = 4;</code>
       * @return The white.
       */
      @java.lang.Override
      public int getWhite() {
        return white_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (blue_ != 0) {
          output.writeUInt32(1, blue_);
        }
        if (green_ != 0) {
          output.writeUInt32(2, green_);
        }
        if (red_ != 0) {
          output.writeUInt32(3, red_);
        }
        if (white_ != 0) {
          output.writeUInt32(4, white_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (blue_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, blue_);
        }
        if (green_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, green_);
        }
        if (red_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, red_);
        }
        if (white_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, white_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb)) {
          return super.equals(obj);
        }
        nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb other = (nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb) obj;

        if (getBlue()
            != other.getBlue()) return false;
        if (getGreen()
            != other.getGreen()) return false;
        if (getRed()
            != other.getRed()) return false;
        if (getWhite()
            != other.getWhite()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BLUE_FIELD_NUMBER;
        hash = (53 * hash) + getBlue();
        hash = (37 * hash) + GREEN_FIELD_NUMBER;
        hash = (53 * hash) + getGreen();
        hash = (37 * hash) + RED_FIELD_NUMBER;
        hash = (53 * hash) + getRed();
        hash = (37 * hash) + WHITE_FIELD_NUMBER;
        hash = (53 * hash) + getWhite();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code nest.trait.diagnostics.LedTrait.LedWrgb}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:nest.trait.diagnostics.LedTrait.LedWrgb)
          nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgbOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.class, nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.Builder.class);
        }

        // Construct using nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          blue_ = 0;

          green_ = 0;

          red_ = 0;

          white_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getDefaultInstanceForType() {
          return nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.getDefaultInstance();
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb build() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb buildPartial() {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb result = new nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb(this);
          result.blue_ = blue_;
          result.green_ = green_;
          result.red_ = red_;
          result.white_ = white_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb) {
            return mergeFrom((nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb other) {
          if (other == nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb.getDefaultInstance()) return this;
          if (other.getBlue() != 0) {
            setBlue(other.getBlue());
          }
          if (other.getGreen() != 0) {
            setGreen(other.getGreen());
          }
          if (other.getRed() != 0) {
            setRed(other.getRed());
          }
          if (other.getWhite() != 0) {
            setWhite(other.getWhite());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int blue_ ;
        /**
         * <code>uint32 blue = 1;</code>
         * @return The blue.
         */
        @java.lang.Override
        public int getBlue() {
          return blue_;
        }
        /**
         * <code>uint32 blue = 1;</code>
         * @param value The blue to set.
         * @return This builder for chaining.
         */
        public Builder setBlue(int value) {
          
          blue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 blue = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBlue() {
          
          blue_ = 0;
          onChanged();
          return this;
        }

        private int green_ ;
        /**
         * <code>uint32 green = 2;</code>
         * @return The green.
         */
        @java.lang.Override
        public int getGreen() {
          return green_;
        }
        /**
         * <code>uint32 green = 2;</code>
         * @param value The green to set.
         * @return This builder for chaining.
         */
        public Builder setGreen(int value) {
          
          green_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 green = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearGreen() {
          
          green_ = 0;
          onChanged();
          return this;
        }

        private int red_ ;
        /**
         * <code>uint32 red = 3;</code>
         * @return The red.
         */
        @java.lang.Override
        public int getRed() {
          return red_;
        }
        /**
         * <code>uint32 red = 3;</code>
         * @param value The red to set.
         * @return This builder for chaining.
         */
        public Builder setRed(int value) {
          
          red_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 red = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRed() {
          
          red_ = 0;
          onChanged();
          return this;
        }

        private int white_ ;
        /**
         * <code>uint32 white = 4;</code>
         * @return The white.
         */
        @java.lang.Override
        public int getWhite() {
          return white_;
        }
        /**
         * <code>uint32 white = 4;</code>
         * @param value The white to set.
         * @return This builder for chaining.
         */
        public Builder setWhite(int value) {
          
          white_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 white = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearWhite() {
          
          white_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:nest.trait.diagnostics.LedTrait.LedWrgb)
      }

      // @@protoc_insertion_point(class_scope:nest.trait.diagnostics.LedTrait.LedWrgb)
      private static final nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb();
      }

      public static nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LedWrgb>
          PARSER = new com.google.protobuf.AbstractParser<LedWrgb>() {
        @java.lang.Override
        public LedWrgb parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LedWrgb(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LedWrgb> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LedWrgb> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedWrgb getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int FAULTINFORMATION_FIELD_NUMBER = 1;
    private nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation faultInformation_;
    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     * @return Whether the faultInformation field is set.
     */
    @java.lang.Override
    public boolean hasFaultInformation() {
      return faultInformation_ != null;
    }
    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     * @return The faultInformation.
     */
    @java.lang.Override
    public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getFaultInformation() {
      return faultInformation_ == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.getDefaultInstance() : faultInformation_;
    }
    /**
     * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
     */
    @java.lang.Override
    public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder getFaultInformationOrBuilder() {
      return getFaultInformation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (faultInformation_ != null) {
        output.writeMessage(1, getFaultInformation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (faultInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFaultInformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nest.trait.diagnostics.Diagnostics.LedTrait)) {
        return super.equals(obj);
      }
      nest.trait.diagnostics.Diagnostics.LedTrait other = (nest.trait.diagnostics.Diagnostics.LedTrait) obj;

      if (hasFaultInformation() != other.hasFaultInformation()) return false;
      if (hasFaultInformation()) {
        if (!getFaultInformation()
            .equals(other.getFaultInformation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFaultInformation()) {
        hash = (37 * hash) + FAULTINFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getFaultInformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nest.trait.diagnostics.Diagnostics.LedTrait parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nest.trait.diagnostics.Diagnostics.LedTrait prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nest.trait.diagnostics.LedTrait}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nest.trait.diagnostics.LedTrait)
        nest.trait.diagnostics.Diagnostics.LedTraitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nest.trait.diagnostics.Diagnostics.LedTrait.class, nest.trait.diagnostics.Diagnostics.LedTrait.Builder.class);
      }

      // Construct using nest.trait.diagnostics.Diagnostics.LedTrait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nest.trait.diagnostics.Diagnostics.internal_static_nest_trait_diagnostics_LedTrait_descriptor;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait getDefaultInstanceForType() {
        return nest.trait.diagnostics.Diagnostics.LedTrait.getDefaultInstance();
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait build() {
        nest.trait.diagnostics.Diagnostics.LedTrait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nest.trait.diagnostics.Diagnostics.LedTrait buildPartial() {
        nest.trait.diagnostics.Diagnostics.LedTrait result = new nest.trait.diagnostics.Diagnostics.LedTrait(this);
        if (faultInformationBuilder_ == null) {
          result.faultInformation_ = faultInformation_;
        } else {
          result.faultInformation_ = faultInformationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nest.trait.diagnostics.Diagnostics.LedTrait) {
          return mergeFrom((nest.trait.diagnostics.Diagnostics.LedTrait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nest.trait.diagnostics.Diagnostics.LedTrait other) {
        if (other == nest.trait.diagnostics.Diagnostics.LedTrait.getDefaultInstance()) return this;
        if (other.hasFaultInformation()) {
          mergeFaultInformation(other.getFaultInformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nest.trait.diagnostics.Diagnostics.LedTrait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nest.trait.diagnostics.Diagnostics.LedTrait) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation faultInformation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder> faultInformationBuilder_;
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       * @return Whether the faultInformation field is set.
       */
      public boolean hasFaultInformation() {
        return faultInformationBuilder_ != null || faultInformation_ != null;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       * @return The faultInformation.
       */
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation getFaultInformation() {
        if (faultInformationBuilder_ == null) {
          return faultInformation_ == null ? nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.getDefaultInstance() : faultInformation_;
        } else {
          return faultInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public Builder setFaultInformation(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          faultInformation_ = value;
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public Builder setFaultInformation(
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder builderForValue) {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = builderForValue.build();
          onChanged();
        } else {
          faultInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public Builder mergeFaultInformation(nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation value) {
        if (faultInformationBuilder_ == null) {
          if (faultInformation_ != null) {
            faultInformation_ =
              nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.newBuilder(faultInformation_).mergeFrom(value).buildPartial();
          } else {
            faultInformation_ = value;
          }
          onChanged();
        } else {
          faultInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public Builder clearFaultInformation() {
        if (faultInformationBuilder_ == null) {
          faultInformation_ = null;
          onChanged();
        } else {
          faultInformation_ = null;
          faultInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder getFaultInformationBuilder() {
        
        onChanged();
        return getFaultInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      public nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder getFaultInformationOrBuilder() {
        if (faultInformationBuilder_ != null) {
          return faultInformationBuilder_.getMessageOrBuilder();
        } else {
          return faultInformation_ == null ?
              nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.getDefaultInstance() : faultInformation_;
        }
      }
      /**
       * <code>.nest.trait.diagnostics.LedTrait.LedFaultInformation faultInformation = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder> 
          getFaultInformationFieldBuilder() {
        if (faultInformationBuilder_ == null) {
          faultInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformation.Builder, nest.trait.diagnostics.Diagnostics.LedTrait.LedFaultInformationOrBuilder>(
                  getFaultInformation(),
                  getParentForChildren(),
                  isClean());
          faultInformation_ = null;
        }
        return faultInformationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nest.trait.diagnostics.LedTrait)
    }

    // @@protoc_insertion_point(class_scope:nest.trait.diagnostics.LedTrait)
    private static final nest.trait.diagnostics.Diagnostics.LedTrait DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nest.trait.diagnostics.Diagnostics.LedTrait();
    }

    public static nest.trait.diagnostics.Diagnostics.LedTrait getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LedTrait>
        PARSER = new com.google.protobuf.AbstractParser<LedTrait>() {
      @java.lang.Override
      public LedTrait parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LedTrait(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LedTrait> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LedTrait> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nest.trait.diagnostics.Diagnostics.LedTrait getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_diagnostics_LedTrait_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_diagnostics_LedTrait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_diagnostics_LedTrait_LedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034nest/trait/diagnostics.proto\022\026nest.tra" +
      "it.diagnostics\"\216\017\n\010LedTrait\022N\n\020faultInfo" +
      "rmation\030\001 \001(\01324.nest.trait.diagnostics.L" +
      "edTrait.LedFaultInformation\032d\n\023LedFaultI" +
      "nformation\022\020\n\010asserted\030\001 \001(\010\022;\n\004type\030\002 \001" +
      "(\0162-.nest.trait.diagnostics.LedTrait.Led" +
      "FaultType\032\366\001\n\010LedEvent\022\r\n\005ledId\030\001 \001(\r\022\r\n" +
      "\005ledOn\030\002 \001(\010\022;\n\010ledScene\030\003 \001(\0162).nest.tr" +
      "ait.diagnostics.LedTrait.LedScene\022\022\n\nbri" +
      "ghtness\030\004 \001(\r\0226\n\004wrgb\030\005 \001(\0132(.nest.trait" +
      ".diagnostics.LedTrait.LedWrgb\022C\n\014ledAnim" +
      "ation\030\006 \001(\0162-.nest.trait.diagnostics.Led" +
      "Trait.LedAnimation\032^\n\rLedFaultEvent\022\020\n\010a" +
      "sserted\030\001 \001(\010\022;\n\004type\030  \001(\0162-.nest.trait" +
      ".diagnostics.LedTrait.LedFaultType\032B\n\007Le" +
      "dWrgb\022\014\n\004blue\030\001 \001(\r\022\r\n\005green\030\002 \001(\r\022\013\n\003re" +
      "d\030\003 \001(\r\022\r\n\005white\030\004 \001(\r\"\220\001\n\010LedScene\022\031\n\025L" +
      "ED_SCENE_UNSPECIFIED\020\000\022\022\n\016LED_SCENE_BLUE" +
      "\020\001\022\023\n\017LED_SCENE_GREEN\020\002\022\024\n\020LED_SCENE_YEL" +
      "LOW\020\003\022\021\n\rLED_SCENE_RED\020\004\022\027\n\023LED_SCENE_PA" +
      "THLIGHT\020\005\"\217\010\n\014LedAnimation\022\035\n\031LED_ANIMAT" +
      "ION_UNSPECIFIED\020\000\022\026\n\022LED_ANIMATION_BOOT\020" +
      "\001\022\030\n\024LED_ANIMATION_STATUS\020\002\022\030\n\024LED_ANIMA" +
      "TION_BYPASS\020\003\022\025\n\021LED_ANIMATION_SWU\020\004\022\033\n\027" +
      "LED_ANIMATION_PATHLIGHT\020\005\022\027\n\023LED_ANIMATI" +
      "ON_PULSE\020\006\022\031\n\025LED_ANIMATION_PIRTEST\020\007\022\032\n" +
      "\026LED_ANIMATION_SOLID_ON\020\010\022\035\n\031LED_ANIMATI" +
      "ON_PULSE_ALARM\020\t\022\"\n\036LED_ANIMATION_PULSE_" +
      "ALARM_WAIT\020\n\022\034\n\030LED_ANIMATION_PULSE_FAST" +
      "\020\013\022!\n\035LED_ANIMATION_PULSE_FAST_WAIT\020\014\022\034\n" +
      "\030LED_ANIMATION_PULSE_SLOW\020\r\022\034\n\030LED_ANIMA" +
      "TION_PULSE_WAIT\020\016\022\030\n\024LED_ANIMATION_ROTAT" +
      "E\020\017\022\035\n\031LED_ANIMATION_ROTATE_SLOW\020\020\022\031\n\025LE" +
      "D_ANIMATION_SHIMMER\020\021\022\032\n\026LED_ANIMATION_S" +
      "IDELEFT\020\022\022\033\n\027LED_ANIMATION_SIDERIGHT\020\023\022\027" +
      "\n\023LED_ANIMATION_WAVE1\020\024\022\027\n\023LED_ANIMATION" +
      "_FLASH\020\025\022\032\n\026LED_ANIMATION_PROGRESS\020\026\022!\n\035" +
      "LED_ANIMATION_DIM_PULSES_SLOW\020\027\022 \n\034LED_A" +
      "NIMATION_NIGHTLIGHT_LOW\020\030\022#\n\037LED_ANIMATI" +
      "ON_NIGHTLIGHT_MEDIUM\020\031\022!\n\035LED_ANIMATION_" +
      "NIGHTLIGHT_HIGH\020\032\022\033\n\027LED_ANIMATION_LINE_" +
      "HIGH\020\033\022\027\n\023LED_ANIMATION_BLINK\020\034\022\034\n\030LED_A" +
      "NIMATION_BLINK_SLOW\020\035\022\"\n\036LED_ANIMATION_B" +
      "LINK_INFREQUENT\020\036\022\031\n\025LED_ANIMATION_BREAT" +
      "HE\020\037\022\036\n\032LED_ANIMATION_BREATHE_SLOW\020 \022\036\n\032" +
      "LED_ANIMATION_BREATHE_FAST\020!\022\025\n\021LED_ANIM" +
      "ATION_OFF\020\"\"\211\001\n\014LedFaultType\022\036\n\032LED_FAUL" +
      "T_TYPE_UNSPECIFIED\020\000\022\027\n\023LED_FAULT_TYPE_N" +
      "ONE\020\001\022\033\n\027LED_FAULT_TYPE_STUCK_ON\020\002\022#\n\037LE" +
      "D_FAULT_TYPE_SELF_TEST_FAILED\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_nest_trait_diagnostics_LedTrait_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_nest_trait_diagnostics_LedTrait_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_diagnostics_LedTrait_descriptor,
        new java.lang.String[] { "FaultInformation", });
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor =
      internal_static_nest_trait_diagnostics_LedTrait_descriptor.getNestedTypes().get(0);
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_diagnostics_LedTrait_LedFaultInformation_descriptor,
        new java.lang.String[] { "Asserted", "Type", });
    internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor =
      internal_static_nest_trait_diagnostics_LedTrait_descriptor.getNestedTypes().get(1);
    internal_static_nest_trait_diagnostics_LedTrait_LedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_diagnostics_LedTrait_LedEvent_descriptor,
        new java.lang.String[] { "LedId", "LedOn", "LedScene", "Brightness", "Wrgb", "LedAnimation", });
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor =
      internal_static_nest_trait_diagnostics_LedTrait_descriptor.getNestedTypes().get(2);
    internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_diagnostics_LedTrait_LedFaultEvent_descriptor,
        new java.lang.String[] { "Asserted", "Type", });
    internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor =
      internal_static_nest_trait_diagnostics_LedTrait_descriptor.getNestedTypes().get(3);
    internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nest_trait_diagnostics_LedTrait_LedWrgb_descriptor,
        new java.lang.String[] { "Blue", "Green", "Red", "White", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
